
<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script src="https://cdnjs.cloudflare.com/ajax/libs/clipboard.js/2.0.8/clipboard.min.js"></script>

<script>

async function copyToClip(str) {
  async function listener(e) {
    e.clipboardData.setData("text/html", str);
    e.clipboardData.setData("text/plain", str);
    e.preventDefault();
  }
  document.addEventListener("copy", listener);
  document.execCommand("copy");
  document.removeEventListener("copy", listener);
};

async function get_class_parity(){

  let label = document.getElementById('label_col').value;
  
  if (label === "") {
      window.alert("Label column is missing");
    }

  else {

    let fpath = ''
    let ftemp = ''
    let fname = ''

    let choice;
    if (document.getElementById('sample1').checked) {
        choice = "sample";
      }

    else{
       choice = "custom";
    }


    if(choice == "sample"){
      // sample datasets
    fpath = document.getElementById('files1').value;
    ftemp = document.getElementById('files1');
    fname = ftemp.options[ftemp.selectedIndex].text;
    }
    else{
      // uploaded datasets
      fpath = ''
      ftemp = ''
      fname = ''
    }


  document.getElementById("overlay").style.display = "block";
  let response = await fetch('/checkserver');
  let result = await response.json();

  if(JSON.stringify(result["message"]) === undefined){
    window.alert("Server is encountering a failure");
    document.getElementById("overlay").style.display = "none";
  }

  else{
    
  response = await fetch('/getclassparity?label=' + label + '&fpath=' + fpath + '&fname=' +fname);
  result = await response.json();

    var table0 = document.getElementById("job1-table");
    table0.style.display = "";

    var tbodyRef0 = document.getElementById('job1-table').getElementsByClassName('tbody0')[0];
    tbodyRef0.innerHTML = '';
    tbodyRef0 = document.getElementById('job1-table').getElementsByClassName('tbody0')[0];

    document.getElementById("display1-result").style.display = 'none';
    document.getElementById("overlay").style.display = "none"

        var val = result;
        var row = tbodyRef0.insertRow();
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1); 
        var cell3 = row.insertCell(2);

        cell1.innerHTML = val["JobID"];
        cell2.innerHTML = val["message"];

        copyToClip(val["JobID"]);
        alert('Job ID copied to Clipboard');

  }  
 } 
}

async function get_results(){

  let jobid = document.getElementById('job_id').value;

  if (jobid === "") {
      window.alert("Label column is missing");
    }
  else{

  document.getElementById("overlay").style.display = "block";

  let response = await fetch('/checkserver');
  let result = await response.json();

  if(JSON.stringify(result["message"]) === undefined){
    window.alert("Server is encountering a failure");
    document.getElementById("overlay").style.display = "none";

  }
  else{
  response = await fetch('/getresults?jobid=' + jobid);
  result = await response.json();

  if(JSON.stringify(result) === JSON.stringify({})){
      window.alert("Analysis is still in progress. Try in a while");
      document.getElementById("overlay").style.display = "none";
    }
  else{
  var table1 = document.getElementById("display1-result");
  table1.style.display = "";

  var tbodyRef1 = document.getElementById('display1-result').getElementsByClassName('tbody1')[0];
  tbodyRef1.innerHTML = '';
  tbodyRef1 = document.getElementById('display1-result').getElementsByClassName('tbody1')[0];

  var theadRef1 = document.getElementById('display1-result').getElementsByClassName('thead1')[0];
  theadRef1.innerHTML = '';
  theadRef1 = document.getElementById('display1-result').getElementsByClassName('thead1')[0];

  document.getElementById("overlay").style.display = "none";

      var val = result;
      var keys = Object.keys(val);

      var col = theadRef1.insertRow();
      var row = tbodyRef1.insertRow();

      for(var i=0; i < keys.length ; i++){
        col.insertCell(i).innerHTML = keys[i];
      }

      for(var j=0; j < keys.length ; j++){
        row.insertCell(j).innerHTML = val[keys[j]];
      }
      
      }
    }
  }
}

async function get_class_overlap(){

  let label = document.getElementById('label_col').value;
  if (label === "") {
      window.alert("Label column is missing");
    }

  else {

    let fpath = ''
    let ftemp = ''
    let fname = ''

    let choice;
    if (document.getElementById('sample1').checked) {
        choice = "sample";
      }

    else{
       choice = "custom";
    }


    if(choice == "sample"){
      // sample datasets
    fpath = document.getElementById('files1').value;
    ftemp = document.getElementById('files1');
    fname = ftemp.options[ftemp.selectedIndex].text;
    }
    else{
      // uploaded datasets
      fpath = ''
      ftemp = ''
      fname = ''
    }

  document.getElementById("overlay").style.display = "block";
  let response = await fetch('/checkserver');
  let result = await response.json();

  if(JSON.stringify(result["message"]) === undefined){
    window.alert("Server is encountering a failure");
    document.getElementById("overlay").style.display = "none";
  }
  else{

  response = await fetch('/getclassoverlap?label=' + label + '&fpath=' + fpath + '&fname=' +fname);
  result = await response.json();

  var table1 = document.getElementById("job1-table");
  table1.style.display = "";

  var tbodyRef1 = document.getElementById('job1-table').getElementsByClassName('tbody0')[0];
  tbodyRef1.innerHTML = '';
  tbodyRef1 = document.getElementById('job1-table').getElementsByClassName('tbody0')[0];

  document.getElementById("display1-result").style.display = 'none';
  document.getElementById("overlay").style.display = "none"

      var val = result;

      var row = tbodyRef1.insertRow();
      var cell1 = row.insertCell(0);
      var cell2 = row.insertCell(1); 


      cell1.innerHTML = val["JobID"];
      cell2.innerHTML = val["message"];
      copyToClip(val["JobID"]);
      alert('Job ID copied to Clipboard');
      
    }
  }

}

async function get_label_purity(){

  let label = document.getElementById('label_col').value;
  if (label === "") {
      window.alert("Label column is missing");
    }
  else{


    let fpath = ''
    let ftemp = ''
    let fname = ''

    let choice;
    if (document.getElementById('sample1').checked) {
        choice = "sample";
      }

    else{
       choice = "custom";
    }


    if(choice == "sample"){
      // sample datasets
    fpath = document.getElementById('files1').value;
    ftemp = document.getElementById('files1');
    fname = ftemp.options[ftemp.selectedIndex].text;
    }
    else{
      // uploaded datasets
      fpath = ''
      ftemp = ''
      fname = ''
    }


  document.getElementById("overlay").style.display = "block";
  let response = await fetch('/checkserver');
  let result = await response.json();

  if(JSON.stringify(result["message"]) === undefined){
    window.alert("Server is encountering a failure");
    document.getElementById("overlay").style.display = "none";
  }
  else{

  response = await fetch('/getlabelpurity?label=' + label + '&fpath=' + fpath + '&fname=' +fname);
  result = await response.json();

  var table1 = document.getElementById("job1-table");
  table1.style.display = "";

  var tbodyRef2 = document.getElementById('job1-table').getElementsByClassName('tbody0')[0];
  tbodyRef2.innerHTML = '';
  tbodyRef2 = document.getElementById('job1-table').getElementsByClassName('tbody0')[0];

  document.getElementById("display1-result").style.display = 'none';
  document.getElementById("overlay").style.display = "none"

    var val = result;

    var row = tbodyRef2.insertRow();
    var cell1 = row.insertCell(0);
    var cell2 = row.insertCell(1); 


    cell1.innerHTML = val["JobID"];
    cell2.innerHTML = val["message"];
    copyToClip(val["JobID"]);
        alert('Job ID copied to Clipboard');
  }
 }
}

async function get_outlier_detection(){

  let label = document.getElementById('label_col').value;
  if (label === "") {
      window.alert("Label column is missing");
    }
  else{


    let fpath = ''
    let ftemp = ''
    let fname = ''

    let choice;
    if (document.getElementById('sample1').checked) {
        choice = "sample";
      }

    else{
       choice = "custom";
    }


    if(choice == "sample"){
      // sample datasets
    fpath = document.getElementById('files1').value;
    ftemp = document.getElementById('files1');
    fname = ftemp.options[ftemp.selectedIndex].text;
    }
    else{
      // uploaded datasets
      fpath = ''
      ftemp = ''
      fname = ''
    }


  document.getElementById("overlay").style.display = "block";
  let response = await fetch('/checkserver');
  let result = await response.json();

  if(JSON.stringify(result["message"]) === undefined){
    window.alert("Server is encountering a failure");
    document.getElementById("overlay").style.display = "none";
  }
  else{

  response = await fetch('/getoutlierdetection?label=' + label + '&fpath=' + fpath + '&fname=' +fname);
  result = await response.json();

  var table1 = document.getElementById("job1-table");
  table1.style.display = "";

  var tbodyRef3 = document.getElementById('job1-table').getElementsByClassName('tbody0')[0];
  tbodyRef3.innerHTML = '';
  tbodyRef3 = document.getElementById('job1-table').getElementsByClassName('tbody0')[0];

  document.getElementById("display1-result").style.display = 'none';
  document.getElementById("overlay").style.display = "none"

  var val = result;

  var row = tbodyRef3.insertRow();
  var cell1 = row.insertCell(0);
  var cell2 = row.insertCell(1); 


  cell1.innerHTML = val["JobID"];
  cell2.innerHTML = val["message"];

  copyToClip(val["JobID"]);
  alert('Job ID copied to Clipboard');
  
 }
  }
}

function S1ShowHideDiv(sample1) {
        var s1choose = document.getElementById("sample1-dataset");
        s1choose.style.display = sample1.checked ? "block" : "none";
        document.getElementById("custom1-dataset").style.display = "none";
    }
  
  function C1ShowHideDiv(custom) {
        var c1choose = document.getElementById("custom1-dataset");
        c1choose.style.display = custom1.checked ? "block" : "none";
        document.getElementById("sample1-dataset").style.display = "none";
    }




window.addEventListener("load",function () {
document.getElementById("fileuploadform1").onsubmit = async (err) => {

  err.preventDefault();

  let response = await fetch('/uploaddq', {
    method: 'POST',
    body: new FormData(fileuploadform1)
  });

  let result = await response.json();

  window.alert(JSON.stringify(result["result"]));
};

})

</script>

<div id="overlay" style="display: none">
  <div class="loading" id="loading"></div>
</div>


<div id="data-quality-ai">
  <span style="color: rgb(21, 21, 21);"> Apply Data Quality Processing  </span> <hr style="border-top: 1px solid rgb(21, 21, 21);"><br>

  <label> Select type of dataset: </label>
  <input type="radio" name="dataset1" id="sample1" value="sample" onclick="S1ShowHideDiv(this)"> Use sample dataset<br>
  <input type="radio" name="dataset1" id="custom1" value="custom" onclick="C1ShowHideDiv(this)"> Upload your own dataset

  <br>
  <br>

  <div id="sample1-dataset" style="display: none">
  <label> Choose Sample Dataset to be processed: </label>
  <select id="files1" name="files1" placeholder="Choose File from dropdown">
    <option value="/projects/data-quality/DataQuality/credit-g.csv"> credit-g.csv </option>
    <option value="/projects/data-quality/DataQuality/breast-cancer.csv"> breast-cancer.csv </option>
    <option value="/projects/data-quality/DataQuality/adult.csv"> adult.csv </option>
  </select>
</div>

<div id="custom1-dataset" style="display: none">

  <label> Upload your Dataset to be processed: </label>
  <form id="fileuploadform1">
    <input type="file" name="upfile1">
    <input type="submit" value="Submit">
  </form>

</div>

<br>
    <input type="text" name="label_col" id="label_col" class="field-divided" placeholder="Label Column" size=10 /> <br> <br>


  <button type="submit" onclick="get_class_overlap()">Check Class Overlap</button>
  <button type="submit" onclick="get_class_parity()">Check Class Parity</button>
  <button type="submit" onclick="get_label_purity()">Check Label Purity</button>
  <!-- <button type="submit" onclick="get_outlier_detection()">Perform Outlier Detection</button> -->

  <br>
  <br>


  <table class = "table table-striped" id="job1-table" style="width:70%;display:none;">
    <thead>
      <tr>
        <th>Job ID</th>
        <th>Message</th>
      </tr>

    </thead>

    <tbody class="tbody0">

    </tbody>
  </table>

  <br>
  <br>
  <span style="color: rgb(21, 21, 21);"> Fetch your Data's Analysed Results </span> <hr style="border-top: 1px solid rgb(21, 21, 21);"><br>

  <input type="text" name="job_id" id="job_id" class="field-divided" placeholder="Job ID" size=10 required /> <br> <br>
  <button type="submit" onclick="get_results()">Get Results</button>

  <br>
  <br>
  <table class = "table table-striped" id="display1-result" style="width:70%;display:none;">
    <thead class="thead1">

    </thead>

    <tbody class="tbody1">

    </tbody>
  </table>


</div>

