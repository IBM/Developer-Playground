{"version":3,"sources":["components/geocodef1.js","components/geocodef2.js","components/searchf1.js","components/searchf2.js","components/weatherf1.js","components/weatherf2.js","components/alertw.js","App.js","index.js"],"names":["Geocode","useState","location","setlocation","geocodeobj","setGeocodeobj","isLoading","setLoading","errstate","seterrstate","errtext","seterrtext","buttonstate","setbuttonstate","err1status","seterr1status","err2status","seterr2status","err3status","seterr3status","Form","onSubmit","e","preventDefault","a","process","REACT_APP_mode","console","log","headers","fetch","response","json","result","JSON","stringify","items","areaToCoord","TextInput","type","id","labelText","invalid","invalidText","helperText","placeholder","size","value","onChange","target","match","className","Button","disabled","iconDescription","subtitle","timeout","onClose","title","Loading","active","description","withOverlay","DataTable","rows","key","header","getHeaderProps","TableContainer","Table","TableHead","TableRow","map","TableHeader","TableBody","row","index","TableCell","address","label","position","lat","lng","Geocode2","latitude","setlatitude","longitude","setlongitude","lterrstate","setlterrstate","lngerrstate","setlngerrstate","locationstr","concat","geocode2","Search1","areaquery","setareaquery","arerrstate","setarerrstate","arerrtext","setarerrtext","searchstr","searchsv1","Search2","lterrtext","setlterrtext","lnerrtext","setlnerrtext","searchsv2","Weather1","toString","long","dailyForecasts","weathersv1","forecastLocation","forecast","weekday","highTemperature","lowTemperature","src","iconLink","alt","Weather2","weathersv2","Alertw","alertdata","setalertdata","alertsv","alerts","country","state","App","href","prefix","Style","Tabs","Tab","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5cf6b5d6.chunk.js","sourcesContent":["import React, { useState} from 'react';\nimport { Button,TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer} from 'carbon-components-react';\nimport raw from 'raw.macro';\n\nfunction Geocode() {\n  const [location, setlocation] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n  const [errstate, seterrstate] = useState(false); \n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [err1status, seterr1status] = useState(false);  \n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    if (location) {\n        \n        const areaToCoord = async() => {\n\n        try{\n\n              if(process.env.REACT_APP_mode === \"dev\"){\n                \n                  console.log(\"Mode is : DEV\");\n                  const authtoken = raw('./auth.txt');\n                  \n                  let headers = {'Authorization' : authtoken}\n                  let response = await fetch(`https://geocode.search.hereapi.com/v1/geocode?q=${location}`,{ headers})\n                  let result = await response.json();\n\n                   setGeocodeobj({...result})\n                  setLoading(false);\n\n                if(JSON.stringify(result.items) === '[]'){\n                      seterr3status(true);\n                      setGeocodeobj({});\n                     }\n                }\n              \n                else{\n                  console.log(\"not dev mode\");\n                  let response = await fetch(`/addrgeocode?queryst=${location}`);\n                  let result = await response.json();\n\n                  setGeocodeobj({...result})\n                  setLoading(false);\n\n                  if(JSON.stringify(result.items) === '[]'){\n                    seterr3status(true);\n                    setGeocodeobj({});\n                    }\n                }\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n        areaToCoord();\n\n      setlocation('');\n      \n    } \n    \n    else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'address',\n    header: 'Address',\n  },\n    {\n    key: 'location',\n    header: 'Location',\n  },\n];\n\n  function err1closef() {\n    seterr1status(false);\n  }\n  function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n\nconst validLocf = (e) => {\n\n      if(!e.target.value.match(/^[a-zA-Z]+$/)){\n              seterrstate(true)\n              seterrtext(\"Only letters allowed. No special characters or numbers\");\n              setbuttonstate(true)\n           }\n      else{\n            seterrstate(false)\n            setbuttonstate(false)\n        }        \n            \n      setlocation(e.target.value)\n    \n    \n}\n\n  return (\n    <>\n    <Form onSubmit={handleSubmit}>\n      <TextInput type = \"text\" id={'location'} labelText = {'Location*'}  invalid = {errstate} invalidText = {errtext} helperText=\"Input values only in alphabets - City/Town/Street.\" placeholder = {'Location'} size = 'lg' value={location} onChange={validLocf} />\n      <div className=\"ButtonArea\">\n        <Button type=\"submit\" disabled = {buttonstate} > Get Area Co-ordinates </Button>\n      </div>\n      \n    </Form>\n\n  {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Location input is empty. Please fill a valid Location</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n\n      {geocodeobj.items && \n         <div className = \"TableDisplay\" >\n\n          {geocodeobj.items && \n          \n          <DataTable rows={geocodeobj.items} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Location Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.items && geocodeobj.items.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.title}</TableCell>\n                        <TableCell>{row.address.label}</TableCell>\n                        <TableCell>{row.position.lat + \",\" + row.position.lng}</TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>}\n\n    </>\n  );\n};\n\nexport default Geocode;","import React, { useState} from 'react';\nimport raw from 'raw.macro';\nimport { Button, TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer} from 'carbon-components-react';\n\nfunction Geocode2() {\n\n  const [latitude, setlatitude] = useState('');\n  const [longitude, setlongitude] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n  \n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [lterrstate, setlterrstate] = useState(false);\n  const [lngerrstate, setlngerrstate] = useState(false);\n\n  const [err1status, seterr1status] = useState(false); \n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n      \n\n  if (latitude && longitude) {\n\n        const locationstr = latitude.concat(',').concat(longitude);\n      \n        const geocode2 = async() => {\n\n        try{\n        \n          if(process.env.REACT_APP_mode === \"dev\"){\n\n            console.log(\"Mode is : DEV\");\n            const authtoken = raw('./auth.txt');\n            let headers = {'Authorization' : authtoken}\n            let response = await fetch(`https://revgeocode.search.hereapi.com/v1/revgeocode?at=${locationstr}`,{ headers})\n            let result = await response.json();\n\n\n          setGeocodeobj({...result});\n          setLoading(false);\n\n          if(JSON.stringify(result.items) === '[]'){\n            seterr3status(true);\n            setGeocodeobj({});\n          }\n        }\n\n        else{\n          console.log(\"not dev mode\");\n          let response = await fetch(`/revaddrgeocode?location=${locationstr}`);\n          let result = await response.json();\n          \n          setGeocodeobj({...result});\n          setLoading(false);\n\n          if(JSON.stringify(result.items) === '[]'){\n            seterr3status(true);\n            setGeocodeobj({});\n          }\n        \n        }\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      geocode2();\n      setlatitude('');\n      setlongitude('');\n\n      }\n    \n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'address',\n    header: 'Address',\n  },\n    {\n    key: 'location',\n    header: 'Location',\n  },\n];\n\n\nconst validLatf = (e) => {\n\n        if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?){2}$/)){\n              setlterrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlterrstate(false)\n            setbuttonstate(false)\n        }        \n    \n        setlatitude(e.target.value)\n    \n    \n}\nconst validLongf = (e) => {\n\n        if(!e.target.value.match(/^\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setlngerrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlngerrstate(false)\n            setbuttonstate(false)\n        }        \n\n        setlongitude(e.target.value)\n    \n    \n}\n\nfunction err1closef() {\n  seterr1status(false);\n}\nfunction err2closef() {\n  seterr2status(false);\n}\nfunction err3closef() {\n  seterr3status(false);\n}\n  return (\n    <>\n\n    <Form onSubmit={handleSubmit}>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'latitude'} labelText = {'Latitude*'} invalid = {lterrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Latitude'} size = 'lg' value={latitude} onChange={validLatf} />\n       </div>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'longitude'} labelText = {'Longitude*'} invalid = {lngerrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Longitude'} size = 'lg' value={longitude} onChange={validLongf} />\n      </div>\n      \n      <div className=\"CButtonArea\" >\n        <Button type=\"submit\" disabled = {buttonstate}> Get Places Near You </Button>\n      </div>\n\n      </Form>\n\n  {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude  values cannot be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No data results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n\n\n      {geocodeobj.items && \n         <div className = \"TableDisplay\">\n              {geocodeobj.items && \n          \n          <DataTable rows={geocodeobj.items} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Location Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.items && geocodeobj.items.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.title}</TableCell>\n                        <TableCell>{row.address.label}</TableCell>\n                        <TableCell>{row.position.lat + \",\" + row.position.lng}</TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>}\n\n\n    </>\n  );\n};\n\nexport default Geocode2;\n","import React, { useState} from 'react';\nimport raw from 'raw.macro';\nimport { Button,TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer} from 'carbon-components-react';\n\nfunction Search1(){\n\n  const [location, setlocation] = useState('');\n  const [areaquery, setareaquery] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n  const [errstate, seterrstate] = useState(false);\n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [arerrstate, setarerrstate] = useState(false);\n  const [arerrtext, setarerrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n     if (location && areaquery) {\n\n        const searchstr = location.concat('+').concat(areaquery);\n\n        const searchsv1 = async() => {\n\n        try{\n        \n          if(process.env.REACT_APP_mode === \"dev\"){\n            console.log(\"Mode is : DEV\");\n\n            const authtoken = raw('./auth.txt');\n            let headers = {'Authorization' : authtoken}\n            let response = await fetch(`https://geocode.search.hereapi.com/v1/geocode?q=${searchstr}`,{ headers})\n            let result = await response.json();\n\n            setGeocodeobj({...result});\n            setLoading(false);\n\n          if(JSON.stringify(result.items) === '[]'){\n            seterr3status(true);\n            setGeocodeobj({});\n          }\n        }\n        else{\n          \n          console.log(\"not dev mode\");\n          let response = await fetch(`/liststores?query=${searchstr}`);\n          let result = await response.json();\n          \n          setGeocodeobj({...result});\n          setLoading(false);\n\n          if(JSON.stringify(result.items) === '[]'){\n            seterr3status(true);\n            setGeocodeobj({});\n          }\n        }\n \n        }\n        catch(error){\n             seterr2status(true);\n             setLoading(false);\n        }\n        }\n         searchsv1();\n         setlocation('');\n         setareaquery('');\n      }\n    \n      else {\n       seterr1status(true);\n       setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'address',\n    header: 'Address',\n  },\n    {\n    key: 'location',\n    header: 'Location',\n  },\n];\n\nconst validLoc = (e) => {\n\n      if(!e.target.value.match(/^[a-zA-Z]+$/)){\n              seterrstate(true)\n              seterrtext(\"Only letters allowed. No special characters or numbers\");\n              setbuttonstate(true)\n          }\n      else{\n            seterrstate(false)\n            setbuttonstate(false)\n        }        \n      setlocation(e.target.value);\n}\n\nconst validArea = (e) => {\n\n      if(!e.target.value.match(/^[a-zA-Z]+$/)){\n              setarerrstate(true)\n              setarerrtext(\"Only letters allowed. No special characters or numbers\");\n              setbuttonstate(true)\n           }\n      else{\n            setarerrstate(false)\n            setbuttonstate(false)\n        }        \n\n        setareaquery(e.target.value);\n}\n\nfunction err1closef() {\n  seterr1status(false);\n}\nfunction err2closef() {\n  seterr2status(false);\n}\nfunction err3closef() {\n  seterr3status(false);\n}\n\n  return (\n    <>\n\n      <Form onSubmit={handleSubmit}>\n\n    <div className=\"TextArea\" >\n      <TextInput id={'location'} labelText = {'Location*'} size = 'lg' invalid = {errstate} invalidText = {errtext} helperText=\"Input values only in alphabets - City/Town/Street.\" placeholder = {'Location'} value={location} onChange={validLoc} /> <br/>\n    </div>\n\n     <div className=\"TextArea\" >\n      <TextInput id={'area-query'} labelText = {'Area*'} size = 'lg' invalid = {arerrstate} invalidText = {arerrtext} helperText=\"Input values only in alphabets - Public places/Hotels/Restaurants.\" placeholder = {'Query: Area/Address'} value={areaquery} onChange={validArea} />\n      </div>\n      \n      <br/>\n      <div className=\"CButtonArea\">\n        <Button type=\"submit\" disabled = {buttonstate} > Get Places Near You </Button>\n      </div>\n\n      </Form>\n\n      {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Location and Area input is empty. Please fill a valid Location and area</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No data results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n\n       {geocodeobj.items && \n         <div className = \"TableDisplay\" >\n\n                    {geocodeobj.items && \n          \n          <DataTable rows={geocodeobj.items} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Search Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.items && geocodeobj.items.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.title}</TableCell>\n                        <TableCell>{row.address.label}</TableCell>\n                        <TableCell>{row.position.lat + \",\" + row.position.lng}</TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n\n        </div>}\n\n    </>\n  );\n};\n\nexport default Search1;\n","import React, { useState} from 'react';\nimport raw from 'raw.macro';\nimport { Button,TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer} from 'carbon-components-react';\n\nfunction Search2() {\n\n  const [latitude, setlatitude] = useState('');\n  const [longitude, setlongitude] = useState('');\n  const [areaquery, setareaquery] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n  const [lterrstate, setlterrstate] = useState(false);\n  const [lngerrstate, setlngerrstate] = useState(false);\n  const [arerrstate, setarerrstate] = useState(false);\n  const [arerrtext, setarerrtext] = useState('A valid value is required');\n  const [lterrtext, setlterrtext] = useState('A valid value is required');\n  const [lnerrtext, setlnerrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n\n    const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n            \n    if (latitude && longitude && areaquery) {\n\n    const locationstr = latitude.concat(',').concat(longitude);\n      \n        const searchsv2 = async() => {\n\n        try{\n        \n          if(process.env.REACT_APP_mode === \"dev\"){\n            console.log(\"Mode is : DEV\");\n          const authtoken = raw('./auth.txt');\n          let headers = {'Authorization' : authtoken}\n          let response = await fetch(`https://discover.search.hereapi.com/v1/discover?q=${areaquery}&at=${locationstr}`,{ headers})\n          let result = await response.json();\n\n           setGeocodeobj({...result});\n          setLoading(false);\n          \n          if(JSON.stringify(result.items) === '[]'){\n             seterr3status(true);\n             setGeocodeobj({});\n          }\n        }\n        else{\n          \n          console.log(\"not dev mode\");\n          let response = await fetch(`/categorychain?location=${locationstr}&query=${areaquery}`);\n          let result = await response.json();\n\n          setGeocodeobj({...result});\n          setLoading(false);\n          \n          if(JSON.stringify(result.items) === '[]'){\n             seterr3status(true);\n             setGeocodeobj({});\n          }\n        }\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      \n        searchsv2();\n        setlatitude('');\n        setlongitude('');\n        setareaquery('');\n    }\n  \n    else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n  \nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'address',\n    header: 'Address',\n  },\n    {\n    key: 'location',\n    header: 'Location',\n  },\n];\n\nconst validArea = (e) => {\n\n      if(!e.target.value.match(/^[a-zA-Z]+$/)){\n              setarerrstate(true)\n              setarerrtext(\"Only letters allowed. No special characters or numbers\");\n              setbuttonstate(true)\n           }\n      else{\n            setarerrstate(false)\n            setbuttonstate(false)\n        }        \n        setareaquery(e.target.value);\n}\n\nconst validLatf = (e) => {\n\n      if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?){2}$/)){\n              setlterrstate(true)\n              setlterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n      else{\n            setlterrstate(false)\n            setbuttonstate(false)\n        }        \n        \n        setlatitude(e.target.value)\n    \n    \n}\n\nconst validLongf = (e) => {\n\n      if(!e.target.value.match(/^\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setlngerrstate(true)\n              setlnerrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n          }\n      \n      else{\n            setlngerrstate(false)\n            setbuttonstate(false)\n        }        \n        \n      setlongitude(e.target.value)\n    \n}\n\n  function err1closef() {\n    seterr1status(false);\n  }\n  function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n\n\n  return (\n    <>\n\n    <Form onSubmit={handleSubmit}>\n\n    <div className=\"TextArea\" >\n      <TextInput id={'latitude'} labelText = {'Latitude*'} size = 'lg' invalid = {lterrstate} invalidText = {lterrtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Latitude'} value={latitude} onChange={validLatf} /><br/>\n    </div>\n    <div className=\"TextArea\" > \n      <TextInput id={'longitude'} labelText = {'Longitude*'} size = 'lg' invalid = {lngerrstate} invalidText = {lnerrtext}  helperText=\"Add valid co-ordinates.\" placeholder = {'Longitude'} value={longitude} onChange={validLongf} /><br/>\n    </div>\n    <div className=\"TextArea\" >  \n      <TextInput id={'area-query'} labelText = {'Area*'} size = 'lg' invalid = {arerrstate} invalidText = {arerrtext} helperText=\"Input values only in alphabets - Public places/Hotels/Restaurants.\" placeholder = {'Query: Area/Address'} value={areaquery} onChange={validArea} />\n    </div>  \n      <br/>\n      <div className=\"CButtonArea\">\n        <Button type=\"submit\" disabled = {buttonstate} > Get Places Near You </Button>\n      </div>\n\n      </Form>\n\n       {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude, Area values cannot be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No data results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n        {geocodeobj.items && \n         <div className = \"TableDisplay\" >\n\n\n          {geocodeobj.items && \n          \n          <DataTable rows={geocodeobj.items} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Search Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.items && geocodeobj.items.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.title}</TableCell>\n                        <TableCell>{row.address.label}</TableCell>\n                        <TableCell>{row.position.lat + \",\" + row.position.lng}</TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>}\n\n\n    </>\n  );\n};\n\nexport default Search2;\n","import React, { useState} from 'react';\nimport raw from 'raw.macro';\nimport { Button,TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer} from 'carbon-components-react';\n\nfunction Weather1() {\n\n  const [location, setlocation] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [errstate, seterrstate] = useState(false);\n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [isLoading,setLoading] = useState(false);\n\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    if (location) {\n          \n        const weathersv1 = async() => {\n\n        try{\n        \n           if(process.env.REACT_APP_mode === \"dev\"){\n            console.log(\"Mode is : DEV\");\n\n          const authtoken = raw('./auth.txt');\n            let headers = {'Authorization' : authtoken}\n            let response = await fetch(`https://geocode.search.hereapi.com/v1/geocode?q=${location}`,{ headers})\n            let result = await response.json();\n\n            let lat = result.items[0][\"position\"][\"lat\"].toString();\n            let long = result.items[0][\"position\"][\"lng\"].toString();\n            \n            response = await fetch(`https://weather.cc.api.here.com/weather/1.0/report.json?product=forecast_7days_simple&latitude=${lat}&longitude=${long}`,{ headers})\n            result = await response.json();\n\n            setGeocodeobj({...result});\n            setLoading(false);\n\n          if(JSON.stringify(result.dailyForecasts) === '[]'){\n            seterr3status(true);\n            setGeocodeobj({});\n          }\n        }\n        else{\n          console.log(\"not dev mode\");\n            let response = await fetch(`/addrgeocode?queryst=${location}`);\n            let result = await response.json();\n\n            let lat = result.items[0][\"position\"][\"lat\"].toString();\n            let long = result.items[0][\"position\"][\"lng\"].toString();\n\n            response = await fetch(`/getweeklyforecast?lat=${lat}&long=${long}`);\n            result = await response.json();\n\n          setGeocodeobj({...result});\n          setLoading(false);\n\n          if(JSON.stringify(result.dailyForecasts) === '[]'){\n            seterr3status(true);\n            setGeocodeobj({});\n          }\n        }\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n\n        }\n\n        }\n          weathersv1();\n          setlocation('');\n      }\n    \n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'day',\n    header: 'Day',\n  },\n  {\n    key: 'description',\n    header: 'Description',\n  },\n    {\n    key: 'max temperature',\n    header: 'Max Temperature',\n  },\n      {\n    key: 'min temperature',\n    header: 'Min Temperature',\n  },\n        {\n    key: 'weathericon',\n    header: '',\n  },\n  \n];\n\nconst validLocf = (e) => {\n\n      if(!e.target.value.match(/^[a-zA-Z]+$/)){\n              seterrstate(true)\n              seterrtext(\"Only letters allowed. No special characters or numbers\");\n              setbuttonstate(true)\n           }\n      else{\n            seterrstate(false)\n            setbuttonstate(false)\n        }        \n        \n      setlocation(e.target.value)\n    \n}\n\nfunction err1closef() {\n  seterr1status(false);\n}\nfunction err2closef() {\n  seterr2status(false);\n}\nfunction err3closef() {\n  seterr3status(false);\n}\n\n\n  return (\n    <>\n\n    <Form onSubmit={handleSubmit}>\n\n      <TextInput id={'location'} labelText = {'Location*'} size = 'lg' invalid = {errstate} invalidText = {errtext} helperText=\"Input values only in alphabets - City/Town/Street.\" placeholder = {'Location'} value={location} onChange={validLocf} />\n      <br/>\n      <div className=\"ButtonArea\">\n         <Button type=\"submit\" disabled = {buttonstate} > Get Weather Forecast </Button>\n      </div>\n    </Form>\n\n{err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Location input is empty. Please fill a valid Location</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n        {geocodeobj.dailyForecasts &&     \n        \n        <div className = \"TableDisplay\">\n\n                {geocodeobj.dailyForecasts && \n          \n          <DataTable rows={geocodeobj.dailyForecasts.forecastLocation.forecast} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Weather Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.dailyForecasts && geocodeobj.dailyForecasts.forecastLocation.forecast.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.weekday}</TableCell>\n                        <TableCell>{row.description}</TableCell>\n                        <TableCell>{row.highTemperature}</TableCell>\n                        <TableCell>{row.lowTemperature}</TableCell>\n                        <TableCell><img src={row.iconLink} alt=\"Logo\" /></TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>}\n\n    </>\n  );\n};\n\nexport default Weather1;\n","import React, { useState} from 'react';\nimport raw from 'raw.macro';\nimport { Button,TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer} from 'carbon-components-react';\n\nfunction Weather2() {\n\n  const [latitude, setlatitude] = useState('');\n  const [longitude, setlongitude] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n  const [lterrstate, setlterrstate] = useState(false);\n  const [lngerrstate, setlngerrstate] = useState(false);\n  const [lterrtext, setlterrtext] = useState('A valid value is required');\n  const [lnerrtext, setlnerrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    if (latitude && longitude) {\n      \n        const weathersv2 = async() => {\n\n        try{\n        \n          if(process.env.REACT_APP_mode === \"dev\"){\n            console.log(\"Mode is : DEV\");\n          const authtoken = raw('./auth.txt');\n            \n          let headers = {'Authorization' : authtoken}\n            let response = await fetch(`https://weather.cc.api.here.com/weather/1.0/report.json?product=forecast_7days_simple&latitude=${latitude}&longitude=${longitude}`,{ headers})\n            let result = await response.json();\n            \n            setGeocodeobj({...result});\n            setLoading(false);\n          \n            if(JSON.stringify(result.dailyForecasts) === '[]'){\n            seterr3status(true); \n            setGeocodeobj({});\n          }\n        }\n\n        else{\n\n            let response = await fetch(`/getweeklyforecast?lat=${latitude}&long=${longitude}`);\n            let result = await response.json();\n\n          setGeocodeobj({...result});\n          setLoading(false);\n          if(JSON.stringify(result.dailyForecasts) === '[]'){\n            seterr3status(true); \n            setGeocodeobj({});\n          }\n        }\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n          weathersv2();\n          setlatitude('');\n          setlongitude('');\n      }\n      \n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\n\nconst headers = [\n  {\n    key: 'day',\n    header: 'Day',\n  },\n  {\n    key: 'description',\n    header: 'Description',\n  },\n    {\n    key: 'max temperature',\n    header: 'Max Temperature',\n  },\n      {\n    key: 'min temperature',\n    header: 'Min Temperature',\n  },\n        {\n    key: 'weathericon',\n    header: '',\n  },\n  \n];\n\nconst validLatf = (e) => {\n\n         if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?){2}$/)){\n              setlterrstate(true)\n              setlterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlterrstate(false)\n            setbuttonstate(false)\n        }        \n        \n        setlatitude(e.target.value)\n    \n    \n}\nconst validLongf = (e) => {\n\n         if(!e.target.value.match(/^\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setlngerrstate(true)\n              setlnerrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlngerrstate(false)\n            setbuttonstate(false)\n        }        \n        \n        setlongitude(e.target.value)\n    \n    \n}\n\n  function err1closef() {\n    seterr1status(false);\n  }\n  function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n\n\n  return (\n    <>\n\n      <Form onSubmit={handleSubmit}>\n\n    <div className=\"TextArea\" >\n      <TextInput id={'latitude'} labelText = {'Latitude*'} size = 'lg' invalid = {lterrstate} invalidText = {lterrtext}  helperText=\"Add valid co-ordinates.\" placeholder = {'Latitude'} value={latitude} onChange={validLatf} /> <br/>\n    </div>\n    <div className=\"TextArea\" >  \n      <TextInput id={'longitude'} labelText = {'Longitude*'} size = 'lg' invalid = {lngerrstate} invalidText = {lnerrtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Longitude'} value={longitude} onChange={validLongf} />\n    </div>  \n      <br/>\n       <div className=\"CButtonArea\">\n         <Button type=\"submit\" disabled = {buttonstate} > Get Weather Forecast </Button>\n       </div>\n\n      </Form>\n\n\n       {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude values cannot be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No data results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n\n         {geocodeobj.dailyForecasts &&     \n        \n        <div className = \"TableDisplay\">\n\n              {geocodeobj.dailyForecasts && \n          \n          <DataTable rows={geocodeobj.dailyForecasts.forecastLocation.forecast} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Weather Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.dailyForecasts && geocodeobj.dailyForecasts.forecastLocation.forecast.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.weekday}</TableCell>\n                        <TableCell>{row.description}</TableCell>\n                        <TableCell>{row.highTemperature}</TableCell>\n                        <TableCell>{row.lowTemperature}</TableCell>\n                        <TableCell><img src={row.iconLink} alt=\"Logo\" /></TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                 </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>}\n\n    </>\n  );\n};\n\nexport default Weather2;\n","import React, { useState} from 'react';\nimport raw from 'raw.macro';\nimport { Button,TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer} from 'carbon-components-react';\n\nfunction Alertw() {\n\n  const [location, setlocation] = useState('');\n  const [alertdata, setalertdata] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [errstate, seterrstate] = useState(false);\n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [isLoading,setLoading] = useState(false);\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n\n  const handleSubmit = (e) => {\n     e.preventDefault();\n     setLoading(true);\n  \n    if (location) {\n\n        const alertsv = async() => {\n\n        try{\n        \n           if(process.env.REACT_APP_mode === \"dev\"){\n\n            console.log(\"Mode is : DEV\");\n            const authtoken = raw('./auth.txt');\n\n            let headers = {'Authorization' : authtoken}\n            let response = await fetch(`https://weather.cc.api.here.com/weather/1.0/report.json?product=alerts&name=${location}`,{ headers})\n            let result = await response.json();\n\n            if(JSON.stringify(result[\"alerts\"][\"alerts\"]) !== '[]'){\n            setalertdata(result[\"alerts\"][\"alerts\"][0][\"description\"]);\n            }\n            else{\n              setalertdata('No Severe Weather')\n            }\n          \n            setGeocodeobj({...result});\n            setLoading(false);\n          }\n\n          else{     \n            console.log(\"not dev mode\");\n            let response = await fetch(`/getalerts?city=${location}`);\n            let result = await response.json();\n\n            \n            if(JSON.stringify(result[\"alerts\"][\"alerts\"]) !== '[]'){\n                setalertdata(result[\"alerts\"][\"alerts\"][0][\"description\"]);\n            }\n            else{\n                setalertdata('No Severe Weather')\n            }\n          \n          setGeocodeobj({...result});\n          setLoading(false);\n        }\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      alertsv();\n      setlocation('');\n      }\n    else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'country',\n    header: 'Country',\n  },\n  {\n    key: 'state',\n    header: 'State',\n  },\n    {\n    key: 'latitude',\n    header: 'Latitude',\n  },\n      {\n    key: 'longitude',\n    header: 'Longitude',\n  },\n        {\n    key: 'alert',\n    header: 'Alert',\n  },\n  \n];\n\nconst validLocf = (e) => {\n\n      if(!e.target.value.match(/^[a-zA-Z]+$/)){\n              seterrstate(true)\n              seterrtext(\"Only letters allowed. No special characters or numbers\");\n              setbuttonstate(true)\n           }\n      \n      else{\n            seterrstate(false)\n            setbuttonstate(false)\n        }        \n        \n        setlocation(e.target.value)\n  \n}\n\n  function err1closef() {\n    seterr1status(false);\n  }\n  function err2closef() {\n    seterr2status(false);\n  }\n\n  return (\n    <>\n      \n       <Form onSubmit={handleSubmit}>\n\n      <TextInput id={'location'} labelText = {'Location*'} size = 'lg' invalid = {errstate} invalidText = {errtext} helperText=\"Input values only in alphabets - City/Town/Street.\" placeholder = {'Location'} value={location} onChange={validLocf} />\n      <br/>\n      <div className=\"ButtonArea\">\n        <Button type=\"submit\" disabled = {buttonstate} > Get Extreme Weather Warning </Button>\n      </div>\n      \n      </Form>\n        \n    {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Location input is empty. Please fill a valid Location</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n\n        <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n         {geocodeobj.alerts &&  <div className = \"TableDisplay\" >\n\n              \n              {geocodeobj.alerts && \n          \n          <DataTable rows={geocodeobj.alerts.alerts} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Alerts Result\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.alerts && \n               \n\n                      <TableRow >\n\n                        <TableCell>{geocodeobj.alerts.country}</TableCell>\n                        <TableCell>{geocodeobj.alerts.state}</TableCell>\n                        <TableCell>{geocodeobj.alerts.latitude}</TableCell>\n                        <TableCell>{geocodeobj.alerts.longitude}</TableCell>\n                        <TableCell>{alertdata}</TableCell>\n                      </TableRow>\n\n               \n            }\n                  </TableBody>\n                </Table>\n                 </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>}\n\n    </>\n  );\n};\n\nexport default Alertw;\n","import React from \"react\";\nimport \"./App.css\";\nimport { Tabs, Tab } from \"carbon-components-react\";\nimport {\n  Header,\n  HeaderName,\n} from \"carbon-components-react/lib/components/UIShell\";\n\nimport Geocode1 from \"./components/geocodef1\";\nimport Geocode2 from \"./components/geocodef2\";\nimport Search1 from \"./components/searchf1\";\nimport Search2 from \"./components/searchf2\";\nimport Weather1 from \"./components/weatherf1\";\nimport Weather2 from \"./components/weatherf2\";\nimport Alertw from \"./components/alertw\";\n\nfunction App() {\n  return (\n    <>\n      <Header aria-label=\"IBM\">\n        <HeaderName href=\"#\" prefix=\"\">\n          <div Style=\"white-space: nowrap;\">\n            HERE Geocoding Sample Application\n          </div>\n        </HeaderName>\n      </Header>\n\n      <div className=\"App\">\n        <div className=\"AppContent\">\n          <br />\n          <br />\n          <br />\n          <br />\n\n          <h2>Location Details</h2>\n          <br />\n          <br />\n          <Tabs type=\"container\">\n            <Tab id=\"tab-g1\" label=\"Get Co-ordinates\">\n              <div className=\"TabArea\">\n              <Geocode1 />\n              </div>\n            </Tab>\n            <Tab id=\"tab-g2\" label=\"Get Area\">\n              <div className=\"TabArea\">\n              <Geocode2 />\n              </div>\n            </Tab>\n          </Tabs>\n\n          <h2>Search Services</h2>\n          <br />\n          <br />\n          <Tabs type=\"container\">\n            <Tab id=\"tab-s1\" label=\"By Area\">\n              <div className=\"TabArea\">\n              <Search1 />\n              </div>\n            </Tab>\n            <Tab id=\"tab-s2\" label=\"By Co-ordinates\">\n              <div className=\"TabArea\">\n              <Search2 />\n              </div>\n            </Tab>\n          </Tabs>\n\n          <h2> Weather Services </h2>\n          <br />\n          <br />\n          <Tabs type=\"container\">\n            <Tab id=\"tab-w1\" label=\"By Area\">\n              <div className=\"TabArea\">\n              <Weather1 />\n              </div>\n            </Tab>\n            <Tab id=\"tab-w2\" label=\"By Co-ordinates\">\n              <div className=\"TabArea\">\n              <Weather2 />\n              </div>\n            </Tab>\n          </Tabs>\n\n          <h2> Extreme Weather Warnings </h2>\n          <br />\n          <br />\n          <Alertw />\n          <br />\n        </div>\n      </div>\n    </>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.scss\";\nimport \"./style.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}