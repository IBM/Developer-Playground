{"version":3,"sources":["components/geocodef1.js","components/geocodef2.js","components/transitf1.js","components/transitf2.js","components/mapf1.js","components/mapf2.js","App.js","index.js"],"names":["Geocode","useState","location","setlocation","errstate","seterrstate","errtext","seterrtext","buttonstate","setbuttonstate","geocodeobj","setGeocodeobj","isLoading","setLoading","err1status","seterr1status","err2status","seterr2status","err3status","seterr3status","Form","onSubmit","e","preventDefault","a","process","REACT_APP_mode","console","log","headers","fetch","response","json","result","JSON","stringify","items","areaToCoord","TextInput","type","id","labelText","invalid","invalidText","helperText","placeholder","size","value","onChange","target","match","className","Button","disabled","iconDescription","subtitle","timeout","onClose","title","Loading","active","description","withOverlay","DataTable","rows","key","header","getHeaderProps","TableContainer","Table","TableHead","TableRow","map","TableHeader","TableBody","row","index","TableCell","address","label","position","lat","lng","Geocode2","latitude","setlatitude","longitude","setlongitude","lterrstate","setlterrstate","lngerrstate","setlngerrstate","locationstr","concat","geocode2","Transit1","stations","searchsv2","place","name","Transit2","radius","setradius","depobj","setdepobj","locerrstate","setlocerrstate","locerrtext","setlocerrtext","raderrstate","setraderrstate","raderrtext","setraderrtext","err4status","seterr4status","displaydeparture","depvalue","boards","departures","locstr","toString","hasOwnProperty","transt1","Link","onClick","depval","time","word","transport","mode","toUpperCase","substring","toLowerCase","headsign","Mapf1","fromcoord","setfromcoord","tocoord","settocoord","fcerrstate","setfcerrstate","fcerrtext","setfcerrtext","tcerrstate","settcerrstate","tcerrtext","settcerrtext","modes","modequery","setmodequery","mapdisplay1","setmapdisplay1","mapsv","apikey","keyresponse","keyresult","calculateRouteFromAtoB","platform","router","getPublicTransitService","routeRequestParams","origin","destination","return","getRoutes","onSuccess","onError","route","routes","addRouteShapeToMap","addManueversToMap","addManueversToPanel","addSummaryToPanel","error","document","getElementById","innerHTML","openBubble","text","bubble","setPosition","setContent","open","H","ui","InfoBubble","content","addBubble","group","Group","sections","forEach","section","addObject","Polyline","geo","LineString","fromFlexiblePolyline","polyline","style","lineWidth","strokeColor","getViewModel","setLookAtData","bounds","getBoundingBox","err","i","dotIcon","Icon","anchor","x","y","poly","getLatLngAltArray","actions","length","action","marker","Marker","offset","icon","instruction","addEventListener","evt","setCenter","getGeometry","duration","distance","travelSummary","summaryDiv","createElement","toMMSS","fontSize","marginLeft","marginRight","routeInstructionsContainer","appendChild","nodeOL","idx","li","spanArrow","spanInstruction","direction","mapContainer","service","Platform","defaultLayers","createDefaultLayers","Map","vector","normal","center","zoom","pixelRatio","window","devicePixelRatio","getViewPort","resize","mapevents","Behavior","MapEvents","UI","createDefault","Number","prototype","Math","floor","this","setTimeout","getRoutingService","routingMode","transportMode","calculateRoute","addWaypointsToPanel","linestring","nodeH3","labels","push","turnByTurnActions","nextRoad","currentRoad","textContent","join","Select","event","item","SelectItem","Mapf2","fromloc","setfromloc","toloc","settoloc","ferrstate","setferrstate","ferrtext","setferrtext","terrstate","setterrstate","terrtext","setterrtext","mapdisplay","setmapdisplay","mapsv2","fresponse","fresult","from","tresponse","tresult","to","App","prefix","href","Style","Tabs","Tab","ReactDOM","render"],"mappings":"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","file":"static/js/main.886d4bc0.chunk.js","sourcesContent":["import React, { useState} from 'react';\nimport raw from 'raw.macro';\nimport { Button,TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer} from 'carbon-components-react';\n\nfunction Geocode() {\n  const [location, setlocation] = useState('');\n  const [errstate, seterrstate] = useState(false);\n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    if (location) {\n\n        const areaToCoord = async() => {\n\n        try{\n\n          if(process.env.REACT_APP_mode === \"dev\"){\n                \n                  console.log(\"Mode is : DEV\");\n                  const authtoken = raw('./auth.txt');\n                  \n                  let headers = {'Authorization' : authtoken}\n                  let response = await fetch(`https://geocode.search.hereapi.com/v1/geocode?q=${location}`,{ headers})\n                  let result = await response.json();\n\n                   setGeocodeobj({...result})\n                  setLoading(false);\n\n                if(JSON.stringify(result.items) === '[]'){\n                      seterr3status(true);\n                      setGeocodeobj({});\n                     }\n          }\n          else{\n            \n          console.log(\"not dev mode\");\n            let response = await fetch(`/addrgeocode?queryst=${location}`);\n            let result = await response.json();\n\n            setGeocodeobj({...result})\n            setLoading(false);\n\n          if(JSON.stringify(result.items) === '[]'){\n            seterr3status(true); \n            setGeocodeobj({});\n          }\n          }          \n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n        areaToCoord();\n\n      setlocation('');\n    } \n    \n    else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'address',\n    header: 'Address',\n  },\n    {\n    key: 'location',\n    header: 'Location',\n  },\n];\n\n  function err1closef() {\n    seterr1status(false);\n  }\n  function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n\nconst validLocf = (e) => {\n         if(!e.target.value.match(/^[a-zA-Z]+$/)){\n              seterrstate(true)\n              seterrtext(\"Only letters allowed. No special characters or numbers\");\n              setbuttonstate(true)\n           }\n        else{\n            seterrstate(false)\n            setbuttonstate(false)\n        }        \n        \n        setlocation(e.target.value)\n        \n}\n\n  return (\n    <>\n    <Form onSubmit={handleSubmit}>\n      <TextInput type = \"text\" id={'location'} labelText = {'Location*'}  invalid = {errstate} invalidText = {errtext} helperText=\"Input values only in alphabets - City/Town/Street.\" placeholder = {'Location'} size = 'lg' value={location} onChange={validLocf} />\n      <div className=\"ButtonArea\">\n        <Button type=\"submit\" disabled = {buttonstate} > Get Area Co-ordinates </Button>\n      </div>\n      \n    </Form>\n\n    {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Location input is empty. Please fill a valid Location</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n      {geocodeobj.items && \n         <div className = \"TableDisplay\" >\n\n          {geocodeobj.items && \n          \n          <DataTable rows={geocodeobj.items} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Location Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.items && geocodeobj.items.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.title}</TableCell>\n                        <TableCell>{row.address.label}</TableCell>\n                        <TableCell>{row.position.lat + \",\" + row.position.lng}</TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>}\n\n    </>\n  );\n};\n\nexport default Geocode;\n","import React, { useState} from 'react';\nimport raw from 'raw.macro';\nimport { Button, TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\n import {\n  DataTable,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  TableContainer\n} from 'carbon-components-react';\n\nfunction Geocode2() {\n\n  const [latitude, setlatitude] = useState('');\n  const [longitude, setlongitude] = useState('');\n\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n  \n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n      \n\n  if (latitude && longitude) {\n\n        const locationstr = latitude.concat(',').concat(longitude);\n        const geocode2 = async() => {\n\n        try{\n        \n           if(process.env.REACT_APP_mode === \"dev\"){\n\n            console.log(\"Mode is : DEV\");\n            const authtoken = raw('./auth.txt');\n            let headers = {'Authorization' : authtoken}\n            let response = await fetch(`https://revgeocode.search.hereapi.com/v1/revgeocode?at=${locationstr}`,{ headers})\n            let result = await response.json();\n\n\n          setGeocodeobj({...result});\n          setLoading(false);\n\n          if(JSON.stringify(result.items) === '[]'){\n            seterr3status(true);\n            setGeocodeobj({});\n          }\n        }\n\n        else{\n\n          let response = await fetch(`/revaddrgeocode?location=${locationstr}`);\n          let result = await response.json();\n          \n          setGeocodeobj({...result});\n          setLoading(false);\n\n          if(JSON.stringify(result.items) === '[]'){\n            seterr3status(true);  \n            setGeocodeobj({});\n          }\n        }\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      \n      geocode2();\n      setlatitude('');\n      setlongitude('');\n\n      }\n    \n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'address',\n    header: 'Address',\n  },\n    {\n    key: 'location',\n    header: 'Location',\n  },\n];\n\nconst [lterrstate, setlterrstate] = useState(false);\nconst [lngerrstate, setlngerrstate] = useState(false);\n\nconst validLatf = (e) => {\n    //  if(!fields[\"name\"]){\n    //            formIsValid = false;\n    //            errors[\"name\"] = \"Cannot be empty\";\n    //         }\n      \n    // if(typeof e.target.value !== \"undefined\"){ ^[0-9]*$  (e) => setlongitude(e.target.value)\n\n\n         if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?){2}$/)){\n              setlterrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlterrstate(false)\n            setbuttonstate(false)\n        }        \n       //}\n    \n        \n        setlatitude(e.target.value)\n    \n    \n}\nconst validLongf = (e) => {\n    //  if(!fields[\"name\"]){\n    //            formIsValid = false;\n    //            errors[\"name\"] = \"Cannot be empty\";\n    //         }\n      \n    // if(typeof e.target.value !== \"undefined\"){ ^[0-9]*$\n\n\n         if(!e.target.value.match(/^\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setlngerrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlngerrstate(false)\n            setbuttonstate(false)\n        }        \n       //}\n    \n        \n        setlongitude(e.target.value)\n    \n    \n}\n\n  function err1closef() {\n    seterr1status(false);\n  }\n  function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n\n  return (\n    <>\n\n    <Form onSubmit={handleSubmit}>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'latitude'} labelText = {'Latitude*'} invalid = {lterrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Latitude'} size = 'lg' value={latitude} onChange={validLatf} />\n      </div>\n       <div className=\"TextArea\" >\n      <TextInput id={'longitude'} labelText = {'Longitude*'} invalid = {lngerrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Longitude'} size = 'lg' value={longitude} onChange={validLongf} />\n      </div>\n      <div className=\"ButtonArea\" >\n        <Button type=\"submit\" disabled = {buttonstate}> Get Places Near You </Button>\n      </div>\n      {/* <Button type=\"submit\" onClick={buttonSubmit} > Get Places Near You </Button> */}\n\n      </Form>\n\n  {err1status && \n    <ToastNotification\n        // caption=\"00:00:00 AM\"\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude values cannot be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n\n  {err2status && \n    <ToastNotification\n        // caption=\"00:00:00 AM\"\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        // caption=\"00:00:00 AM\"\n        iconDescription=\"Close notification\"\n        subtitle={<span>No results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n      {geocodeobj.items && \n         <div className = \"TableDisplay\">\n\n          {/* <p>{JSON.stringify(geocodeobj)}</p> */}\n\n              {geocodeobj.items && \n          \n          <DataTable rows={geocodeobj.items} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Location Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.items && geocodeobj.items.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.title}</TableCell>\n                        <TableCell>{row.address.label}</TableCell>\n                        <TableCell>{row.position.lat + \",\" + row.position.lng}</TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>}\n\n\n    </>\n  );\n};\n\nexport default Geocode2;\n","import React, { useState} from 'react';\nimport raw from 'raw.macro';\nimport { Button,TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer} from 'carbon-components-react';\n\nfunction Transit1() {\n\n  const [latitude, setlatitude] = useState('');\n  const [longitude, setlongitude] = useState('');\n  const [isLoading,setLoading] = useState(false);\n\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n\n    const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    if (latitude && longitude) {\n          \n\n      const locationstr = latitude.concat(',').concat(longitude);\n      \n        const searchsv2 = async() => {\n\n        try{\n\n         if(process.env.REACT_APP_mode === \"dev\"){\n\n            console.log(\"Mode is : DEV\");\n            const authtoken = raw('./auth.txt');\n            let headers = {'Authorization' : authtoken}\n            let response = await fetch(`https://transit.hereapi.com/v8/stations?in=${locationstr}`,{ headers})\n            let result = await response.json();\n            setGeocodeobj({...result});\n          setLoading(false);\n\n          if(JSON.stringify(result.stations) === '[]'){\n             seterr3status(true);  \n             setGeocodeobj({});\n          }\n         }\n         else{\n            \n            console.log(\"not dev mode\");\n            let response = await fetch(`/getstations?location=${locationstr}`);\n            let result = await response.json();\n\n          setGeocodeobj({...result});\n          setLoading(false);\n\n          if(JSON.stringify(result.stations) === '[]'){\n             seterr3status(true);  \n             setGeocodeobj({});\n          }\n\n         }\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      searchsv2();\n      setlatitude('');\n      setlongitude('');\n      }\n    \n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'id',\n    header: 'Id',\n  },\n  {\n    key: 'name',\n    header: 'Name',\n  },\n    {\n    key: 'location',\n    header: 'Location',\n  },\n];\nconst [lterrstate, setlterrstate] = useState(false);\nconst [lngerrstate, setlngerrstate] = useState(false);\n\nconst validLatf = (e) => {\n\n         if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?){2}$/)){\n              setlterrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlterrstate(false)\n            setbuttonstate(false)\n        }        \n        \n        setlatitude(e.target.value) \n}\n\nconst validLongf = (e) => {\n\n         if(!e.target.value.match(/^\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setlngerrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlngerrstate(false)\n            setbuttonstate(false)\n        }                \n        setlongitude(e.target.value)\n     \n}\n\n  function err1closef() {\n    seterr1status(false);\n  }\n  function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n\n\n  return (\n    <>\n\n    <Form onSubmit={handleSubmit}>\n\n      <div className=\"TextArea\" >\n        <TextInput id={'latitude'} labelText = {'Latitude*'} invalid = {lterrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Latitude'} size = 'lg' value={latitude} onChange={validLatf} />\n      </div>\n      <div className=\"TextArea\" >\n        <TextInput id={'longitude'} labelText = {'Longitude*'} invalid = {lngerrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Longitude'} size = 'lg' value={longitude} onChange={validLongf} />\n      </div>\n      <div className=\"ButtonArea\">\n        <Button type=\"submit\" disabled = {buttonstate} > Get Transit Stations </Button>\n      </div>\n      </Form>\n\n     {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude values cannot be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Stations not found</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n\n    <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n\n {geocodeobj.stations && \n         <div className = \"TableDisplay\">\n            {geocodeobj.stations && \n          \n          <DataTable rows={geocodeobj.stations} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Public Transit Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.stations && geocodeobj.stations.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.place.id}</TableCell>\n                        <TableCell>{row.place.name}</TableCell>\n                        <TableCell>{row.place.location.lat + \",\" + row.place.location.lng}</TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>}\n\n\n    </>\n  );\n};\n\nexport default Transit1;","import React, { useState} from 'react';\nimport raw from 'raw.macro';\nimport { Button,TextInput, Form, Link, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer} from 'carbon-components-react';\n\nfunction Transit2(){\n\n  const [location, setlocation] = useState('');\n  const [radius, setradius] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [depobj, setdepobj] = useState({});\n\n  const [locerrstate, setlocerrstate] = useState(false);\n  const [locerrtext, setlocerrtext] = useState('A valid value is required');\n  const [raderrstate, setraderrstate] = useState(false);\n  const [raderrtext, setraderrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n  const [err4status, seterr4status] = useState(false);\n\n    const departureSubmit = (depval) => {\n    setLoading(true);\n    displaydeparture(depval);\n\n  }\n\n  const displaydeparture = (depvalue) => {\n\n    setdepobj(geocodeobj.boards[depvalue].departures);\n    setLoading(false);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n      \n    if (location && radius) {\n\n        const transt1 = async() => {\n\n        try{\n\n           if(process.env.REACT_APP_mode === \"dev\"){\n\n            console.log(\"Mode is : DEV\");\n            const authtoken = raw('./auth.txt');\n            let headers = {'Authorization' : authtoken}\n            let response = await fetch(`https://geocode.search.hereapi.com/v1/geocode?q=${location}`,{ headers})\n            let result = await response.json();\n            let locstr = [result.items[0][\"position\"][\"lat\"].toString(),result.items[0][\"position\"][\"lng\"].toString()].toString().concat(\";r=\").concat(radius);\n            \n            response = await fetch(`https://transit.hereapi.com/v8/departures?in=${locstr}`,{ headers})\n            result = await response.json();\n\n            setGeocodeobj({...result});\n            setLoading(false);\n\n            if(JSON.stringify(result.boards) === '[]'){\n              seterr3status(true); \n              setGeocodeobj({});\n            }\n            if(result.hasOwnProperty('title')){\n              seterr4status(true); \n              setGeocodeobj({});\n            }\n\n          }\n          else{\n            \n            console.log(\"not dev mode\");\n    \n            let response = await fetch(`/addrgeocode?queryst=${location}`);\n            let result = await response.json();\n\n            let locstr = [result.items[0][\"position\"][\"lat\"].toString(),result.items[0][\"position\"][\"lng\"].toString()].toString().concat(\";r=\").concat(radius);\n            \n            response = await fetch(`/getdepartures?location=${locstr}`);\n            result = await response.json();            \n\n          setGeocodeobj({...result});\n          setLoading(false);\n\n          if(JSON.stringify(result.boards) === '[]'){\n             seterr3status(true); \n             setGeocodeobj({});\n          }\n          if(result.hasOwnProperty('title')){\n            seterr4status(true); \n            setGeocodeobj({});\n          }\n        }\n \n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      \n        transt1();\n        setlocation('');\n        setradius('');\n      }\n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n    {\n    key: 'location',\n    header: 'Location',\n  },\n      {\n    key: 'listing',\n    header: '',\n  },\n];\n\nconst headers1 = [\n  {\n    key: 'departure time',\n    header: 'Departure Time',\n  },\n    {\n    key: 'departure transport',\n    header: 'Mode of Transport',\n  },\n  {\n    key: 'departure point',\n    header: 'Destination'\n  }\n];\n\nfunction capitalize(word) {\n  return word[0].toUpperCase() + word.substring(1).toLowerCase();\n}\n\nconst validLocf = (e) => {\n\n         if(!e.target.value.match(/^[a-zA-Z]+$/)){\n              setlocerrstate(true)\n              setlocerrtext(\"Only letters allowed. No special characters or numbers\");\n              setbuttonstate(true)\n           }\n        else{\n            setlocerrstate(false)\n            setbuttonstate(false)\n        }        \n        \n        setlocation(e.target.value)\n    \n    \n}\n\nconst validRadf = (e) => {\n\n         if(!e.target.value.match(/^[0-9]*$/)){\n              setraderrstate(true)\n              setraderrtext(\"Only numbers allowed. No special characters or letters\");\n              setbuttonstate(true)\n           }\n        else{\n            setraderrstate(false)\n            setbuttonstate(false)\n        }        \n        \n        setradius(e.target.value)\n    \n    \n}\n  function err1closef() {\n    seterr1status(false);\n  }\n  function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n  function err4closef() {\n    seterr4status(false);\n  }\n\n  return (\n    <>\n\n      <Form onSubmit={handleSubmit}>\n\n      <div className=\"TextArea\" >\n        <TextInput id={'location'} labelText = {'Location*'} invalid = {locerrstate} invalidText = {locerrtext} helperText=\"Input values only in alphabets - City/Town/Street.\" placeholder = {'Location'} size = 'lg' value={location} onChange={validLocf} />\n      </div>\n      <div className=\"TextArea\" >\n        <TextInput id={'radius'} labelText = {'Radius in metres*'} invalid = {raderrstate} invalidText = {raderrtext} placeholder = {'Radius'} helperText=\"Input value in numbers.\" size = 'lg' value={radius} onChange={validRadf} />\n      </div>\n\n       <div className=\"ButtonArea\">\n          <Button type=\"submit\" disabled = {buttonstate}> Get Places Near You </Button>\n      </div>\n      </Form>\n\n      {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Location, Radius values should not be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No Departures Found</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err4status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Invalid input. Radius must be in range of 0-999999999 metres</span>}\n        timeout={3000}\n        onClose = {err4closef}\n        title=\"Error Notification\"\n      />\n      }\n\n    <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n     {geocodeobj.boards && \n        <div className = \"TableDisplay\">\n\n            {geocodeobj.boards && \n          \n          <DataTable rows={geocodeobj.boards} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Public Transit Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.boards && geocodeobj.boards.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.place.name}</TableCell>\n                        <TableCell>{row.place.location.lat + \",\" + row.place.location.lng}</TableCell>\n                        <TableCell><Link onClick={() => departureSubmit(index)}>List Destinations</Link></TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n          <br/>\n          <br/>\n          \n          {depobj[0] && \n          \n          <DataTable rows={depobj} headers={headers1}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Destination Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {depobj && depobj.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.time}</TableCell>\n                        <TableCell>{capitalize(row.transport.mode)}</TableCell>\n                        <TableCell>{row.transport.headsign}</TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>} \n\n\n        </div>}\n\n    </>\n  );\n};\n\nexport default Transit2;\n","/* eslint-disable */\nimport React, { useState} from 'react';\nimport { Button,TextInput, Form, Select, SelectItem, Loading, ToastNotification } from 'carbon-components-react';\nimport H from \"@here/maps-api-for-javascript\";\nimport 'here-js-api/styles/mapsjs-ui.css';\n\nfunction Mapf1(){\n\n  const [fromcoord,setfromcoord] = useState('');\n  const [tocoord,settocoord] = useState('');\n  const [fcerrstate, setfcerrstate] = useState(false);\n  const [fcerrtext, setfcerrtext] = useState('A valid value is required');\n  const [tcerrstate, settcerrstate] = useState(false);\n  const [tcerrtext, settcerrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n  const modes = [\n  {\n    id: 'car',\n    value: 'Drive a Car',\n  },\n  {\n    id: 'pedestrian',\n    value: 'Let me Walk',\n  },\n  {\n    id: 'pubtransport',\n    value: 'Use Public Transport',\n  },\n];\n\n\n const [modequery, setmodequery] = useState(modes[0].id);\n const [mapdisplay1,setmapdisplay1] = useState('');\n\n const handleModeChange = (event) => {\n    setmodequery(event.target.value);\n  }\n\n   const handleSubmit = (e) => {\n      e.preventDefault(); \n      setLoading(true);\n      setmapdisplay1('Route')\n\n    if (fromcoord && tocoord) {\n\n        const mapsv = async() => {\n\n        try{\n\n          let apikey;\n\n          if(process.env.REACT_APP_mode === \"dev\"){\n            apikey = process.env.REACT_APP_APIKEY;\n          }\n          else{\n\n           let keyresponse = await fetch('/getapikey');\n           let keyresult = await keyresponse.json();\n           apikey = keyresult[\"apikey\"];\n\n          }\n\n          if(modequery === \"pubtransport\"){\n\n          function calculateRouteFromAtoB (platform) {\n            var router = platform.getPublicTransitService(),\n                routeRequestParams = {\n                  origin: fromcoord,\n                  destination: tocoord,\n                  return: 'polyline,actions,travelSummary'\n                };\n\n\n            router.getRoutes(\n              routeRequestParams,\n              onSuccess,\n              onError\n            );\n          }\n\n          function onSuccess(result) {\n            var route = result.routes[0];\n            addRouteShapeToMap(route);\n            addManueversToMap(route);\n            addManueversToPanel(route);\n            addSummaryToPanel(route);\n          }\n\n          function onError(error) {\n            document.getElementById('map').innerHTML = \"\";\n            document.getElementById('panel').innerHTML = \"\";\n            seterr3status(true); \n          }\n\n          document.getElementById('map').innerHTML = \"\";\n          document.getElementById('panel').innerHTML = \"\";\n\n          var mapContainer = document.getElementById('map');\n          var routeInstructionsContainer = document.getElementById('panel');\n\n          var platform = new H.service.Platform({\n            apikey: apikey\n          });\n          var defaultLayers = platform.createDefaultLayers();\n\n          var map = new H.Map(mapContainer,\n            defaultLayers.vector.normal.map,{\n            center: {lat:52.5160, lng:13.3779},\n            zoom: 13,\n            pixelRatio: window.devicePixelRatio || 1\n          });\n\n          window.addEventListener('resize', () => map.getViewPort().resize());\n\n          var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n\n          var ui = H.ui.UI.createDefault(map, defaultLayers);\n\n          var bubble;\n\n          function openBubble(position, text){\n          if(!bubble){\n              bubble =  new H.ui.InfoBubble(\n                position,\n                {content: text});\n              ui.addBubble(bubble);\n            } else {\n              bubble.setPosition(position);\n              bubble.setContent(text);\n              bubble.open();\n            }\n          }\n\n          function addRouteShapeToMap(route){\n\n            try{\n            var group = new H.map.Group();\n            route.sections.forEach(function(section) {\n              group.addObject(\n                new H.map.Polyline(\n                  H.geo.LineString.fromFlexiblePolyline(section.polyline), {\n                    style: {\n                      lineWidth: 4,\n                      strokeColor: 'rgba(0, 128, 255, 0.7)'\n                    }\n                  }\n                )\n              );\n            });\n\n            map.addObject(group);\n            map.getViewModel().setLookAtData({\n              bounds: group.getBoundingBox()\n            });\n            }\n          catch(err){\n            document.getElementById('map').innerHTML = \"\";\n            seterr2status(true);\n          }\n          }\n\n          function addManueversToMap(route){\n            try{\n            var svgMarkup = '<svg width=\"18\" height=\"18\" ' +\n              'xmlns=\"http://www.w3.org/2000/svg\">' +\n              '<circle cx=\"8\" cy=\"8\" r=\"8\" ' +\n                'fill=\"#1b468d\" stroke=\"white\" stroke-width=\"1\"  />' +\n              '</svg>',\n              dotIcon = new H.map.Icon(svgMarkup, {anchor: {x:8, y:8}}),\n              group = new  H.map.Group(),\n              i;\n\n              route.sections.forEach((section) => {\n                let poly = H.geo.LineString.fromFlexiblePolyline(section.polyline).getLatLngAltArray();\n              \n                let actions = section.actions;\n                if (actions) {\n                  for (i = 0;  i < actions.length; i += 1) {\n                    let action = actions[i];\n                    var marker =  new H.map.Marker({\n                      lat: poly[action.offset * 3],\n                      lng: poly[action.offset * 3 + 1]},\n                      {icon: dotIcon});\n                    marker.instruction = action.instruction;\n                    group.addObject(marker);\n                  }\n                }\n              });\n\n              group.addEventListener('tap', function (evt) {\n                map.setCenter(evt.target.getGeometry());\n                openBubble(\n                  evt.target.getGeometry(), evt.target.instruction);\n              }, false);\n            \n              map.addObject(group);\n              }\n          catch(err){\n            document.getElementById('map').innerHTML = \"\";\n            document.getElementById('panel').innerHTML = \"\";\n            \n          }\n          }\n\n\n          function addSummaryToPanel(route){\n            try{\n            let duration = 0,\n                distance = 0;\n\n            route.sections.forEach((section) => {\n              distance += section.travelSummary.length;\n              duration += section.travelSummary.duration;\n            });\n\n            var summaryDiv = document.createElement('div'),\n            content = '';\n            content += '<b>Total distance</b>: ' + distance  + 'm. <br/>';\n            content += '<b>Travel Time</b>: ' + duration.toMMSS();\n\n\n            summaryDiv.style.fontSize = 'small';\n            summaryDiv.style.marginLeft ='5%';\n            summaryDiv.style.marginRight ='5%';\n            summaryDiv.innerHTML = content;\n            routeInstructionsContainer.appendChild(summaryDiv);\n          }\n          catch(err){\n            document.getElementById('panel').innerHTML = \"\";\n          }\n          }\n\n          function addManueversToPanel(route){\n            try{\n            var nodeOL = document.createElement('ol');\n\n            nodeOL.style.fontSize = 'small';\n            nodeOL.style.marginLeft ='5%';\n            nodeOL.style.marginRight ='5%';\n            nodeOL.className = 'directions';\n\n            route.sections.forEach((section) => {\n              if (section.actions) {\n                section.actions.forEach((action, idx) => {\n                  var li = document.createElement('li'),\n                      spanArrow = document.createElement('span'),\n                      spanInstruction = document.createElement('span');\n\n                  spanArrow.className = 'arrow ' + (action.direction || '') + action.action;\n                  spanInstruction.innerHTML = section.actions[idx].instruction;\n                  li.appendChild(spanArrow);\n                  li.appendChild(spanInstruction);\n\n                  nodeOL.appendChild(li);\n                });\n              }\n            });\n            routeInstructionsContainer.appendChild(nodeOL);\n          }\n          catch(err){\n            document.getElementById('panel').innerHTML = \"\";\n          }\n          }\n            Number.prototype.toMMSS = function () {\n              return  Math.floor(this / 60)  +' minutes '+ (this % 60)  + ' seconds.';\n            }\n\n          setTimeout(() => setLoading(false),5000);\n          calculateRouteFromAtoB (platform);\n          \n          }\n\n          else{\n\n            function calculateRouteFromAtoB(platform) {\n              var router = platform.getRoutingService(null, 8),\n                  routeRequestParams = {\n                    routingMode: 'fast',\n                    transportMode: modequery,\n                    origin: fromcoord,\n                    destination: tocoord,\n                    return: 'polyline,turnByTurnActions,actions,instructions,travelSummary'\n                  };\n\n              router.calculateRoute(\n                routeRequestParams,\n                onSuccess,\n                onError\n              );\n            }\n\n            function onSuccess(result) {\n              var route = result.routes[0];\n\n              addRouteShapeToMap(route);\n              addManueversToMap(route);\n              addWaypointsToPanel(route);\n              addManueversToPanel(route);\n              addSummaryToPanel(route);\n            }\n\n\n            function onError(error) {\n              \n              document.getElementById('map').innerHTML = \"\";\n              document.getElementById('panel').innerHTML = \"\";\n              seterr3status(true); \n            }\n\n            document.getElementById('map').innerHTML = \"\";\n            document.getElementById('panel').innerHTML = \"\";\n\n            var mapContainer = document.getElementById('map')\n            var routeInstructionsContainer = document.getElementById('panel');\n\n\n            var platform = new H.service.Platform({\n              apikey: apikey\n            });\n\n            var defaultLayers = platform.createDefaultLayers();\n\n            var map = new H.Map(mapContainer,\n              defaultLayers.vector.normal.map, {\n              center: {lat: 52.5160, lng: 13.3779},\n              zoom: 13,\n              pixelRatio: window.devicePixelRatio || 1\n            });\n\n            window.addEventListener('resize', () => map.getViewPort().resize());\n\n              var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n              \n              var ui = H.ui.UI.createDefault(map, defaultLayers);\n              \n              var bubble;\n\n            function openBubble(position, text) {\n              if (!bubble) {\n                bubble = new H.ui.InfoBubble(\n                  position,\n                  {content: text});\n                ui.addBubble(bubble);\n              } else {\n                bubble.setPosition(position);\n                bubble.setContent(text);\n                bubble.open();\n              }\n            }\n\n            function addRouteShapeToMap(route) {\n              try{\n              route.sections.forEach((section) => {\n                let linestring = H.geo.LineString.fromFlexiblePolyline(section.polyline);\n\n                let polyline = new H.map.Polyline(linestring, {\n                  style: {\n                    lineWidth: 4,\n                    strokeColor: 'rgba(0, 128, 255, 0.7)'\n                  }\n                });\n\n                map.addObject(polyline);\n                map.getViewModel().setLookAtData({\n                  bounds: polyline.getBoundingBox()\n                });\n              });\n            }\n              catch(err){\n                seterr2status(true);\n                document.getElementById('map').innerHTML = \"\";\n                document.getElementById('panel').innerHTML = \"\";\n              }\n            }\n\n\n            function addManueversToMap(route) {\n\n              var svgMarkup = '<svg width=\"18\" height=\"18\" ' +\n                'xmlns=\"http://www.w3.org/2000/svg\">' +\n                '<circle cx=\"8\" cy=\"8\" r=\"8\" ' +\n                  'fill=\"#1b468d\" stroke=\"white\" stroke-width=\"1\" />' +\n                '</svg>',\n                dotIcon = new H.map.Icon(svgMarkup, {anchor: {x:8, y:8}}),\n                group = new H.map.Group(),\n                i,\n                j;\n\n              try{\n              route.sections.forEach((section) => {\n                let poly = H.geo.LineString.fromFlexiblePolyline(section.polyline).getLatLngAltArray();\n\n                let actions = section.actions;\n                for (i = 0; i < actions.length; i += 1) {\n                  let action = actions[i];\n                  var marker = new H.map.Marker({\n                    lat: poly[action.offset * 3],\n                    lng: poly[action.offset * 3 + 1]},\n                    {icon: dotIcon});\n                  marker.instruction = action.instruction;\n                  group.addObject(marker);\n                }\n\n                group.addEventListener('tap', function (evt) {\n                  map.setCenter(evt.target.getGeometry());\n                  openBubble(evt.target.getGeometry(), evt.target.instruction);\n                }, false);\n\n                map.addObject(group);\n              });\n            }\n            catch(err){\n              document.getElementById('map').innerHTML = \"\";\n              document.getElementById('panel').innerHTML = \"\";\n            }\n            }\n\n\n            function addWaypointsToPanel(route) {\n\n              try{\n              var nodeH3 = document.createElement('h3'),\n                labels = [];\n\n              route.sections.forEach((section) => {\n                labels.push(\n                  section.turnByTurnActions[0].nextRoad.name[0].value)\n                labels.push(\n                  section.turnByTurnActions[section.turnByTurnActions.length - 1].currentRoad.name[0].value)\n              });\n\n              nodeH3.textContent = labels.join(' - ');\n              routeInstructionsContainer.innerHTML = '';\n              routeInstructionsContainer.appendChild(nodeH3);\n              }\n            catch(err){\n              document.getElementById('panel').innerHTML = \"\";\n            }\n            }\n\n            function addSummaryToPanel(route) {\n\n              let duration = 0,\n                distance = 0;\n\n              try{\n              route.sections.forEach((section) => {\n                distance += section.travelSummary.length;\n                duration += section.travelSummary.duration;\n              });\n\n              var summaryDiv = document.createElement('div'),\n                content = '<b>Total distance</b>: ' + distance + 'm. <br />' +\n                  '<b>Travel Time</b>: ' + toMMSS(duration) + ' (in current traffic)';\n\n              summaryDiv.style.fontSize = 'small';\n              summaryDiv.style.marginLeft = '5%';\n              summaryDiv.style.marginRight = '5%';\n              summaryDiv.innerHTML = content;\n              routeInstructionsContainer.appendChild(summaryDiv);\n              }\n\n                catch(err){\n                  document.getElementById('map').innerHTML = \"\";\n                  document.getElementById('panel').innerHTML = \"\";\n                }\n            }\n\n\n            function addManueversToPanel(route) {\n              var nodeOL = document.createElement('ol');\n\n              nodeOL.style.fontSize = 'small';\n              nodeOL.style.marginLeft ='5%';\n              nodeOL.style.marginRight ='5%';\n              nodeOL.className = 'directions';\n\n              try{\n              route.sections.forEach((section) => {\n                section.actions.forEach((action, idx) => {\n                  var li = document.createElement('li'),\n                    spanArrow = document.createElement('span'),\n                    spanInstruction = document.createElement('span');\n\n                  spanArrow.className = 'arrow ' + (action.direction || '') + action.action;\n                  spanInstruction.innerHTML = section.actions[idx].instruction;\n                  li.appendChild(spanArrow);\n                  li.appendChild(spanInstruction);\n\n                  nodeOL.appendChild(li);\n                });\n              });\n\n              routeInstructionsContainer.appendChild(nodeOL);\n            }\n            catch(err){\n              document.getElementById('map').innerHTML = \"\";\n              document.getElementById('panel').innerHTML = \"\";\n              console.log(\"Results unavailable\");\n            }\n            }\n\n            function toMMSS(duration) {\n              return Math.floor(duration / 60) + ' minutes ' + (duration % 60) + ' seconds.';\n            }\n            \n            setTimeout(() => setLoading(false),5000);\n            calculateRouteFromAtoB(platform);\n            \n            }\n\n          }\n\n        catch(error){\n          setLoading(false);\n          seterr2status(true);\n        }\n\n        }\n        setTimeout(mapsv, 2000);\n        setfromcoord('');\n        settocoord('');\n      }\n    else {\n      setLoading(false);\n      seterr1status(true);\n    }\n    };\n\n\nconst validfCoordf = (e) => {\n\n         if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setfcerrstate(true)\n              setfcerrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n              \n           }\n        else{\n            setfcerrstate(false)\n            setbuttonstate(false)\n        }       \n        setfromcoord(e.target.value)\n    \n    \n}\nconst validtCoordf = (e) => {\n\n         if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              settcerrstate(true)\n              settcerrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n              \n           }\n        else{\n            settcerrstate(false)\n            setbuttonstate(false)\n        }                \n        settocoord(e.target.value)\n    \n    \n}\n\n  function err1closef() {\n    seterr1status(false);\n  }\n   function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n  return(\n    <>    \n        <Form onSubmit={handleSubmit}>\n\n            <div className=\"TextArea\" >\n            <TextInput id={'fromcoord'} labelText = {'From*'} placeholder = {'From Co-ordinates'} invalid = {fcerrstate} invalidText = {fcerrtext} size = 'lg' value={fromcoord} onChange={validfCoordf} />\n            </div>\n            <div className=\"TextArea\" >\n            <TextInput id={'tocoord'} labelText = {'To*'} placeholder = {'To Co-ordinates'} invalid = {tcerrstate} invalidText = {tcerrtext} size = 'lg' value={tocoord} onChange={validtCoordf} />\n            </div>\n              <Select labelText=\"Mode of Transport*\" value={modequery} onChange={handleModeChange}>\n                    {modes.map((item, i) => (\n                    <SelectItem value={item.id} key={i} text = {item.value} />\n                    ))}\n              </Select>\n              \n             <div className=\"ButtonAreamap\">\n                <Button type=\"submit\" disabled = {buttonstate} > Get my Route </Button>\n             </div>\n\n        </Form>\n\n  {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude values for the From and To locations should not be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Results unavailable</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n\n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Cannot reach remote server</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n        <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n      <br/>\n\n              { mapdisplay1 &&\n              <div id = \"route-display\">\n                <br/>\n                <br/>\n                  <div id = 'map' ></div>\n                    <br/>\n                <div id = 'panel' ></div>\n                </div>\n              }        \n            </>\n            );\n};\n\nexport default Mapf1;\n","/* eslint-disable */\n\nimport React, { useState} from 'react';\nimport { Button,TextInput, Form, Select, SelectItem, Loading, ToastNotification } from 'carbon-components-react';\nimport H from \"@here/maps-api-for-javascript\";\nimport 'here-js-api/styles/mapsjs-ui.css';\nimport raw from 'raw.macro';\n\nfunction Mapf2(){\n\n  const [fromloc,setfromloc] = useState('');\n  const [toloc,settoloc] = useState('');\n  const [ferrstate, setferrstate] = useState(false);\n  const [ferrtext, setferrtext] = useState('A valid value is required');\n  const [terrstate, setterrstate] = useState(false);\n  const [terrtext, setterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n const modes = [\n  {\n    id: 'car',\n    value: 'Drive a Car',\n  },\n  {\n    id: 'pedestrian',\n    value: 'Let me Walk',\n  },\n  {\n    id: 'pubtransport',\n    value: 'Use Public Transport',\n  },\n];\n  \n const [modequery, setmodequery] = useState(modes[0].id);\n const [mapdisplay,setmapdisplay] = useState('');\n \n const handleModeChange = (event) => {\n    setmodequery(event.target.value);\n  }\n\n  const handleSubmit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setmapdisplay('Route')\n\n    if (fromloc && toloc) {\n   \n        const mapsv2 = async() => {\n\n        try{\n\n          let apikey,fresponse,fresult,from,tresponse,tresult,to;\n\n          if(process.env.REACT_APP_mode === \"dev\"){\n            apikey = process.env.REACT_APP_APIKEY;\n\n            const authtoken = raw('./auth.txt');\n            let headers = {'Authorization' : authtoken}\n            fresponse = await fetch(`https://geocode.search.hereapi.com/v1/geocode?q=${fromloc}`,{ headers})\n            fresult = await fresponse.json();\n            from = [fresult.items[0][\"position\"][\"lat\"].toString(),fresult.items[0][\"position\"][\"lng\"].toString()].toString();\n            tresponse = await fetch(`https://geocode.search.hereapi.com/v1/geocode?q=${toloc}`,{ headers})\n            tresult = await tresponse.json();\n            to = [tresult.items[0][\"position\"][\"lat\"].toString(), tresult.items[0][\"position\"][\"lng\"].toString()].toString();\n          \n            console.log(\"Dev mode: \", apikey,from,to);\n\n           if(modequery === \"pubtransport\"){\n\n            function calculateRouteFromAtoB (platform) {\n              var router = platform.getPublicTransitService(),\n                  routeRequestParams = {\n                    origin: from,\n                    destination: to,\n                    return: 'polyline,actions,travelSummary'\n                  };\n\n\n              router.getRoutes(\n                routeRequestParams,\n                onSuccess,\n                onError\n              );\n            }\n\n            function onSuccess(result) {\n              var route = result.routes[0];\n              addRouteShapeToMap(route);\n              addManueversToMap(route);\n              addManueversToPanel(route);\n              addSummaryToPanel(route);\n            }\n\n            function onError(error) {\n              document.getElementById('map2').innerHTML = \"\";\n              document.getElementById('panel2').innerHTML = \"\";\n              seterr3status(true); \n            }\n\n            document.getElementById('map2').innerHTML = \"\";\n            document.getElementById('panel2').innerHTML = \"\";\n\n            var mapContainer = document.getElementById('map2');\n            var routeInstructionsContainer = document.getElementById('panel2');\n\n            var platform = new H.service.Platform({\n              apikey: apikey\n            });\n            var defaultLayers = platform.createDefaultLayers();\n\n            var map = new H.Map(mapContainer,\n              defaultLayers.vector.normal.map,{\n              center: {lat:52.5160, lng:13.3779},\n              zoom: 13,\n              pixelRatio: window.devicePixelRatio || 1\n            });\n\n            window.addEventListener('resize', () => map.getViewPort().resize());\n\n            var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n\n            var ui = H.ui.UI.createDefault(map, defaultLayers);\n\n            var bubble;\n\n            function openBubble(position, text){\n            if(!bubble){\n                bubble =  new H.ui.InfoBubble(\n                  position,\n                  {content: text});\n                ui.addBubble(bubble);\n              } else {\n                bubble.setPosition(position);\n                bubble.setContent(text);\n                bubble.open();\n              }\n            }\n\n            function addRouteShapeToMap(route){\n\n              try{\n              var group = new H.map.Group();\n              route.sections.forEach(function(section) {\n                group.addObject(\n                  new H.map.Polyline(\n                    H.geo.LineString.fromFlexiblePolyline(section.polyline), {\n                      style: {\n                        lineWidth: 4,\n                        strokeColor: 'rgba(0, 128, 255, 0.7)'\n                      }\n                    }\n                  )\n                );\n              });\n\n              map.addObject(group);\n              map.getViewModel().setLookAtData({\n                bounds: group.getBoundingBox()\n              });\n              }\n            catch(err){\n              document.getElementById('map2').innerHTML = \"\";\n              seterr2status(true); \n            }\n            }\n\n            function addManueversToMap(route){\n              try{\n              var svgMarkup = '<svg width=\"18\" height=\"18\" ' +\n                'xmlns=\"http://www.w3.org/2000/svg\">' +\n                '<circle cx=\"8\" cy=\"8\" r=\"8\" ' +\n                  'fill=\"#1b468d\" stroke=\"white\" stroke-width=\"1\"  />' +\n                '</svg>',\n                dotIcon = new H.map.Icon(svgMarkup, {anchor: {x:8, y:8}}),\n                group = new  H.map.Group(),\n                i;\n\n                route.sections.forEach((section) => {\n                  let poly = H.geo.LineString.fromFlexiblePolyline(section.polyline).getLatLngAltArray();\n                \n                  let actions = section.actions;\n                  if (actions) {\n                    for (i = 0;  i < actions.length; i += 1) {\n                      let action = actions[i];\n                      var marker =  new H.map.Marker({\n                        lat: poly[action.offset * 3],\n                        lng: poly[action.offset * 3 + 1]},\n                        {icon: dotIcon});\n                      marker.instruction = action.instruction;\n                      group.addObject(marker);\n                    }\n                  }\n                });\n\n                group.addEventListener('tap', function (evt) {\n                  map.setCenter(evt.target.getGeometry());\n                  openBubble(\n                    evt.target.getGeometry(), evt.target.instruction);\n                }, false);\n              \n                map.addObject(group);\n                }\n            catch(err){\n              //console.log(\"Error: Map info/Transit info unavailable\");\n              document.getElementById('map2').innerHTML = \"\";\n              document.getElementById('panel2').innerHTML = \"\";\n            }\n            }\n\n\n            function addSummaryToPanel(route){\n              try{\n              let duration = 0,\n                  distance = 0;\n\n              route.sections.forEach((section) => {\n                distance += section.travelSummary.length;\n                duration += section.travelSummary.duration;\n              });\n\n              var summaryDiv = document.createElement('div'),\n              content = '';\n              content += '<b>Total distance</b>: ' + distance  + 'm. <br/>';\n              content += '<b>Travel Time</b>: ' + duration.toMMSS();\n\n\n              summaryDiv.style.fontSize = 'small';\n              summaryDiv.style.marginLeft ='5%';\n              summaryDiv.style.marginRight ='5%';\n              summaryDiv.innerHTML = content;\n              routeInstructionsContainer.appendChild(summaryDiv);\n            }\n            catch(err){\n              document.getElementById('panel2').innerHTML = \"\";\n              //console.log(\"pubtransport info err\");\n            }\n            }\n\n            function addManueversToPanel(route){\n              try{\n              var nodeOL = document.createElement('ol');\n\n              nodeOL.style.fontSize = 'small';\n              nodeOL.style.marginLeft ='5%';\n              nodeOL.style.marginRight ='5%';\n              nodeOL.className = 'directions';\n\n              route.sections.forEach((section) => {\n                if (section.actions) {\n                  section.actions.forEach((action, idx) => {\n                    var li = document.createElement('li'),\n                        spanArrow = document.createElement('span'),\n                        spanInstruction = document.createElement('span');\n\n                    spanArrow.className = 'arrow ' + (action.direction || '') + action.action;\n                    spanInstruction.innerHTML = section.actions[idx].instruction;\n                    li.appendChild(spanArrow);\n                    li.appendChild(spanInstruction);\n\n                    nodeOL.appendChild(li);\n                  });\n                }\n              });\n              routeInstructionsContainer.appendChild(nodeOL);\n            }\n            catch(err){\n              document.getElementById('panel2').innerHTML = \"\";\n            }\n            }\n\n\n              Number.prototype.toMMSS = function () {\n                return  Math.floor(this / 60)  +' minutes '+ (this % 60)  + ' seconds.';\n              }\n\n            setTimeout(() => setLoading(false),5000);\n            calculateRouteFromAtoB (platform);\n            \n                      }\n           else{\n            function calculateRouteFromAtoB(platform) {\n              var router = platform.getRoutingService(null, 8),\n                  routeRequestParams = {\n                    routingMode: 'fast',\n                    transportMode: modequery,\n                    origin: from,\n                    destination: to,\n                    return: 'polyline,turnByTurnActions,actions,instructions,travelSummary'\n                  };\n\n              router.calculateRoute(\n                routeRequestParams,\n                onSuccess,\n                onError\n              );\n            }\n\n            function onSuccess(result) {\n              var route = result.routes[0];\n\n              addRouteShapeToMap(route);\n              addManueversToMap(route);\n              addWaypointsToPanel(route);\n              addManueversToPanel(route);\n              addSummaryToPanel(route);\n            }\n\n\n            function onError(error) {\n              document.getElementById('map2').innerHTML = \"\";\n              document.getElementById('panel2').innerHTML = \"\";\n              seterr3status(true); \n            }\n\n            document.getElementById('map2').innerHTML = \"\";\n            document.getElementById('panel2').innerHTML = \"\";\n\n\n            var mapContainer = document.getElementById('map2')\n            var routeInstructionsContainer = document.getElementById('panel2');\n\n\n            var platform = new H.service.Platform({\n              apikey: apikey\n            });\n\n            var defaultLayers = platform.createDefaultLayers();\n\n            var map = new H.Map(mapContainer,\n              defaultLayers.vector.normal.map, {\n              center: {lat: 52.5160, lng: 13.3779},\n              zoom: 13,\n              pixelRatio: window.devicePixelRatio || 1\n            });\n\n            window.addEventListener('resize', () => map.getViewPort().resize());\n\n              var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n              \n              var ui = H.ui.UI.createDefault(map, defaultLayers);\n              \n              var bubble;\n\n            function openBubble(position, text) {\n              if (!bubble) {\n                bubble = new H.ui.InfoBubble(\n                  position,\n                  {content: text});\n                ui.addBubble(bubble);\n              } else {\n                bubble.setPosition(position);\n                bubble.setContent(text);\n                bubble.open();\n              }\n            }\n\n            function addRouteShapeToMap(route) {\n              try{\n              route.sections.forEach((section) => {\n                let linestring = H.geo.LineString.fromFlexiblePolyline(section.polyline);\n\n                let polyline = new H.map.Polyline(linestring, {\n                  style: {\n                    lineWidth: 4,\n                    strokeColor: 'rgba(0, 128, 255, 0.7)'\n                  }\n                });\n\n                map.addObject(polyline);\n                map.getViewModel().setLookAtData({\n                  bounds: polyline.getBoundingBox()\n                });\n              });\n              }\n              catch(err){\n                seterr2status(true);\n                document.getElementById('map2').innerHTML = \"\";\n                document.getElementById('panel2').innerHTML = \"\";\n              }\n            }\n\n\n            function addManueversToMap(route) {\n              var svgMarkup = '<svg width=\"18\" height=\"18\" ' +\n                'xmlns=\"http://www.w3.org/2000/svg\">' +\n                '<circle cx=\"8\" cy=\"8\" r=\"8\" ' +\n                  'fill=\"#1b468d\" stroke=\"white\" stroke-width=\"1\" />' +\n                '</svg>',\n                dotIcon = new H.map.Icon(svgMarkup, {anchor: {x:8, y:8}}),\n                group = new H.map.Group(),\n                i,\n                j;\n\n                try{\n              route.sections.forEach((section) => {\n                let poly = H.geo.LineString.fromFlexiblePolyline(section.polyline).getLatLngAltArray();\n\n                let actions = section.actions;\n                for (i = 0; i < actions.length; i += 1) {\n                  let action = actions[i];\n                  var marker = new H.map.Marker({\n                    lat: poly[action.offset * 3],\n                    lng: poly[action.offset * 3 + 1]},\n                    {icon: dotIcon});\n                  marker.instruction = action.instruction;\n                  group.addObject(marker);\n                }\n\n                group.addEventListener('tap', function (evt) {\n                  map.setCenter(evt.target.getGeometry());\n                  openBubble(evt.target.getGeometry(), evt.target.instruction);\n                }, false);\n\n                map.addObject(group);\n              });\n              }\n            catch(err){\n              //console.log(\"Error: Map info/Transit info unavailable\");\n              document.getElementById('map2').innerHTML = \"\";\n              document.getElementById('panel2').innerHTML = \"\";\n            }\n            }\n\n\n            function addWaypointsToPanel(route) {\n              try{\n              var nodeH3 = document.createElement('h3'),\n                labels = [];\n\n              route.sections.forEach((section) => {\n                labels.push(\n                  section.turnByTurnActions[0].nextRoad.name[0].value)\n                labels.push(\n                  section.turnByTurnActions[section.turnByTurnActions.length - 1].currentRoad.name[0].value)\n              });\n\n              nodeH3.textContent = labels.join(' - ');\n              routeInstructionsContainer.innerHTML = '';\n              routeInstructionsContainer.appendChild(nodeH3);\n                }\n            catch(err){\n              document.getElementById('panel2').innerHTML = \"\";\n            }\n            }\n\n            function addSummaryToPanel(route) {\n              let duration = 0,\n                distance = 0;\n              try{\n              route.sections.forEach((section) => {\n                distance += section.travelSummary.length;\n                duration += section.travelSummary.duration;\n              });\n\n              var summaryDiv = document.createElement('div'),\n                content = '<b>Total distance</b>: ' + distance + 'm. <br />' +\n                  '<b>Travel Time</b>: ' + toMMSS(duration) + ' (in current traffic)';\n\n              summaryDiv.style.fontSize = 'small';\n              summaryDiv.style.marginLeft = '5%';\n              summaryDiv.style.marginRight = '5%';\n              summaryDiv.innerHTML = content;\n              routeInstructionsContainer.appendChild(summaryDiv);\n              }\n\n                catch(err){\n                  //console.log(err);\n                  document.getElementById('map2').innerHTML = \"\";\n                  document.getElementById('panel2').innerHTML = \"\";\n                }\n            }\n\n\n            function addManueversToPanel(route) {\n              var nodeOL = document.createElement('ol');\n\n              nodeOL.style.fontSize = 'small';\n              nodeOL.style.marginLeft ='5%';\n              nodeOL.style.marginRight ='5%';\n              nodeOL.className = 'directions';\n\n              try{\n              route.sections.forEach((section) => {\n                section.actions.forEach((action, idx) => {\n                  var li = document.createElement('li'),\n                    spanArrow = document.createElement('span'),\n                    spanInstruction = document.createElement('span');\n\n                  spanArrow.className = 'arrow ' + (action.direction || '') + action.action;\n                  spanInstruction.innerHTML = section.actions[idx].instruction;\n                  li.appendChild(spanArrow);\n                  li.appendChild(spanInstruction);\n\n                  nodeOL.appendChild(li);\n                });\n              });\n\n              routeInstructionsContainer.appendChild(nodeOL);\n            }\n            catch(err){\n              document.getElementById('map2').innerHTML = \"\";\n              document.getElementById('panel2').innerHTML = \"\";\n              console.log(\"Results unavailable\");\n            }\n            }\n\n            function toMMSS(duration) {\n              return Math.floor(duration / 60) + ' minutes ' + (duration % 60) + ' seconds.';\n            }\n            \n            setTimeout(() => setLoading(false),5000);\n            calculateRouteFromAtoB(platform);\n            }\n       \n          \n          }\n          else{\n\n           let keyresponse = await fetch('/getapikey');\n           let keyresult = await keyresponse.json();\n           apikey = keyresult[\"apikey\"];\n           fresponse = await fetch(`/addrgeocode?queryst=${fromloc}`);\n           fresult = await fresponse.json();\n           from = [fresult.items[0][\"position\"][\"lat\"].toString(),fresult.items[0][\"position\"][\"lng\"].toString()].toString();\n           tresponse = await fetch(`/addrgeocode?queryst=${toloc}`);\n           tresult = await tresponse.json();\n           to = [tresult.items[0][\"position\"][\"lat\"].toString(), tresult.items[0][\"position\"][\"lng\"].toString()].toString();\n\n           console.log(\" Non dev mode: \", apikey,from,to);\n          \n        if(modequery === \"pubtransport\"){\n\n            function calculateRouteFromAtoB (platform) {\n              var router = platform.getPublicTransitService(),\n                  routeRequestParams = {\n                    origin: from,\n                    destination: to,\n                    return: 'polyline,actions,travelSummary'\n                  };\n\n\n              router.getRoutes(\n                routeRequestParams,\n                onSuccess,\n                onError\n              );\n            }\n\n            function onSuccess(result) {\n              var route = result.routes[0];\n              addRouteShapeToMap(route);\n              addManueversToMap(route);\n              addManueversToPanel(route);\n              addSummaryToPanel(route);\n            }\n\n            function onError(error) {\n              document.getElementById('map2').innerHTML = \"\";\n              document.getElementById('panel2').innerHTML = \"\";\n              seterr3status(true); \n            }\n\n            document.getElementById('map2').innerHTML = \"\";\n            document.getElementById('panel2').innerHTML = \"\";\n\n            var mapContainer = document.getElementById('map2');\n            var routeInstructionsContainer = document.getElementById('panel2');\n\n            var platform = new H.service.Platform({\n              apikey: apikey\n            });\n            var defaultLayers = platform.createDefaultLayers();\n\n            var map = new H.Map(mapContainer,\n              defaultLayers.vector.normal.map,{\n              center: {lat:52.5160, lng:13.3779},\n              zoom: 13,\n              pixelRatio: window.devicePixelRatio || 1\n            });\n\n            window.addEventListener('resize', () => map.getViewPort().resize());\n\n            var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n\n            var ui = H.ui.UI.createDefault(map, defaultLayers);\n\n            var bubble;\n\n            function openBubble(position, text){\n            if(!bubble){\n                bubble =  new H.ui.InfoBubble(\n                  position,\n                  {content: text});\n                ui.addBubble(bubble);\n              } else {\n                bubble.setPosition(position);\n                bubble.setContent(text);\n                bubble.open();\n              }\n            }\n\n            function addRouteShapeToMap(route){\n\n              try{\n              var group = new H.map.Group();\n              route.sections.forEach(function(section) {\n                group.addObject(\n                  new H.map.Polyline(\n                    H.geo.LineString.fromFlexiblePolyline(section.polyline), {\n                      style: {\n                        lineWidth: 4,\n                        strokeColor: 'rgba(0, 128, 255, 0.7)'\n                      }\n                    }\n                  )\n                );\n              });\n\n              map.addObject(group);\n              map.getViewModel().setLookAtData({\n                bounds: group.getBoundingBox()\n              });\n              }\n            catch(err){\n              document.getElementById('map2').innerHTML = \"\";\n              seterr2status(true); \n            }\n            }\n\n            function addManueversToMap(route){\n              try{\n              var svgMarkup = '<svg width=\"18\" height=\"18\" ' +\n                'xmlns=\"http://www.w3.org/2000/svg\">' +\n                '<circle cx=\"8\" cy=\"8\" r=\"8\" ' +\n                  'fill=\"#1b468d\" stroke=\"white\" stroke-width=\"1\"  />' +\n                '</svg>',\n                dotIcon = new H.map.Icon(svgMarkup, {anchor: {x:8, y:8}}),\n                group = new  H.map.Group(),\n                i;\n\n                route.sections.forEach((section) => {\n                  let poly = H.geo.LineString.fromFlexiblePolyline(section.polyline).getLatLngAltArray();\n                \n                  let actions = section.actions;\n                  if (actions) {\n                    for (i = 0;  i < actions.length; i += 1) {\n                      let action = actions[i];\n                      var marker =  new H.map.Marker({\n                        lat: poly[action.offset * 3],\n                        lng: poly[action.offset * 3 + 1]},\n                        {icon: dotIcon});\n                      marker.instruction = action.instruction;\n                      group.addObject(marker);\n                    }\n                  }\n                });\n\n                group.addEventListener('tap', function (evt) {\n                  map.setCenter(evt.target.getGeometry());\n                  openBubble(\n                    evt.target.getGeometry(), evt.target.instruction);\n                }, false);\n              \n                map.addObject(group);\n                }\n            catch(err){\n              //console.log(\"Error: Map info/Transit info unavailable\");\n              document.getElementById('map2').innerHTML = \"\";\n              document.getElementById('panel2').innerHTML = \"\";\n            }\n            }\n\n\n            function addSummaryToPanel(route){\n              try{\n              let duration = 0,\n                  distance = 0;\n\n              route.sections.forEach((section) => {\n                distance += section.travelSummary.length;\n                duration += section.travelSummary.duration;\n              });\n\n              var summaryDiv = document.createElement('div'),\n              content = '';\n              content += '<b>Total distance</b>: ' + distance  + 'm. <br/>';\n              content += '<b>Travel Time</b>: ' + duration.toMMSS();\n\n\n              summaryDiv.style.fontSize = 'small';\n              summaryDiv.style.marginLeft ='5%';\n              summaryDiv.style.marginRight ='5%';\n              summaryDiv.innerHTML = content;\n              routeInstructionsContainer.appendChild(summaryDiv);\n            }\n            catch(err){\n              document.getElementById('panel2').innerHTML = \"\";\n              //console.log(\"pubtransport info err\");\n            }\n            }\n\n            function addManueversToPanel(route){\n              try{\n              var nodeOL = document.createElement('ol');\n\n              nodeOL.style.fontSize = 'small';\n              nodeOL.style.marginLeft ='5%';\n              nodeOL.style.marginRight ='5%';\n              nodeOL.className = 'directions';\n\n              route.sections.forEach((section) => {\n                if (section.actions) {\n                  section.actions.forEach((action, idx) => {\n                    var li = document.createElement('li'),\n                        spanArrow = document.createElement('span'),\n                        spanInstruction = document.createElement('span');\n\n                    spanArrow.className = 'arrow ' + (action.direction || '') + action.action;\n                    spanInstruction.innerHTML = section.actions[idx].instruction;\n                    li.appendChild(spanArrow);\n                    li.appendChild(spanInstruction);\n\n                    nodeOL.appendChild(li);\n                  });\n                }\n              });\n              routeInstructionsContainer.appendChild(nodeOL);\n            }\n            catch(err){\n              document.getElementById('panel2').innerHTML = \"\";\n            }\n            }\n\n\n              Number.prototype.toMMSS = function () {\n                return  Math.floor(this / 60)  +' minutes '+ (this % 60)  + ' seconds.';\n              }\n\n            setTimeout(() => setLoading(false),5000);\n            calculateRouteFromAtoB (platform);\n            \n                      }\n        else{\n            function calculateRouteFromAtoB(platform) {\n              var router = platform.getRoutingService(null, 8),\n                  routeRequestParams = {\n                    routingMode: 'fast',\n                    transportMode: modequery,\n                    origin: from,\n                    destination: to,\n                    return: 'polyline,turnByTurnActions,actions,instructions,travelSummary'\n                  };\n\n              router.calculateRoute(\n                routeRequestParams,\n                onSuccess,\n                onError\n              );\n            }\n\n            function onSuccess(result) {\n              var route = result.routes[0];\n\n              addRouteShapeToMap(route);\n              addManueversToMap(route);\n              addWaypointsToPanel(route);\n              addManueversToPanel(route);\n              addSummaryToPanel(route);\n            }\n\n\n            function onError(error) {\n              document.getElementById('map2').innerHTML = \"\";\n              document.getElementById('panel2').innerHTML = \"\";\n              seterr3status(true); \n            }\n\n            document.getElementById('map2').innerHTML = \"\";\n            document.getElementById('panel2').innerHTML = \"\";\n\n\n            var mapContainer = document.getElementById('map2')\n            var routeInstructionsContainer = document.getElementById('panel2');\n\n\n            var platform = new H.service.Platform({\n              apikey: apikey\n            });\n\n            var defaultLayers = platform.createDefaultLayers();\n\n            var map = new H.Map(mapContainer,\n              defaultLayers.vector.normal.map, {\n              center: {lat: 52.5160, lng: 13.3779},\n              zoom: 13,\n              pixelRatio: window.devicePixelRatio || 1\n            });\n\n            window.addEventListener('resize', () => map.getViewPort().resize());\n\n              var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n              \n              var ui = H.ui.UI.createDefault(map, defaultLayers);\n              \n              var bubble;\n\n            function openBubble(position, text) {\n              if (!bubble) {\n                bubble = new H.ui.InfoBubble(\n                  position,\n                  {content: text});\n                ui.addBubble(bubble);\n              } else {\n                bubble.setPosition(position);\n                bubble.setContent(text);\n                bubble.open();\n              }\n            }\n\n            function addRouteShapeToMap(route) {\n              try{\n              route.sections.forEach((section) => {\n                let linestring = H.geo.LineString.fromFlexiblePolyline(section.polyline);\n\n                let polyline = new H.map.Polyline(linestring, {\n                  style: {\n                    lineWidth: 4,\n                    strokeColor: 'rgba(0, 128, 255, 0.7)'\n                  }\n                });\n\n                map.addObject(polyline);\n                map.getViewModel().setLookAtData({\n                  bounds: polyline.getBoundingBox()\n                });\n              });\n              }\n              catch(err){\n                seterr2status(true);\n                document.getElementById('map2').innerHTML = \"\";\n                document.getElementById('panel2').innerHTML = \"\";\n              }\n            }\n\n\n            function addManueversToMap(route) {\n              var svgMarkup = '<svg width=\"18\" height=\"18\" ' +\n                'xmlns=\"http://www.w3.org/2000/svg\">' +\n                '<circle cx=\"8\" cy=\"8\" r=\"8\" ' +\n                  'fill=\"#1b468d\" stroke=\"white\" stroke-width=\"1\" />' +\n                '</svg>',\n                dotIcon = new H.map.Icon(svgMarkup, {anchor: {x:8, y:8}}),\n                group = new H.map.Group(),\n                i,\n                j;\n\n                try{\n              route.sections.forEach((section) => {\n                let poly = H.geo.LineString.fromFlexiblePolyline(section.polyline).getLatLngAltArray();\n\n                let actions = section.actions;\n                for (i = 0; i < actions.length; i += 1) {\n                  let action = actions[i];\n                  var marker = new H.map.Marker({\n                    lat: poly[action.offset * 3],\n                    lng: poly[action.offset * 3 + 1]},\n                    {icon: dotIcon});\n                  marker.instruction = action.instruction;\n                  group.addObject(marker);\n                }\n\n                group.addEventListener('tap', function (evt) {\n                  map.setCenter(evt.target.getGeometry());\n                  openBubble(evt.target.getGeometry(), evt.target.instruction);\n                }, false);\n\n                map.addObject(group);\n              });\n              }\n            catch(err){\n              //console.log(\"Error: Map info/Transit info unavailable\");\n              document.getElementById('map2').innerHTML = \"\";\n              document.getElementById('panel2').innerHTML = \"\";\n            }\n            }\n\n\n            function addWaypointsToPanel(route) {\n              try{\n              var nodeH3 = document.createElement('h3'),\n                labels = [];\n\n              route.sections.forEach((section) => {\n                labels.push(\n                  section.turnByTurnActions[0].nextRoad.name[0].value)\n                labels.push(\n                  section.turnByTurnActions[section.turnByTurnActions.length - 1].currentRoad.name[0].value)\n              });\n\n              nodeH3.textContent = labels.join(' - ');\n              routeInstructionsContainer.innerHTML = '';\n              routeInstructionsContainer.appendChild(nodeH3);\n                }\n            catch(err){\n              document.getElementById('panel2').innerHTML = \"\";\n            }\n            }\n\n            function addSummaryToPanel(route) {\n              let duration = 0,\n                distance = 0;\n              try{\n              route.sections.forEach((section) => {\n                distance += section.travelSummary.length;\n                duration += section.travelSummary.duration;\n              });\n\n              var summaryDiv = document.createElement('div'),\n                content = '<b>Total distance</b>: ' + distance + 'm. <br />' +\n                  '<b>Travel Time</b>: ' + toMMSS(duration) + ' (in current traffic)';\n\n              summaryDiv.style.fontSize = 'small';\n              summaryDiv.style.marginLeft = '5%';\n              summaryDiv.style.marginRight = '5%';\n              summaryDiv.innerHTML = content;\n              routeInstructionsContainer.appendChild(summaryDiv);\n              }\n\n                catch(err){\n                  //console.log(err);\n                  document.getElementById('map2').innerHTML = \"\";\n                  document.getElementById('panel2').innerHTML = \"\";\n                }\n            }\n\n\n            function addManueversToPanel(route) {\n              var nodeOL = document.createElement('ol');\n\n              nodeOL.style.fontSize = 'small';\n              nodeOL.style.marginLeft ='5%';\n              nodeOL.style.marginRight ='5%';\n              nodeOL.className = 'directions';\n\n              try{\n              route.sections.forEach((section) => {\n                section.actions.forEach((action, idx) => {\n                  var li = document.createElement('li'),\n                    spanArrow = document.createElement('span'),\n                    spanInstruction = document.createElement('span');\n\n                  spanArrow.className = 'arrow ' + (action.direction || '') + action.action;\n                  spanInstruction.innerHTML = section.actions[idx].instruction;\n                  li.appendChild(spanArrow);\n                  li.appendChild(spanInstruction);\n\n                  nodeOL.appendChild(li);\n                });\n              });\n\n              routeInstructionsContainer.appendChild(nodeOL);\n            }\n            catch(err){\n              document.getElementById('map2').innerHTML = \"\";\n              document.getElementById('panel2').innerHTML = \"\";\n              console.log(\"Results unavailable\");\n            }\n            }\n\n            function toMMSS(duration) {\n              return Math.floor(duration / 60) + ' minutes ' + (duration % 60) + ' seconds.';\n            }\n            \n            setTimeout(() => setLoading(false),5000);\n            calculateRouteFromAtoB(platform);\n            }\n          \n        }\n          }\n          catch(error){\n              setLoading(false);\n              seterr2status(true);\n          }\n\n    }\n      //mapsv2();\n      setTimeout(mapsv2, 2000);\n      setfromloc('');\n      settoloc('');\n  }\n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\n    const validfLocf = (e) => {\n\n      if(!e.target.value.match(/^[a-zA-Z]+$/)){\n        setferrstate(true)\n        setferrtext(\"Only letters allowed. No special characters or numbers\");\n        setbuttonstate(true)\n        }\n      \n        else{\n          setferrstate(false)\n          setbuttonstate(false)\n        }        \n                                    \n      setfromloc(e.target.value)\n                \n                \n      }\n\n      const validtLocf= (e) => {\n               \n\n        if(!e.target.value.match(/^[a-zA-Z]+$/)){\n                          setterrstate(true)\n                          setterrtext(\"Only letters allowed. No special characters or numbers\");\n                          setbuttonstate(true)\n                      }\n       else{\n            setterrstate(false)\n            setbuttonstate(false)\n           }        \n          settoloc(e.target.value)\n                \n                \n            }\n  function err1closef() {\n    seterr1status(false);\n  }\n   function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n            return(\n             <>\n        \n        <Form onSubmit={handleSubmit}>\n\n          <div className=\"TextArea\" >\n            <TextInput id={'fromloc'} labelText = {'From*'} invalid = {ferrstate} invalidText = {ferrtext} placeholder = {'From'} size = 'lg' value={fromloc} onChange={validfLocf} />\n          </div>\n          <div className=\"TextArea\" >\n            <TextInput id={'toloc'} labelText = {'To*'} invalid = {terrstate} invalidText = {terrtext} placeholder = {'To'} size = 'lg' value={toloc} onChange={validtLocf} />\n          </div>\n              <Select labelText=\"Mode of Transport*\" value={modequery} onChange={handleModeChange}>\n                    {modes.map((item, i) => (\n                    <SelectItem value={item.id} key={i} text = {item.value} />\n                    ))}\n              </Select>\n            \n             <div className=\"ButtonAreamap\">\n                <Button type=\"submit\" disabled = {buttonstate} > Get my Route </Button>\n             </div>\n\n        </Form>\n    \n  {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>From and To locations should not be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Results unavailable</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n\n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Cannot reach remote server</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n\n        <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n      <br/>\n\n            { mapdisplay &&\n              <div id = \"route-display2\">\n                <br/>\n                <br/>\n                <div id = 'map2' ></div>\n                <br/>\n                <div id = 'panel2' ></div>\n              </div> }\n            </>\n            );\n};\n\nexport default Mapf2;","import React from 'react'\nimport './App.css';\n\nimport { Tabs, Tab } from 'carbon-components-react';\nimport {Header,HeaderName} from \"carbon-components-react/lib/components/UIShell\";\n\nimport Geocode1 from './components/geocodef1';\nimport Geocode2 from './components/geocodef2';\nimport Transit1 from './components/transitf1';\nimport Transit2 from './components/transitf2';\nimport Mapf1 from './components/mapf1';\nimport Mapf2 from './components/mapf2';\n\nfunction App() {\n  \n  return (\n\n    <>\n    \n      <Header aria-label=\"IBM\">\n        <HeaderName prefix = \"\" href=\"#\">\n          <div Style=\"white-space: nowrap;\">\n            HERE Public Transit Sample Application\n            </div>\n          </HeaderName>\n        </Header> \n\n    <div className=\"App\">\n     <div className = \"AppContent\">\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n     <h2>Location Details</h2>\n\n        <Tabs type='container'>\n          <Tab id=\"tab-g1\" label=\"Get Co-ordinates\">\n            <div className=\"TabArea\">\n            <Geocode1 />\n            </div>\n          </Tab>\n          <Tab id=\"tab-g2\" label=\"Get Area\">\n            <div className=\"TabArea\">\n            <Geocode2 />\n            </div>\n          </Tab>\n        </Tabs>\n     \n      \n       <h2>Public Transit Services</h2>\n\n         <Tabs type='container'>\n          <Tab id=\"tab-s1\" label=\"Transit Stations\">\n            <div className=\"TabArea\">\n            <Transit1 />\n            </div>\n          </Tab>\n          <Tab id=\"tab-s2\" label=\"Next Departures\">\n            <div className=\"TabArea\">\n            <Transit2 />\n            </div>\n          </Tab>\n        </Tabs>\n\n      <h2> Route Services </h2>\n\n         <Tabs type='container'>\n          <Tab id=\"tab-t1\" label=\"By Co-ordinates\">\n            <div className=\"TabArea\">\n            <Mapf1 />\n            </div>\n          </Tab>\n          <Tab id=\"tab-t2\" label=\"By Area\">\n            <div className=\"TabArea\">\n             <Mapf2 />\n             </div>\n          </Tab>\n        </Tabs>\n\n      <br/>\n\n    </div>\n    </div>\n\n    </>\n\n    \n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.scss\";\nimport \"./style.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}