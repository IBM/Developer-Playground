{"version":3,"sources":["components/geocodef1.js","components/geocodef2.js","components/transitf1.js","components/transitf2.js","components/mapf1.js","components/mapf2.js","App.js","index.js"],"names":["Geocode","useState","location","setlocation","errstate","seterrstate","errtext","seterrtext","buttonstate","setbuttonstate","geocodeobj","setGeocodeobj","isLoading","setLoading","err1status","seterr1status","err2status","seterr2status","err3status","seterr3status","Form","onSubmit","e","preventDefault","areaToCoord","a","process","REACT_APP_mode","headers","fetch","response","json","result","JSON","stringify","items","TextInput","type","id","labelText","invalid","invalidText","helperText","placeholder","size","value","onChange","target","match","className","Button","disabled","iconDescription","subtitle","timeout","onClose","title","Loading","active","description","withOverlay","DataTable","rows","key","header","getHeaderProps","TableContainer","Table","TableHead","TableRow","map","TableHeader","TableBody","row","index","TableCell","address","label","position","lat","lng","Geocode2","latitude","setlatitude","longitude","setlongitude","lterrstate","setlterrstate","lngerrstate","setlngerrstate","locationstr","concat","geocode2","Transit1","searchsv2","stations","place","name","Transit2","radius","setradius","depobj","setdepobj","locerrstate","setlocerrstate","locerrtext","setlocerrtext","raderrstate","setraderrstate","raderrtext","setraderrtext","err4status","seterr4status","displaydeparture","depvalue","boards","departures","transt1","locstr","toString","hasOwnProperty","Link","onClick","depval","time","word","transport","mode","toUpperCase","substring","toLowerCase","headsign","Mapf1","fromcoord","setfromcoord","tocoord","settocoord","fcerrstate","setfcerrstate","fcerrtext","setfcerrtext","tcerrstate","settcerrstate","tcerrtext","settcerrtext","routeaxnobj","setrouteaxnobj","routesummary","setroutesummary","modes","modequery","setmodequery","mapdisplay1","setmapdisplay1","toMMSS","duration","Math","floor","mapsv","apikey","keyresponse","keyresult","calculateRouteFromAtoB","platform","router","getPublicTransitService","routeRequestParams","origin","destination","return","getRoutes","onSuccess","onError","route","routes","addRouteShapeToMap","addManueversToMap","addManueversToPanel","addSummaryToPanel","error","document","getElementById","innerHTML","openBubble","text","bubble","setPosition","setContent","open","H","ui","InfoBubble","content","addBubble","group","Group","sections","forEach","section","addObject","Polyline","geo","LineString","fromFlexiblePolyline","polyline","style","lineWidth","strokeColor","getViewModel","setLookAtData","bounds","getBoundingBox","err","i","dotIcon","Icon","anchor","x","y","poly","getLatLngAltArray","actions","length","action","marker","Marker","offset","icon","instruction","addEventListener","evt","setCenter","getGeometry","distance","travelSummary","mapContainer","service","Platform","defaultLayers","createDefaultLayers","Map","vector","normal","center","zoom","pixelRatio","window","devicePixelRatio","getViewPort","resize","mapevents","Behavior","MapEvents","UI","createDefault","setTimeout","getRoutingService","routingMode","transportMode","calculateRoute","linestring","Select","event","item","SelectItem","direction","Mapf2","fromloc","setfromloc","toloc","settoloc","ferrstate","setferrstate","ferrtext","setferrtext","terrstate","setterrstate","terrtext","setterrtext","mapdisplay","setmapdisplay","mapsv2","fresponse","tresponse","fresult","from","tresult","to","console","log","App","prefix","Style","Tabs","Tab","ReactDOM","render"],"mappings":"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","file":"static/js/main.c50d3f43.chunk.js","sourcesContent":["import React, { useState} from 'react';\nimport raw from 'raw.macro';\nimport { Button,TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer} from 'carbon-components-react';\n\nfunction Geocode() {\n  const [location, setlocation] = useState('');\n  const [errstate, seterrstate] = useState(false);\n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n\n    if (location) {\n\n        const areaToCoord = async() => {\n\n        try{\n\n          if(process.env.REACT_APP_mode === \"dev\"){\n                \n                  const authtoken = raw('./auth.txt');                  \n                  let headers = {'Authorization' : authtoken}\n                  let response = await fetch(`https://geocode.search.hereapi.com/v1/geocode?q=${location}`,{ headers})\n                  let result = await response.json();\n\n                   setGeocodeobj({...result})\n                  setLoading(false);\n\n                if(JSON.stringify(result.items) === '[]'){\n                      seterr3status(true);\n                      setGeocodeobj({});\n                     }\n          }\n          else{            \n            let response = await fetch(`/addrgeocode?queryst=${location}`);\n            let result = await response.json();\n\n            setGeocodeobj({...result})\n            setLoading(false);\n\n          if(JSON.stringify(result.items) === '[]'){\n            seterr3status(true); \n            setGeocodeobj({});\n          }\n          }          \n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n        areaToCoord();\n\n      setlocation('');\n    } \n    \n    else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'address',\n    header: 'Address',\n  },\n    {\n    key: 'location',\n    header: 'Location',\n  },\n];\n\n  function err1closef() {\n    seterr1status(false);\n  }\n  function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n\nconst validLocf = (e) => {\n         if(!e.target.value.match(/^[a-zA-Z]+$/)){\n              seterrstate(true)\n              seterrtext(\"Only letters allowed. No special characters or numbers\");\n              setbuttonstate(true)\n           }\n        else{\n            seterrstate(false)\n            setbuttonstate(false)\n        }        \n        \n        setlocation(e.target.value)\n        \n}\n\n  return (\n    <>\n    <Form onSubmit={handleSubmit}>\n      <TextInput type = \"text\" id={'location'} labelText = {'Location*'}  invalid = {errstate} invalidText = {errtext} helperText=\"Input values only in alphabets - City/Town/Street.\" placeholder = {'Location'} size = 'lg' value={location} onChange={validLocf} />\n      <div className=\"ButtonArea\">\n        <Button type=\"submit\" disabled = {buttonstate} > Get Area Co-ordinates </Button>\n      </div>\n      \n    </Form>\n\n    {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Location input is empty. Please fill a valid Location</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n      {geocodeobj.items && \n         <div className = \"TableDisplay\" >\n\n          {geocodeobj.items && \n          \n          <DataTable rows={geocodeobj.items} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Location Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.items && geocodeobj.items.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.title}</TableCell>\n                        <TableCell>{row.address.label}</TableCell>\n                        <TableCell>{row.position.lat + \",\" + row.position.lng}</TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>}\n\n    </>\n  );\n};\n\nexport default Geocode;\n","import React, { useState} from 'react';\nimport raw from 'raw.macro';\nimport { Button, TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\n import {\n  DataTable,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  TableContainer\n} from 'carbon-components-react';\n\nfunction Geocode2() {\n\n  const [latitude, setlatitude] = useState('');\n  const [longitude, setlongitude] = useState('');\n\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n  \n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n      \n\n  if (latitude && longitude) {\n\n        const locationstr = latitude.concat(',').concat(longitude);\n        const geocode2 = async() => {\n\n        try{\n        \n           if(process.env.REACT_APP_mode === \"dev\"){\n            const authtoken = raw('./auth.txt');\n            let headers = {'Authorization' : authtoken}\n            let response = await fetch(`https://revgeocode.search.hereapi.com/v1/revgeocode?at=${locationstr}`,{ headers})\n            let result = await response.json();\n\n\n          setGeocodeobj({...result});\n          setLoading(false);\n\n          if(JSON.stringify(result.items) === '[]'){\n            seterr3status(true);\n            setGeocodeobj({});\n          }\n        }\n\n        else{\n          let response = await fetch(`/revaddrgeocode?location=${locationstr}`);\n          let result = await response.json();\n          \n          setGeocodeobj({...result});\n          setLoading(false);\n\n          if(JSON.stringify(result.items) === '[]'){\n            seterr3status(true);  \n            setGeocodeobj({});\n          }\n        }\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      \n      geocode2();\n      setlatitude('');\n      setlongitude('');\n\n      }\n    \n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n  {\n    key: 'address',\n    header: 'Address',\n  },\n    {\n    key: 'location',\n    header: 'Location',\n  },\n];\n\nconst [lterrstate, setlterrstate] = useState(false);\nconst [lngerrstate, setlngerrstate] = useState(false);\n\nconst validLatf = (e) => {\n\n         if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?){2}$/)){\n              setlterrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlterrstate(false)\n            setbuttonstate(false)\n        }        \n       \n    \n        \n        setlatitude(e.target.value)\n    \n    \n}\nconst validLongf = (e) => {\n\n         if(!e.target.value.match(/^\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setlngerrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlngerrstate(false)\n            setbuttonstate(false)\n        }        \n        \n        setlongitude(e.target.value)\n    \n    \n}\n\n  function err1closef() {\n    seterr1status(false);\n  }\n  function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n\n  return (\n    <>\n\n    <Form onSubmit={handleSubmit}>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'latitude'} labelText = {'Latitude*'} invalid = {lterrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Latitude'} size = 'lg' value={latitude} onChange={validLatf} />\n      </div>\n       <div className=\"TextArea\" >\n      <TextInput id={'longitude'} labelText = {'Longitude*'} invalid = {lngerrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Longitude'} size = 'lg' value={longitude} onChange={validLongf} />\n      </div>\n      <div className=\"ButtonArea\" >\n        <Button type=\"submit\" disabled = {buttonstate}> Get Address</Button>\n      </div>\n      </Form>\n\n  {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude values cannot be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n      {geocodeobj.items && \n         <div className = \"TableDisplay\">\n\n              {geocodeobj.items && \n          \n          <DataTable rows={geocodeobj.items} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Location Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.items && geocodeobj.items.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.title}</TableCell>\n                        <TableCell>{row.address.label}</TableCell>\n                        <TableCell>{row.position.lat + \",\" + row.position.lng}</TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>}\n\n\n    </>\n  );\n};\n\nexport default Geocode2;\n","import React, { useState} from 'react';\nimport raw from 'raw.macro';\nimport { Button,TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer} from 'carbon-components-react';\n\nfunction Transit1() {\n\n  const [latitude, setlatitude] = useState('');\n  const [longitude, setlongitude] = useState('');\n  const [isLoading,setLoading] = useState(false);\n\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n\n    const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n    \n    if (latitude && longitude) {\n          \n\n      const locationstr = latitude.concat(',').concat(longitude);\n      \n        const searchsv2 = async() => {\n\n        try{\n\n         if(process.env.REACT_APP_mode === \"dev\"){\n            const authtoken = raw('./auth.txt');\n            let headers = {'Authorization' : authtoken}\n            let response = await fetch(`https://transit.hereapi.com/v8/stations?in=${locationstr}`,{ headers})\n            let result = await response.json();\n            setGeocodeobj({...result});\n          setLoading(false);\n\n          if(JSON.stringify(result.stations) === '[]'){\n             seterr3status(true);  \n             setGeocodeobj({});\n          }\n         }\n         else{            \n            let response = await fetch(`/getstations?location=${locationstr}`);\n            let result = await response.json();\n\n          setGeocodeobj({...result});\n          setLoading(false);\n\n          if(JSON.stringify(result.stations) === '[]'){\n             seterr3status(true);  \n             setGeocodeobj({});\n          }\n\n         }\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      searchsv2();\n      setlatitude('');\n      setlongitude('');\n      }\n    \n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'id',\n    header: 'Id',\n  },\n  {\n    key: 'name',\n    header: 'Name',\n  },\n    {\n    key: 'location',\n    header: 'Location',\n  },\n];\nconst [lterrstate, setlterrstate] = useState(false);\nconst [lngerrstate, setlngerrstate] = useState(false);\n\nconst validLatf = (e) => {\n\n         if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?){2}$/)){\n              setlterrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlterrstate(false)\n            setbuttonstate(false)\n        }        \n        \n        setlatitude(e.target.value) \n}\n\nconst validLongf = (e) => {\n\n         if(!e.target.value.match(/^\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setlngerrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlngerrstate(false)\n            setbuttonstate(false)\n        }                \n        setlongitude(e.target.value)\n     \n}\n\n  function err1closef() {\n    seterr1status(false);\n  }\n  function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n\n\n  return (\n    <>\n\n    <Form onSubmit={handleSubmit}>\n\n      <div className=\"TextArea\" >\n        <TextInput id={'latitude'} labelText = {'Latitude*'} invalid = {lterrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Latitude'} size = 'lg' value={latitude} onChange={validLatf} />\n      </div>\n      <div className=\"TextArea\" >\n        <TextInput id={'longitude'} labelText = {'Longitude*'} invalid = {lngerrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Longitude'} size = 'lg' value={longitude} onChange={validLongf} />\n      </div>\n      <div className=\"ButtonArea\">\n        <Button type=\"submit\" disabled = {buttonstate} > Get Transit Stations </Button>\n      </div>\n      </Form>\n\n     {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude values cannot be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Stations not found</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n\n    <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n\n {geocodeobj.stations && \n         <div className = \"TableDisplay\">\n            {geocodeobj.stations && \n          \n          <DataTable rows={geocodeobj.stations} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Public Transit Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.stations && geocodeobj.stations.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.place.id}</TableCell>\n                        <TableCell>{row.place.name}</TableCell>\n                        <TableCell>{row.place.location.lat + \",\" + row.place.location.lng}</TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>}\n\n\n    </>\n  );\n};\n\nexport default Transit1;\n","import React, { useState} from 'react';\nimport raw from 'raw.macro';\nimport { Button,TextInput, Form, Link, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer} from 'carbon-components-react';\n\nfunction Transit2(){\n\n  const [location, setlocation] = useState('');\n  const [radius, setradius] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [depobj, setdepobj] = useState({});\n\n  const [locerrstate, setlocerrstate] = useState(false);\n  const [locerrtext, setlocerrtext] = useState('A valid value is required');\n  const [raderrstate, setraderrstate] = useState(false);\n  const [raderrtext, setraderrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n  const [err4status, seterr4status] = useState(false);\n\n    const departureSubmit = (depval) => {\n    setLoading(true);\n    displaydeparture(depval);\n\n  }\n\n  const displaydeparture = (depvalue) => {\n\n    setdepobj(geocodeobj.boards[depvalue].departures);\n    setLoading(false);\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n      \n    if (location && radius) {\n\n        const transt1 = async() => {\n\n        try{\n\n           if(process.env.REACT_APP_mode === \"dev\"){\n            const authtoken = raw('./auth.txt');\n            let headers = {'Authorization' : authtoken}\n            let response = await fetch(`https://geocode.search.hereapi.com/v1/geocode?q=${location}`,{ headers})\n            let result = await response.json();\n            let locstr = [result.items[0][\"position\"][\"lat\"].toString(),result.items[0][\"position\"][\"lng\"].toString()].toString().concat(\";r=\").concat(radius);\n            \n            response = await fetch(`https://transit.hereapi.com/v8/departures?in=${locstr}`,{ headers})\n            result = await response.json();\n\n            setGeocodeobj({...result});\n            setLoading(false);\n\n            if(JSON.stringify(result.boards) === '[]'){\n              seterr3status(true); \n              setGeocodeobj({});\n            }\n            if(result.hasOwnProperty('title')){\n              seterr4status(true); \n              setGeocodeobj({});\n            }\n\n          }\n          else{    \n            let response = await fetch(`/addrgeocode?queryst=${location}`);\n            let result = await response.json();\n\n            let locstr = [result.items[0][\"position\"][\"lat\"].toString(),result.items[0][\"position\"][\"lng\"].toString()].toString().concat(\";r=\").concat(radius);\n            \n            response = await fetch(`/getdepartures?location=${locstr}`);\n            result = await response.json();            \n\n          setGeocodeobj({...result});\n          setLoading(false);\n\n          if(JSON.stringify(result.boards) === '[]'){\n             seterr3status(true); \n             setGeocodeobj({});\n          }\n          if(result.hasOwnProperty('title')){\n            seterr4status(true); \n            setGeocodeobj({});\n          }\n        }\n \n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      \n        transt1();\n        setlocation('');\n        setradius('');\n      }\n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'name',\n    header: 'Name',\n  },\n    {\n    key: 'location',\n    header: 'Location',\n  },\n      {\n    key: 'listing',\n    header: '',\n  },\n];\n\nconst headers1 = [\n  {\n    key: 'departure time',\n    header: 'Departure Time',\n  },\n    {\n    key: 'departure transport',\n    header: 'Mode of Transport',\n  },\n  {\n    key: 'departure point',\n    header: 'Destination'\n  }\n];\n\nfunction capitalize(word) {\n  return word[0].toUpperCase() + word.substring(1).toLowerCase();\n}\n\nconst validLocf = (e) => {\n\n         if(!e.target.value.match(/^[a-zA-Z]+$/)){\n              setlocerrstate(true)\n              setlocerrtext(\"Only letters allowed. No special characters or numbers\");\n              setbuttonstate(true)\n           }\n        else{\n            setlocerrstate(false)\n            setbuttonstate(false)\n        }        \n        \n        setlocation(e.target.value)\n    \n    \n}\n\nconst validRadf = (e) => {\n\n         if(!e.target.value.match(/^[0-9]*$/)){\n              setraderrstate(true)\n              setraderrtext(\"Only numbers allowed. No special characters or letters\");\n              setbuttonstate(true)\n           }\n        else{\n            setraderrstate(false)\n            setbuttonstate(false)\n        }        \n        \n        setradius(e.target.value)\n    \n    \n}\n  function err1closef() {\n    seterr1status(false);\n  }\n  function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n  function err4closef() {\n    seterr4status(false);\n  }\n\n  return (\n    <>\n\n      <Form onSubmit={handleSubmit}>\n\n      <div className=\"TextArea\" >\n        <TextInput id={'location'} labelText = {'Location*'} invalid = {locerrstate} invalidText = {locerrtext} helperText=\"Input values only in alphabets - City/Town/Street.\" placeholder = {'Location'} size = 'lg' value={location} onChange={validLocf} />\n      </div>\n      <div className=\"TextArea\" >\n        <TextInput id={'radius'} labelText = {'Radius in metres*'} invalid = {raderrstate} invalidText = {raderrtext} placeholder = {'Radius'} helperText=\"Input value in numbers.\" size = 'lg' value={radius} onChange={validRadf} />\n      </div>\n\n       <div className=\"ButtonArea\">\n          <Button type=\"submit\" disabled = {buttonstate}> Get Transit Stations </Button>\n      </div>\n      </Form>\n\n      {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Location, Radius values should not be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No Departures Found</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err4status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Invalid input. Radius must be in range of 0-999999999 metres</span>}\n        timeout={3000}\n        onClose = {err4closef}\n        title=\"Error Notification\"\n      />\n      }\n\n    <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n     {geocodeobj.boards && \n        <div className = \"TableDisplay\">\n\n            {geocodeobj.boards && \n          \n          <DataTable rows={geocodeobj.boards} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Public Transit Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.boards && geocodeobj.boards.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.place.name}</TableCell>\n                        <TableCell>{row.place.location.lat + \",\" + row.place.location.lng}</TableCell>\n                        <TableCell><Link onClick={() => departureSubmit(index)}>List Destinations</Link></TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n          <br/>\n          <br/>\n          \n          {depobj[0] && \n          \n          <DataTable rows={depobj} headers={headers1}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Destination Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {depobj && depobj.map((row, index) => {\n                return (\n\n                      <TableRow key={index} >\n\n                        <TableCell>{row.time}</TableCell>\n                        <TableCell>{capitalize(row.transport.mode)}</TableCell>\n                        <TableCell>{row.transport.headsign}</TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>} \n\n\n        </div>}\n\n    </>\n  );\n};\n\nexport default Transit2;\n","/* eslint-disable */\nimport React, { useState} from 'react';\nimport { Button,TextInput, Form, Select, SelectItem, Loading, ToastNotification } from 'carbon-components-react';\n import {\n  DataTable,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell\n} from 'carbon-components-react';\nimport H from \"@here/maps-api-for-javascript\";\nimport 'here-js-api/styles/mapsjs-ui.css';\n\nfunction Mapf1(){\n\n  const [fromcoord,setfromcoord] = useState('');\n  const [tocoord,settocoord] = useState('');\n  const [fcerrstate, setfcerrstate] = useState(false);\n  const [fcerrtext, setfcerrtext] = useState('A valid value is required');\n  const [tcerrstate, settcerrstate] = useState(false);\n  const [tcerrtext, settcerrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n  const [routeaxnobj, setrouteaxnobj] = useState({});\n  const [routesummary, setroutesummary] = useState('');\n\n  const modes = [\n  {\n    id: 'car',\n    value: 'Drive a Car',\n  },\n  {\n    id: 'pedestrian',\n    value: 'Let me Walk',\n  },\n  {\n    id: 'pubtransport',\n    value: 'Use Public Transport',\n  },\n];\n\n\n const [modequery, setmodequery] = useState(modes[0].id);\n const [mapdisplay1,setmapdisplay1] = useState('');\n\n const handleModeChange = (event) => {\n    setmodequery(event.target.value);\n  }\n\n    function toMMSS(duration) {\n        return Math.floor(duration / 60) + ' minutes ' + (duration % 60) + ' seconds.';\n     }\n\n   const handleSubmit = (e) => {\n      e.preventDefault(); \n      setLoading(true);\n      setmapdisplay1('Route')\n\n    if (fromcoord && tocoord) {\n\n        const mapsv = async() => {\n\n        try{\n\n          let apikey;\n\n          if(process.env.REACT_APP_mode === \"dev\"){\n            apikey = process.env.REACT_APP_APIKEY;\n          }\n          else{\n\n           let keyresponse = await fetch('/getapikey');\n           let keyresult = await keyresponse.json();\n           apikey = keyresult[\"apikey\"];\n\n          }\n\n          if(modequery === \"pubtransport\"){\n\n          function calculateRouteFromAtoB (platform) {\n            var router = platform.getPublicTransitService(),\n                routeRequestParams = {\n                  origin: fromcoord,\n                  destination: tocoord,\n                  return: 'polyline,actions,travelSummary'\n                };\n\n\n            router.getRoutes(\n              routeRequestParams,\n              onSuccess,\n              onError\n            );\n          }\n\n          function onSuccess(result) {\n            var route = result.routes[0];\n            addRouteShapeToMap(route);\n            addManueversToMap(route);\n            addManueversToPanel(route);\n            addSummaryToPanel(route);\n          }\n\n          function onError(error) {\n            document.getElementById('map').innerHTML = \"\";\n            setrouteaxnobj({});\n            seterr3status(true); \n          }\n\n          document.getElementById('map').innerHTML = \"\";\n          setrouteaxnobj({});\n\n          var mapContainer = document.getElementById('map');\n\n          var platform = new H.service.Platform({\n            apikey: apikey\n          });\n          var defaultLayers = platform.createDefaultLayers();\n\n          var map = new H.Map(mapContainer,\n            defaultLayers.vector.normal.map,{\n            center: {lat:52.5160, lng:13.3779},\n            zoom: 13,\n            pixelRatio: window.devicePixelRatio || 1\n          });\n\n          window.addEventListener('resize', () => map.getViewPort().resize());\n\n          var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n\n          var ui = H.ui.UI.createDefault(map, defaultLayers);\n\n          var bubble;\n\n          function openBubble(position, text){\n          if(!bubble){\n              bubble =  new H.ui.InfoBubble(\n                position,\n                {content: text});\n              ui.addBubble(bubble);\n            } else {\n              bubble.setPosition(position);\n              bubble.setContent(text);\n              bubble.open();\n            }\n          }\n\n          function addRouteShapeToMap(route){\n\n            try{\n            var group = new H.map.Group();\n            route.sections.forEach(function(section) {\n              group.addObject(\n                new H.map.Polyline(\n                  H.geo.LineString.fromFlexiblePolyline(section.polyline), {\n                    style: {\n                      lineWidth: 4,\n                      strokeColor: 'rgba(0, 128, 255, 0.7)'\n                    }\n                  }\n                )\n              );\n            });\n\n            map.addObject(group);\n            map.getViewModel().setLookAtData({\n              bounds: group.getBoundingBox()\n            });\n            }\n          catch(err){\n            document.getElementById('map').innerHTML = \"\";\n            setrouteaxnobj({});\n            seterr2status(true);\n          }\n          }\n\n          function addManueversToMap(route){\n            try{\n            var svgMarkup = '<svg width=\"18\" height=\"18\" ' +\n              'xmlns=\"http://www.w3.org/2000/svg\">' +\n              '<circle cx=\"8\" cy=\"8\" r=\"8\" ' +\n                'fill=\"#1b468d\" stroke=\"white\" stroke-width=\"1\"  />' +\n              '</svg>',\n              dotIcon = new H.map.Icon(svgMarkup, {anchor: {x:8, y:8}}),\n              group = new  H.map.Group(),\n              i;\n\n              route.sections.forEach((section) => {\n                let poly = H.geo.LineString.fromFlexiblePolyline(section.polyline).getLatLngAltArray();\n              \n                let actions = section.actions;\n                if (actions) {\n                  for (i = 0;  i < actions.length; i += 1) {\n                    let action = actions[i];\n                    var marker =  new H.map.Marker({\n                      lat: poly[action.offset * 3],\n                      lng: poly[action.offset * 3 + 1]},\n                      {icon: dotIcon});\n                    marker.instruction = action.instruction;\n                    group.addObject(marker);\n                  }\n                }\n              });\n\n              group.addEventListener('tap', function (evt) {\n                map.setCenter(evt.target.getGeometry());\n                openBubble(\n                  evt.target.getGeometry(), evt.target.instruction);\n              }, false);\n            \n              map.addObject(group);\n              }\n          catch(err){\n            document.getElementById('map').innerHTML = \"\";\n            setrouteaxnobj({});\n          }\n          }\n\n\n         function addSummaryToPanel(route) {\n\n                try{\n                    let distance = route.sections[0].travelSummary.length.toString();\n                    let duration = toMMSS(route.sections[0].travelSummary.duration).toString();\n                    let str = \"Route Distance and Duration: \" + distance + ' m,  ' + duration\n                    setroutesummary(str)\n                }\n                \n                catch(err){\n                  //console.log(err);\n                  document.getElementById('map').innerHTML = \"\";\n                  setrouteaxnobj({});\n                }\n            }\n\n            function addManueversToPanel(route) {\n                try{\n                    setrouteaxnobj(route.sections[0]);\n                }\n\n                catch(err){\n                    document.getElementById('map').innerHTML = \"\";\n                    setrouteaxnobj({});\n                    //console.log(\"Results unavailable\");\n                    }\n            }\n          \n           \n\n          setTimeout(() => setLoading(false),5000);\n          calculateRouteFromAtoB (platform);\n          \n          }\n\n          else{\n\n            function calculateRouteFromAtoB(platform) {\n              var router = platform.getRoutingService(null, 8),\n                  routeRequestParams = {\n                    routingMode: 'fast',\n                    transportMode: modequery,\n                    origin: fromcoord,\n                    destination: tocoord,\n                    return: 'polyline,turnByTurnActions,actions,instructions,travelSummary'\n                  };\n\n              router.calculateRoute(\n                routeRequestParams,\n                onSuccess,\n                onError\n              );\n            }\n\n            function onSuccess(result) {\n              var route = result.routes[0];\n\n              addRouteShapeToMap(route);\n              addManueversToMap(route);\n              addManueversToPanel(route);\n              addSummaryToPanel(route);\n            }\n\n\n            function onError(error) {\n              \n              document.getElementById('map').innerHTML = \"\";\n              setrouteaxnobj({});\n              seterr3status(true); \n            }\n\n            document.getElementById('map').innerHTML = \"\";\n            setrouteaxnobj({});\n\n            var mapContainer = document.getElementById('map')\n\n            var platform = new H.service.Platform({\n              apikey: apikey\n            });\n\n            var defaultLayers = platform.createDefaultLayers();\n\n            var map = new H.Map(mapContainer,\n              defaultLayers.vector.normal.map, {\n              center: {lat: 52.5160, lng: 13.3779},\n              zoom: 13,\n              pixelRatio: window.devicePixelRatio || 1\n            });\n\n            window.addEventListener('resize', () => map.getViewPort().resize());\n\n              var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n              \n              var ui = H.ui.UI.createDefault(map, defaultLayers);\n              \n              var bubble;\n\n            function openBubble(position, text) {\n              if (!bubble) {\n                bubble = new H.ui.InfoBubble(\n                  position,\n                  {content: text});\n                ui.addBubble(bubble);\n              } else {\n                bubble.setPosition(position);\n                bubble.setContent(text);\n                bubble.open();\n              }\n            }\n\n            function addRouteShapeToMap(route) {\n              try{\n              route.sections.forEach((section) => {\n                let linestring = H.geo.LineString.fromFlexiblePolyline(section.polyline);\n\n                let polyline = new H.map.Polyline(linestring, {\n                  style: {\n                    lineWidth: 4,\n                    strokeColor: 'rgba(0, 128, 255, 0.7)'\n                  }\n                });\n\n                map.addObject(polyline);\n                map.getViewModel().setLookAtData({\n                  bounds: polyline.getBoundingBox()\n                });\n              });\n            }\n              catch(err){\n                seterr2status(true);\n                document.getElementById('map').innerHTML = \"\";\n                setrouteaxnobj({});\n              }\n            }\n\n\n            function addManueversToMap(route) {\n\n              var svgMarkup = '<svg width=\"18\" height=\"18\" ' +\n                'xmlns=\"http://www.w3.org/2000/svg\">' +\n                '<circle cx=\"8\" cy=\"8\" r=\"8\" ' +\n                  'fill=\"#1b468d\" stroke=\"white\" stroke-width=\"1\" />' +\n                '</svg>',\n                dotIcon = new H.map.Icon(svgMarkup, {anchor: {x:8, y:8}}),\n                group = new H.map.Group(),\n                i,\n                j;\n\n              try{\n              route.sections.forEach((section) => {\n                let poly = H.geo.LineString.fromFlexiblePolyline(section.polyline).getLatLngAltArray();\n\n                let actions = section.actions;\n                for (i = 0; i < actions.length; i += 1) {\n                  let action = actions[i];\n                  var marker = new H.map.Marker({\n                    lat: poly[action.offset * 3],\n                    lng: poly[action.offset * 3 + 1]},\n                    {icon: dotIcon});\n                  marker.instruction = action.instruction;\n                  group.addObject(marker);\n                }\n\n                group.addEventListener('tap', function (evt) {\n                  map.setCenter(evt.target.getGeometry());\n                  openBubble(evt.target.getGeometry(), evt.target.instruction);\n                }, false);\n\n                map.addObject(group);\n              });\n            }\n            catch(err){\n              document.getElementById('map').innerHTML = \"\";\n              setrouteaxnobj({});\n            }\n            }\n\n            \n            function addSummaryToPanel(route) {\n\n                try{\n                    let distance = route.sections[0].travelSummary.length.toString();\n                    let duration = toMMSS(route.sections[0].travelSummary.duration).toString();\n                    let str = \"Route Distance and Duration: \" + distance + ' m,  ' + duration\n                    setroutesummary(str)\n                }\n                \n                catch(err){\n                  //console.log(err);\n                  document.getElementById('map').innerHTML = \"\";\n                  setrouteaxnobj({});\n                }\n            }\n\n\n            function addManueversToPanel(route) {\n                try{\n                    setrouteaxnobj(route.sections[0]);\n                }\n\n                catch(err){\n                    document.getElementById('map').innerHTML = \"\";\n                    setrouteaxnobj({});\n                    //console.log(\"Results unavailable\");\n                    }\n            }\n            \n            setTimeout(() => setLoading(false),5000);\n            calculateRouteFromAtoB(platform);\n            \n            }\n\n          }\n\n        catch(error){\n          setLoading(false);\n          seterr2status(true);\n        }\n\n        }\n        setTimeout(mapsv, 2000);\n        setfromcoord('');\n        settocoord('');\n      }\n    else {\n      setLoading(false);\n      seterr1status(true);\n    }\n    };\n\n\nconst validfCoordf = (e) => {\n\n         if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setfcerrstate(true)\n              setfcerrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n              \n           }\n        else{\n            setfcerrstate(false)\n            setbuttonstate(false)\n        }       \n        setfromcoord(e.target.value)\n    \n    \n}\nconst validtCoordf = (e) => {\n\n         if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?),\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              settcerrstate(true)\n              settcerrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n              \n           }\n        else{\n            settcerrstate(false)\n            setbuttonstate(false)\n        }                \n        settocoord(e.target.value)\n    \n    \n}\n\n  function err1closef() {\n    seterr1status(false);\n  }\n   function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n\n    const headers = [\n  {\n    key: 'routesummary',\n    header: routesummary,\n  }\n];\n\n  return(\n    <>    \n        <Form onSubmit={handleSubmit}>\n\n            <div className=\"TextArea\" >\n            <TextInput id={'fromcoord'} labelText = {'From*'} placeholder = {'From Co-ordinates'} invalid = {fcerrstate} invalidText = {fcerrtext} size = 'lg' value={fromcoord} onChange={validfCoordf} />\n            </div>\n            <div className=\"TextArea\" >\n            <TextInput id={'tocoord'} labelText = {'To*'} placeholder = {'To Co-ordinates'} invalid = {tcerrstate} invalidText = {tcerrtext} size = 'lg' value={tocoord} onChange={validtCoordf} />\n            </div>\n              <Select labelText=\"Mode of Transport*\" value={modequery} onChange={handleModeChange}>\n                    {modes.map((item, i) => (\n                    <SelectItem value={item.id} key={i} text = {item.value} />\n                    ))}\n              </Select>\n              \n             <div className=\"ButtonAreamap\">\n                <Button type=\"submit\" disabled = {buttonstate} > Get my Route </Button>\n             </div>\n\n        </Form>\n\n  {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude values for the From and To locations should not be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Results unavailable</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n\n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Cannot reach remote server</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n        <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n      <br/>\n\n              { mapdisplay1 &&\n              <div id = \"route-display\">\n                <br/>\n                <br/>\n                  <div id = 'map' ></div>\n                    <br/>\n                </div>\n              }  \n            <br/>\n            <br/>\n            <br/>\n      {routeaxnobj.actions && \n         <div className = \"TableDisplay\">\n\n\n              {routeaxnobj.actions &&\n          \n          <DataTable rows={routeaxnobj.actions} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {routeaxnobj.actions && routeaxnobj.actions.map((row, index) => {\n\n                        var direction = 'arrow ' + (row.direction || '') + row.action;\n                return (\n\n                      <TableRow key={index} >\n                        <TableCell><span className={direction}></span> {row.instruction}</TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n            )\n                }\n          </DataTable>}\n\n        </div>}      \n            </>\n            );\n};\n\nexport default Mapf1;\n","/* eslint-disable */\n\nimport React, { useState} from 'react';\nimport { Button,TextInput, Form, Select, SelectItem, Loading, ToastNotification } from 'carbon-components-react';\n import {\n  DataTable,\n  Table,\n  TableHead,\n  TableRow,\n  TableHeader,\n  TableBody,\n  TableCell,\n  TableContainer\n} from 'carbon-components-react';\nimport H from \"@here/maps-api-for-javascript\";\nimport 'here-js-api/styles/mapsjs-ui.css';\nimport raw from 'raw.macro';\n\nfunction Mapf2(){\n\n  const [fromloc,setfromloc] = useState('');\n  const [toloc,settoloc] = useState('');\n  const [ferrstate, setferrstate] = useState(false);\n  const [ferrtext, setferrtext] = useState('A valid value is required');\n  const [terrstate, setterrstate] = useState(false);\n  const [terrtext, setterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [isLoading, setLoading] = useState(false);\n  const [err1status, seterr1status] = useState(false);\n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n  const [routeaxnobj, setrouteaxnobj] = useState({});\n  const [routesummary, setroutesummary] = useState('');\n \n  const modes = [\n  {\n    id: 'car',\n    value: 'Drive a Car',\n  },\n  {\n    id: 'pedestrian',\n    value: 'Let me Walk',\n  },\n  {\n    id: 'pubtransport',\n    value: 'Use Public Transport',\n  },\n];\n\n\n const [modequery, setmodequery] = useState(modes[0].id);\n const [mapdisplay,setmapdisplay] = useState('');\n \n const handleModeChange = (event) => {\n    setmodequery(event.target.value);\n  }\n\n    function toMMSS(duration) {\n        return Math.floor(duration / 60) + ' minutes ' + (duration % 60) + ' seconds.';\n    }\n\n  const handleSubmit = (e) => {\n        e.preventDefault();\n        setLoading(true);\n        setmapdisplay('Route')\n\n    if (fromloc && toloc) {\n   \n        const mapsv2 = async() => {\n\n        try{\n\n          let apikey,fresponse,fresult,from,tresponse,tresult,to;\n        \n          if(process.env.REACT_APP_mode === \"dev\"){\n            apikey = process.env.REACT_APP_APIKEY;\n            const authtoken = raw('./auth.txt');\n            let headers = {'Authorization' : authtoken}\n            fresponse = await fetch(`https://geocode.search.hereapi.com/v1/geocode?q=${fromloc}`,{ headers})\n            tresponse = await fetch(`https://geocode.search.hereapi.com/v1/geocode?q=${toloc}`,{ headers})\n          }\n\n          else{\n           let keyresponse = await fetch('/getapikey');\n           let keyresult = await keyresponse.json();\n           apikey = keyresult[\"apikey\"];\n           fresponse = await fetch(`/addrgeocode?queryst=${fromloc}`);\n           tresponse = await fetch(`/addrgeocode?queryst=${toloc}`);\n          }\n\n            fresult = await fresponse.json();\n            from = [fresult.items[0][\"position\"][\"lat\"].toString(),fresult.items[0][\"position\"][\"lng\"].toString()].toString();\n            tresult = await tresponse.json();\n            to = [tresult.items[0][\"position\"][\"lat\"].toString(), tresult.items[0][\"position\"][\"lng\"].toString()].toString();\n\n          \n           if(modequery === \"pubtransport\"){\n\n            function calculateRouteFromAtoB (platform) {\n              var router = platform.getPublicTransitService(),\n                  routeRequestParams = {\n                    origin: from,\n                    destination: to,\n                    return: 'polyline,actions,travelSummary'\n                  };\n\n              router.getRoutes(\n                routeRequestParams,\n                onSuccess,\n                onError\n              );\n            }\n\n            function onSuccess(result) {\n              var route = result.routes[0];\n              addRouteShapeToMap(route);\n              addManueversToMap(route);\n              addManueversToPanel(route);\n              addSummaryToPanel(route);\n            }\n\n            function onError(error) {\n              document.getElementById('map2').innerHTML = \"\";\n              setrouteaxnobj({});\n              seterr3status(true); \n            }\n\n            document.getElementById('map2').innerHTML = \"\";\n            setrouteaxnobj({});\n\n            var mapContainer = document.getElementById('map2');\n            var platform = new H.service.Platform({\n              apikey: apikey\n            });\n            var defaultLayers = platform.createDefaultLayers();\n\n            var map = new H.Map(mapContainer,\n              defaultLayers.vector.normal.map,{\n              center: {lat:52.5160, lng:13.3779},\n              zoom: 13,\n              pixelRatio: window.devicePixelRatio || 1\n            });\n\n            window.addEventListener('resize', () => map.getViewPort().resize());\n\n            var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n\n            var ui = H.ui.UI.createDefault(map, defaultLayers);\n\n            var bubble;\n\n            function openBubble(position, text){\n            if(!bubble){\n                bubble =  new H.ui.InfoBubble(\n                  position,\n                  {content: text});\n                ui.addBubble(bubble);\n              } else {\n                bubble.setPosition(position);\n                bubble.setContent(text);\n                bubble.open();\n              }\n            }\n\n            function addRouteShapeToMap(route){\n\n              try{\n              var group = new H.map.Group();\n              route.sections.forEach(function(section) {\n                group.addObject(\n                  new H.map.Polyline(\n                    H.geo.LineString.fromFlexiblePolyline(section.polyline), {\n                      style: {\n                        lineWidth: 4,\n                        strokeColor: 'rgba(0, 128, 255, 0.7)'\n                      }\n                    }\n                  )\n                );\n              });\n\n              map.addObject(group);\n              map.getViewModel().setLookAtData({\n                bounds: group.getBoundingBox()\n              });\n              }\n            catch(err){\n              document.getElementById('map2').innerHTML = \"\";\n              setrouteaxnobj({});\n              seterr2status(true); \n            }\n            }\n\n            function addManueversToMap(route){\n              try{\n              var svgMarkup = '<svg width=\"18\" height=\"18\" ' +\n                'xmlns=\"http://www.w3.org/2000/svg\">' +\n                '<circle cx=\"8\" cy=\"8\" r=\"8\" ' +\n                  'fill=\"#1b468d\" stroke=\"white\" stroke-width=\"1\"  />' +\n                '</svg>',\n                dotIcon = new H.map.Icon(svgMarkup, {anchor: {x:8, y:8}}),\n                group = new  H.map.Group(),\n                i;\n\n                route.sections.forEach((section) => {\n                  let poly = H.geo.LineString.fromFlexiblePolyline(section.polyline).getLatLngAltArray();\n                \n                  let actions = section.actions;\n                  if (actions) {\n                    for (i = 0;  i < actions.length; i += 1) {\n                      let action = actions[i];\n                      var marker =  new H.map.Marker({\n                        lat: poly[action.offset * 3],\n                        lng: poly[action.offset * 3 + 1]},\n                        {icon: dotIcon});\n                      marker.instruction = action.instruction;\n                      group.addObject(marker);\n                    }\n                  }\n                });\n\n                group.addEventListener('tap', function (evt) {\n                  map.setCenter(evt.target.getGeometry());\n                  openBubble(\n                    evt.target.getGeometry(), evt.target.instruction);\n                }, false);\n              \n                map.addObject(group);\n                }\n            catch(err){\n              //console.log(\"Error: Map info/Transit info unavailable\");\n              document.getElementById('map2').innerHTML = \"\";\n              setrouteaxnobj({});\n            }\n            }\n\n\n            function addSummaryToPanel(route) {\n\n                try{\n                    let distance = route.sections[0].travelSummary.length.toString();\n                    let duration = toMMSS(route.sections[0].travelSummary.duration).toString();\n                    let str = \"Route Distance and Duration: \" + distance + ' m,  ' + duration\n                    setroutesummary(str)\n                }\n                \n                catch(err){\n                  //console.log(err);\n                  document.getElementById('map2').innerHTML = \"\";\n                  setrouteaxnobj({});\n                }\n            }\n\n            function addManueversToPanel(route) {\n                try{\n                    setrouteaxnobj(route.sections[0]);\n                }\n\n                catch(err){\n                    document.getElementById('map2').innerHTML = \"\";\n                    setrouteaxnobj({});\n                    console.log(\"Results unavailable\");\n                    }\n            }\n\n            setTimeout(() => setLoading(false),5000);\n            calculateRouteFromAtoB (platform);\n            \n                      }\n           else{\n            function calculateRouteFromAtoB(platform) {\n              var router = platform.getRoutingService(null, 8),\n                  routeRequestParams = {\n                    routingMode: 'fast',\n                    transportMode: modequery,\n                    origin: from,\n                    destination: to,\n                    return: 'polyline,turnByTurnActions,actions,instructions,travelSummary'\n                  };\n\n              router.calculateRoute(\n                routeRequestParams,\n                onSuccess,\n                onError\n              );\n            }\n\n            function onSuccess(result) {\n              var route = result.routes[0];\n\n              addRouteShapeToMap(route);\n              addManueversToMap(route);\n              addManueversToPanel(route);\n              addSummaryToPanel(route);\n            //   addWaypointsToPanel(route);\n            }\n\n\n            function onError(error) {\n              document.getElementById('map2').innerHTML = \"\";\n              setrouteaxnobj({});\n              seterr3status(true); \n            }\n\n            document.getElementById('map2').innerHTML = \"\";\n            setrouteaxnobj({});\n\n            var mapContainer = document.getElementById('map2')\n\n            var platform = new H.service.Platform({\n              apikey: apikey\n            });\n\n            var defaultLayers = platform.createDefaultLayers();\n\n            var map = new H.Map(mapContainer,\n              defaultLayers.vector.normal.map, {\n              center: {lat: 52.5160, lng: 13.3779},\n              zoom: 13,\n              pixelRatio: window.devicePixelRatio || 1\n            });\n\n            window.addEventListener('resize', () => map.getViewPort().resize());\n\n              var behavior = new H.mapevents.Behavior(new H.mapevents.MapEvents(map));\n              \n              var ui = H.ui.UI.createDefault(map, defaultLayers);\n              \n              var bubble;\n\n            function openBubble(position, text) {\n              if (!bubble) {\n                bubble = new H.ui.InfoBubble(\n                  position,\n                  {content: text});\n                ui.addBubble(bubble);\n              } else {\n                bubble.setPosition(position);\n                bubble.setContent(text);\n                bubble.open();\n              }\n            }\n\n            function addRouteShapeToMap(route) {\n              try{\n              route.sections.forEach((section) => {\n                let linestring = H.geo.LineString.fromFlexiblePolyline(section.polyline);\n\n                let polyline = new H.map.Polyline(linestring, {\n                  style: {\n                    lineWidth: 4,\n                    strokeColor: 'rgba(0, 128, 255, 0.7)'\n                  }\n                });\n\n                map.addObject(polyline);\n                map.getViewModel().setLookAtData({\n                  bounds: polyline.getBoundingBox()\n                });\n              });\n              }\n              catch(err){\n                seterr2status(true);\n                document.getElementById('map2').innerHTML = \"\";\n                setrouteaxnobj({});\n              }\n            }\n\n\n            function addManueversToMap(route) {\n              var svgMarkup = '<svg width=\"18\" height=\"18\" ' +\n                'xmlns=\"http://www.w3.org/2000/svg\">' +\n                '<circle cx=\"8\" cy=\"8\" r=\"8\" ' +\n                  'fill=\"#1b468d\" stroke=\"white\" stroke-width=\"1\" />' +\n                '</svg>',\n                dotIcon = new H.map.Icon(svgMarkup, {anchor: {x:8, y:8}}),\n                group = new H.map.Group(),\n                i,\n                j;\n\n                try{\n              route.sections.forEach((section) => {\n                let poly = H.geo.LineString.fromFlexiblePolyline(section.polyline).getLatLngAltArray();\n\n                let actions = section.actions;\n                for (i = 0; i < actions.length; i += 1) {\n                  let action = actions[i];\n                  var marker = new H.map.Marker({\n                    lat: poly[action.offset * 3],\n                    lng: poly[action.offset * 3 + 1]},\n                    {icon: dotIcon});\n                  marker.instruction = action.instruction;\n                  group.addObject(marker);\n                }\n\n                group.addEventListener('tap', function (evt) {\n                  map.setCenter(evt.target.getGeometry());\n                  openBubble(evt.target.getGeometry(), evt.target.instruction);\n                }, false);\n\n                map.addObject(group);\n              });\n              }\n            catch(err){\n              //console.log(\"Error: Map info/Transit info unavailable\");\n              document.getElementById('map2').innerHTML = \"\";\n              setrouteaxnobj({});\n            }\n            }\n\n            function addSummaryToPanel(route) {\n\n                try{\n                    let distance = route.sections[0].travelSummary.length.toString();\n                    let duration = toMMSS(route.sections[0].travelSummary.duration).toString();\n                    let str = \"Route Distance and Duration: \" + distance + ' m,  ' + duration\n                    setroutesummary(str)\n                }\n                \n                catch(err){\n                  //console.log(err);\n                  document.getElementById('map2').innerHTML = \"\";\n                  setrouteaxnobj({});\n                }\n            }\n\n\n            function addManueversToPanel(route) {\n                try{\n                    setrouteaxnobj(route.sections[0]);\n                }\n\n                catch(err){\n                    document.getElementById('map2').innerHTML = \"\";\n                    setrouteaxnobj({});\n                    console.log(\"Results unavailable\");\n                    }\n            }\n\n            \n            setTimeout(() => setLoading(false),5000);\n            calculateRouteFromAtoB(platform);\n            }\n       \n          }\n          catch(error){\n              setLoading(false);\n              seterr2status(true);\n          }\n\n    }\n      setTimeout(mapsv2, 2000);\n      setfromloc('');\n      settoloc('');\n  }\n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\n    const validfLocf = (e) => {\n\n      if(!e.target.value.match(/^[a-zA-Z]+$/)){\n        setferrstate(true)\n        setferrtext(\"Only letters allowed. No special characters or numbers\");\n        setbuttonstate(true)\n        }\n      \n        else{\n          setferrstate(false)\n          setbuttonstate(false)\n        }        \n                                    \n      setfromloc(e.target.value)\n                \n                \n      }\n\n      const validtLocf= (e) => {\n               \n\n        if(!e.target.value.match(/^[a-zA-Z]+$/)){\n                          setterrstate(true)\n                          setterrtext(\"Only letters allowed. No special characters or numbers\");\n                          setbuttonstate(true)\n                      }\n       else{\n            setterrstate(false)\n            setbuttonstate(false)\n           }        \n          settoloc(e.target.value)\n                \n                \n            }\n  function err1closef() {\n    seterr1status(false);\n  }\n   function err2closef() {\n    seterr2status(false);\n  }\n  function err3closef() {\n    seterr3status(false);\n  }\n\n  const headers = [\n  {\n    key: 'routesummary',\n    header: routesummary,\n  }\n];\n            return(\n             <>\n        \n        <Form onSubmit={handleSubmit}>\n\n          <div className=\"TextArea\" >\n            <TextInput id={'fromloc'} labelText = {'From*'} invalid = {ferrstate} invalidText = {ferrtext} placeholder = {'From'} size = 'lg' value={fromloc} onChange={validfLocf} />\n          </div>\n          <div className=\"TextArea\" >\n            <TextInput id={'toloc'} labelText = {'To*'} invalid = {terrstate} invalidText = {terrtext} placeholder = {'To'} size = 'lg' value={toloc} onChange={validtLocf} />\n          </div>\n              <Select labelText=\"Mode of Transport*\" value={modequery} onChange={handleModeChange}>\n                    {modes.map((item, i) => (\n                    <SelectItem value={item.id} key={i} text = {item.value} />\n                    ))}\n              </Select>\n            \n             <div className=\"ButtonAreamap\">\n                <Button type=\"submit\" disabled = {buttonstate} > Get my Route </Button>\n             </div>\n\n        </Form>\n    \n  {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>From and To locations should not be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Results unavailable</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n\n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Cannot reach remote server</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n\n        <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n      <br/>\n\n            { mapdisplay &&\n              <div id = \"route-display2\">\n                <br/>\n                <br/>\n                <div id = 'map2' ></div>\n                <br/>\n              </div> }\n            <br/>\n            <br/>\n            <br/>\n      {routeaxnobj.actions && \n         <div className = \"TableDisplay\">\n\n\n              {routeaxnobj.actions &&\n          \n          <DataTable rows={routeaxnobj.actions} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {routeaxnobj.actions && routeaxnobj.actions.map((row, index) => {\n\n                        var direction = 'arrow ' + (row.direction || '') + row.action;\n                return (\n\n                      <TableRow key={index} >\n                        <TableCell><span className={direction}></span> {row.instruction}</TableCell>\n                      </TableRow>\n\n                );\n            })}\n                  </TableBody>\n                </Table>\n            )\n                }\n          </DataTable>}\n\n        </div>}\n\n            </>\n            );\n};\n\nexport default Mapf2;\n","import React from 'react'\nimport './App.css';\n\nimport { Tabs, Tab } from 'carbon-components-react';\nimport {Header,HeaderName} from \"carbon-components-react/lib/components/UIShell\";\n\nimport Geocode1 from './components/geocodef1';\nimport Geocode2 from './components/geocodef2';\nimport Transit1 from './components/transitf1';\nimport Transit2 from './components/transitf2';\nimport Mapf1 from './components/mapf1';\nimport Mapf2 from './components/mapf2';\n\nfunction App() {\n  \n  return (\n\n    <>\n    \n      <Header aria-label=\"IBM\">\n        <HeaderName prefix = \"\">\n          <div Style=\"white-space: nowrap;\">\n            HERE Public Transit Application\n            </div>\n          </HeaderName>\n        </Header> \n\n    <div className=\"App\">\n     <div className = \"AppContent\">\n    <br/>\n    <br/>\n    <br/>\n    <br/>\n     <h2>Location Details</h2>\n\n        <Tabs type='container'>\n          <Tab id=\"tab-g1\" label=\"Get Co-ordinates\">\n            <div className=\"TabArea\">\n            <Geocode1 />\n            </div>\n          </Tab>\n          <Tab id=\"tab-g2\" label=\"Get Area\">\n            <div className=\"TabArea\">\n            <Geocode2 />\n            </div>\n          </Tab>\n        </Tabs>\n     \n      \n       <h2>Public Transit Services</h2>\n\n         <Tabs type='container'>\n          <Tab id=\"tab-s1\" label=\"Transit Stations\">\n            <div className=\"TabArea\">\n            <Transit1 />\n            </div>\n          </Tab>\n          <Tab id=\"tab-s2\" label=\"Next Departures\">\n            <div className=\"TabArea\">\n            <Transit2 />\n            </div>\n          </Tab>\n        </Tabs>\n\n      <h2> Route Services </h2>\n\n         <Tabs type='container'>\n          <Tab id=\"tab-t1\" label=\"By Co-ordinates\">\n            <div className=\"TabArea\">\n            <Mapf1 />\n            </div>\n          </Tab>\n          <Tab id=\"tab-t2\" label=\"By Area\">\n            <div className=\"TabArea\">\n             <Mapf2 />\n             </div>\n          </Tab>\n        </Tabs>\n\n      <br/>\n\n    </div>\n    </div>\n\n    </>\n\n    \n  )\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nimport \"./index.scss\";\nimport \"./style.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}