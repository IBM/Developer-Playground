<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css">
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.16.0/umd/popper.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/4.5.2/js/bootstrap.min.js"></script>

<script>

function openGC(evt, api) {
  var i, tabcontent, tablinks;
  tabcontent = document.getElementsByClassName("tabcontent");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }
  tablinks = document.getElementsByClassName("tablinks");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }
  document.getElementById(api).style.display = "block";
  evt.currentTarget.className += " active";
}

function openSS(evt, api1) {
  var i, tabcontent, tablinks;
  tabcontent = document.getElementsByClassName("tabcontent1");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }
  tablinks = document.getElementsByClassName("tablinks1");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }
  document.getElementById(api1).style.display = "block";
  evt.currentTarget.className += " active";
}

function openW(evt, api) {
  var i, tabcontent, tablinks;
  tabcontent = document.getElementsByClassName("tabcontent2");
  for (i = 0; i < tabcontent.length; i++) {
    tabcontent[i].style.display = "none";
  }
  tablinks = document.getElementsByClassName("tablinks2");
  for (i = 0; i < tablinks.length; i++) {
    tablinks[i].className = tablinks[i].className.replace(" active", "");
  }
  document.getElementById(api).style.display = "block";
  evt.currentTarget.className += " active";
}


  async function getweeklyforecast() {

    let lat = document.getElementById("latitude").value;
    let long = document.getElementById("longitude").value;

    if ((lat === "") || (long === "")) {
    window.alert("Required data values are missing");
    }
    else {

    document.getElementById("overlay").style.display = "block";

    let response = await fetch('/getweeklyforecast?lat='+ lat + '&long=' + long);
    let result = await response.json();

    var table = document.getElementById("week-forecast-table");
    table.style.display = "";

    var tbodyRef = document.getElementById('week-forecast-table').getElementsByClassName('wtbody0')[0];
    tbodyRef.innerHTML = '';
    tbodyRef = document.getElementById('week-forecast-table').getElementsByClassName('wtbody0')[0];

    document.getElementById("astro-table").style.display = 'none';
    document.getElementById("alerts-table").style.display = 'none';

    document.getElementById("categorycha").style.display = 'none';
    document.getElementById("address-geocode").style.display = 'none';
    document.getElementById("stores").style.display = 'none';
    document.getElementById('closest-addr').style.display = 'none';


    document.getElementById("overlay").style.display = "none";

    if(JSON.stringify(result) === JSON.stringify({})){
      window.alert("Results not found");
      document.getElementById('week-forecast-table').style.display = 'none'
    }

    for (var key in result) {
      if (result.hasOwnProperty(key)){
        var val = result[key];

        var row = tbodyRef.insertRow();
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        var cell4 = row.insertCell(3);
        var cell5 = row.insertCell(4);

        cell1.innerHTML = val["Day"];
        cell2.innerHTML = val["Description"];
        cell3.innerHTML = val["MaxTemp"];
        cell4.innerHTML = val["MinTemp"];
        cell5.innerHTML = `<img src= "${val["icon"]}">`;

      }
      
    }
    }
}

  async function getweeklyforecastbyarea() {

  let area = document.getElementById("area02").value;

  if (area === "")  {
  window.alert("Required data value is missing");
  }
  else {

  document.getElementById("overlay").style.display = "block";

  area = area.replace(" ", "+");

  let response = await fetch('/addrgeocode?query=' + area);
  let result = await response.json();
  
  if(JSON.stringify(result) === JSON.stringify({})){
        window.alert("Results not found");
      }

    var val = result[0];

    var coords = val["position"];

    var lat = coords[0];
    var long = coords[1];

    response = await fetch('/getweeklyforecast?lat='+ lat + '&long=' + long);
    result = await response.json();

    var table = document.getElementById("week-forecast-table");
    table.style.display = "";

    var tbodyRef = document.getElementById('week-forecast-table').getElementsByClassName('wtbody0')[0];
    tbodyRef.innerHTML = '';
    tbodyRef = document.getElementById('week-forecast-table').getElementsByClassName('wtbody0')[0];

    document.getElementById("astro-table").style.display = 'none';
    document.getElementById("alerts-table").style.display = 'none';

    
    document.getElementById("categorycha").style.display = 'none';
    document.getElementById("address-geocode").style.display = 'none';
    document.getElementById("stores").style.display = 'none';
    document.getElementById('closest-addr').style.display = 'none';


    document.getElementById("overlay").style.display = "none";

    if(JSON.stringify(result) === JSON.stringify({})){
      window.alert("Results not found");
    }

    for (var key in result) {
      if (result.hasOwnProperty(key)){
        var val = result[key];

        var row = tbodyRef.insertRow();
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        var cell4 = row.insertCell(3);
        var cell5 = row.insertCell(4);

        cell1.innerHTML = val["Day"];
        cell2.innerHTML = val["Description"];
        cell3.innerHTML = val["MaxTemp"];
        cell4.innerHTML = val["MinTemp"];
        cell5.innerHTML = `<img src= "${val["icon"]}">`;

      }
    
    }
 
  }
}

  async function getalerts() {

    let city = document.getElementById("city").value;

    if (city === "") {
    window.alert("Required data value is missing");
    }
    else {

    document.getElementById("overlay").style.display = "block";

    let response = await fetch('/getalerts?city='+ city);
    let result = await response.json();

    var table1 = document.getElementById("alerts-table");
    table1.style.display = "";

    var tbody = document.getElementById('alerts-table').getElementsByClassName('wtbody1')[0];
    tbody.innerHTML = '';
    tbody = document.getElementById('alerts-table').getElementsByClassName('wtbody1')[0];

    document.getElementById("astro-table").style.display = 'none';
    document.getElementById('week-forecast-table').style.display = 'none'
    document.getElementById("categorycha").style.display = 'none';
    document.getElementById("address-geocode").style.display = 'none';
    document.getElementById("stores").style.display = 'none';
    document.getElementById('closest-addr').style.display = 'none';


    document.getElementById("overlay").style.display = "none";

    if(JSON.stringify(result) === JSON.stringify({})){
      window.alert("Results not found");
      document.getElementById("alerts-table").style.display = 'none';
    }

      var val = result;
      var row = tbody.insertRow();
      var cell1 = row.insertCell(0);
      var cell2 = row.insertCell(1);
      var cell3 = row.insertCell(2);
      var cell4 = row.insertCell(3);
      var cell5 = row.insertCell(4);

      cell1.innerHTML = val["country"];
      cell2.innerHTML = val["state"];
      cell3.innerHTML = val["latitude"];
      cell4.innerHTML = val["longitude"];
      cell5.innerHTML = val["alert"];  
    }
}

  async function getastroforecast() {

    let city = document.getElementById("city").value;

    if (city === "") {
      window.alert("Required data value is missing");
      }
    else {

    document.getElementById("overlay").style.display = "block";

    let response = await fetch('/getastroforecast?city='+ city);
    let result = await response.json();

    var table2 = document.getElementById("astro-table");
    table2.style.display = "";

    var tbody2 = document.getElementById('astro-table').getElementsByClassName('wtbody2')[0];
    tbody2.innerHTML = '';
    tbody2 = document.getElementById('astro-table').getElementsByClassName('wtbody2')[0];

    document.getElementById("alerts-table").style.display = 'none';
    document.getElementById('week-forecast-table').style.display = 'none'

    
    document.getElementById("categorycha").style.display = 'none';
    document.getElementById("address-geocode").style.display = 'none';
    document.getElementById("stores").style.display = 'none';
    document.getElementById('closest-addr').style.display = 'none';


    document.getElementById("overlay").style.display = "none";

    if(JSON.stringify(result) === JSON.stringify({})){
        window.alert("Results not found");
        document.getElementById("astro-table").style.display = 'none';
      }


    for (var key in result) {
        if (result.hasOwnProperty(key)){
          var val = result[key];

          var row = tbody2.insertRow();
          var cell1 = row.insertCell(0);
          var cell2 = row.insertCell(1);
          var cell3 = row.insertCell(2);
          var cell4 = row.insertCell(3);

          cell1.innerHTML = val["sunrise"];
          cell2.innerHTML = val["sunset"];
          cell3.innerHTML = val["moonrise"];
          cell4.innerHTML = val["moonset"];

        }
        
      } 
    }
}


  async function categorychain() {

    let lat = document.getElementById("latitude02").value;
    let long = document.getElementById("longitude02").value;
    let query = document.getElementById("query02").value;

    if ((lat === "") || (long === "") || (query === "")) {
      window.alert("Required data values are missing");
    }
    else{

    let location = lat.concat(",").concat(long);
    
    document.getElementById("overlay").style.display = "block";

    let response = await fetch('/categorychain?location='+ location + '&query=' + query);
    let result = await response.json();

    var table1 = document.getElementById("categorycha");
    table1.style.display = "";

    var tbodyRef1 = document.getElementById('categorycha').getElementsByClassName('tbody1')[0];
    tbodyRef1.innerHTML = '';
    tbodyRef1 = document.getElementById('categorycha').getElementsByClassName('tbody1')[0];


    document.getElementById("address-geocode").style.display = 'none';
    document.getElementById("stores").style.display = 'none';
    document.getElementById('closest-addr').style.display = 'none';

    document.getElementById("alerts-table").style.display = 'none';
  document.getElementById('week-forecast-table').style.display = 'none'
  document.getElementById("astro-table").style.display = 'none';
    
    document.getElementById("overlay").style.display = "none";

    if(JSON.stringify(result) === JSON.stringify({})){
        window.alert("Results not found");
        document.getElementById("categorycha").style.display = 'none';
      }

    for (var key in result) {
      if (result.hasOwnProperty(key)){
        var val = result[key];

        console.log("val  : ",val)
        var row = tbodyRef1.insertRow();
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        var cell4 = row.insertCell(3);

        cell1.innerHTML = val["title"];
        cell2.innerHTML = val["address"];
        cell3.innerHTML = val["position"];
        cell4.innerHTML = val["distance"];

      }

    }
  }

}


  async function addrgeocode() {

  let query = document.getElementById("gquery").value;

  if (query === "") {
      window.alert("Required data values are missing");
    }
  else{

  query = query.replace(" ","+"); 
  document.getElementById("overlay").style.display = "block";

  let response = await fetch('/addrgeocode?query=' + query);
  let result = await response.json();

  var table4 = document.getElementById("address-geocode");
  table4.style.display = "";

  var tbodyRef4 = document.getElementById('address-geocode').getElementsByClassName('tbody4')[0];
  tbodyRef4.innerHTML = '';
  tbodyRef4 = document.getElementById('address-geocode').getElementsByClassName('tbody4')[0];


    document.getElementById("categorycha").style.display = 'none';
    document.getElementById("stores").style.display = 'none';
    document.getElementById('closest-addr').style.display = 'none';

    document.getElementById("alerts-table").style.display = 'none';
    document.getElementById('week-forecast-table').style.display = 'none'
    document.getElementById("astro-table").style.display = 'none';

    document.getElementById("overlay").style.display = "none";

    if(JSON.stringify(result) === JSON.stringify({})){
        window.alert("Results not found");
        document.getElementById("address-geocode").style.display = 'none';

      }


  for (var key in result) {
    if (result.hasOwnProperty(key)){
      var val = result[key];

    var row = tbodyRef4.insertRow();
    var cell1 = row.insertCell(0);
    var cell2 = row.insertCell(1);
    var cell3 = row.insertCell(2);

    cell1.innerHTML = val["title"];
    cell2.innerHTML = val["address"];
    cell3.innerHTML = val["position"];

    }

  }
 }
}

  async function liststores() {

    let query = document.getElementById("area01").value;
    let storequery = document.getElementById("query01").value;

    if ((query === "") || (storequery === "")) {
      window.alert("Required data values are missing");
    }
    else{

    query = storequery.concat(" ").concat(query)
    query = query.replace(" ","+"); 

    document.getElementById("overlay").style.display = "block";
    
    let response = await fetch('/liststores?query=' + query);
    let result = await response.json();

    var table5 = document.getElementById("stores");
    table5.style.display = "";

    var tbodyRef5 = document.getElementById('stores').getElementsByClassName('tbody5')[0];
    tbodyRef5.innerHTML = '';
    tbodyRef5 = document.getElementById('stores').getElementsByClassName('tbody5')[0];

    
    document.getElementById("categorycha").style.display = 'none';
    document.getElementById("address-geocode").style.display = 'none';
    document.getElementById('closest-addr').style.display = 'none';

  document.getElementById("alerts-table").style.display = 'none';
  document.getElementById('week-forecast-table').style.display = 'none'
  document.getElementById("astro-table").style.display = 'none';

    document.getElementById("overlay").style.display = "none";

    if(JSON.stringify(result) === JSON.stringify({})){
        window.alert("Results not found");
        document.getElementById("stores").style.display = 'none';
      }


    for (var key in result) {
      if (result.hasOwnProperty(key)){
        var val = result[key];

      var row = tbodyRef5.insertRow();
      var cell1 = row.insertCell(0);
      var cell2 = row.insertCell(1);
      var cell3 = row.insertCell(2);
    

      cell1.innerHTML = val["title"];
      cell2.innerHTML = val["address"];
      cell3.innerHTML = val["position"];
      

      }

    }
  }
}

  async function revaddrgeocode() {

    let lat = document.getElementById("latitude0").value;
    let long = document.getElementById("longitude0").value;


    if ((lat === "") || (long === "")) {
      window.alert("Required data values are missing");
    }
    else{

    let location = lat.concat(",").concat(long);

    document.getElementById("overlay").style.display = "block";

    let response = await fetch('/revaddrgeocode?location='+ location);
    let result = await response.json();

    var table6 = document.getElementById("closest-addr");
    table6.style.display = "";

    var tbodyRef6 = document.getElementById('closest-addr').getElementsByClassName('tbody6')[0];
    tbodyRef6.innerHTML = '';
    tbodyRef6 = document.getElementById('closest-addr').getElementsByClassName('tbody6')[0];

    
    document.getElementById("categorycha").style.display = 'none';
    document.getElementById("address-geocode").style.display = 'none';
    document.getElementById("stores").style.display = 'none';

    document.getElementById("alerts-table").style.display = 'none';
    document.getElementById('week-forecast-table').style.display = 'none'
    document.getElementById("astro-table").style.display = 'none';

    document.getElementById("overlay").style.display = "none";

    if(JSON.stringify(result) === JSON.stringify({})){
        window.alert("Results not found");
        document.getElementById('closest-addr').style.display = 'none';
      }

        var val = result;
        var row = tbodyRef6.insertRow();
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);

        cell1.innerHTML = val["address"];
        cell2.innerHTML = val["position"];
        cell3.innerHTML = val["distance"];

}

}



</script>

<div id="overlay" style="display: none">
  <div class="loading" id="loading"></div>
</div>



<div id="here-weather-geocoding">

   <!-- Geocoding -->
    <span style="color: rgb(21, 21, 21);"> Location Details </span><hr style="border-top: 1px solid rgb(21, 21, 21);"><br>

    <div class="tab">
      <button class="tablinks" onclick="openGC(event, 'GCArea')"> Area &rarr; Coordinates </button>
      <button class="tablinks" onclick="openGC(event, 'RGCArea')">Coordinates &rarr; Area</button>
    </div>

    <div id="GCArea" class="tabcontent">
      <input type="text" name="gquery" id="gquery" class="field-divided" placeholder="Query: Address/Area/Pincode" size=10 required /> 
      <button type = "submit" onclick="addrgeocode()">Get Area coordinates </button> 

    </div>


    <div id="RGCArea" class="tabcontent">
      <input type="text" name="latitude0" id="latitude0" class="field-divided" placeholder="Latitude" size=10 required /> 
      <input type="text" name="longitude0" id="longitude0" class="field-divided" placeholder="Longitude" size=10 required /> <br><br>
      <button type = "submit" onclick="revaddrgeocode()">Get Closest Address </button> 
      </div>

    <br><br>
    <table class = "table table-striped" id = "address-geocode" style="width:50%;display:none;">
      <thead>
                <th>Name</th>
                <th>Address</th>
                <th>Location</th>
                
      </thead>

      <tbody class="tbody4">

      </tbody>
                        
    </table>

    <table class = "table table-striped" id = "closest-addr" style="width:50%;display:none;">
      <thead>
                <th>Address</th>
                <th>Position</th>
                <th>Distance</th>
                
      </thead>

      <tbody class="tbody6">

      </tbody>
                        
    </table>

    <br>
    <br>

  <!-- Search -->

    <span style="color: rgb(21, 21, 21);"> Search Services </span><hr style="border-top: 1px solid rgb(21, 21, 21);"><br>

    <div class="tab1">

      <button class="tablinks1" onclick="openSS(event, 'SPCat')">Search by Area</button>
      <button class="tablinks1" onclick="openSS(event, 'SPChain')">Search by Coordinates</button>

      
    </div>

    <div id="SPChain" class="tabcontent1">
      <input type="text" name="latitude02" id="latitude02" class="field-divided" placeholder="Latitude" size=10 required />
      <input type="text" name="longitude02" id="longitude02" class="field-divided" placeholder="Longitude" size=10 required /> <br><br>
      <input type="text" name="query02" id="query02" class="field-divided" placeholder="Query: Venue/Chain" size=10 required /> <br><br>
      <button type = "submit" onclick="categorychain()"> Get All Places Near You </button> 
    </div>

    <div id="SPCat" class="tabcontent1">
      <input type="text" name="area01" id="area01" class="field-divided" placeholder="Area: Name/Pincode" size=10 required />
      <input type="text" name="query01" id="query01" class="field-divided" placeholder="Query: Venue/Chain" size=10 required /> <br><br>
      
      <button type = "submit" onclick="liststores()"> Get All Places Near You </button> 
    </div>

    <table class = "table table-striped" id = "categorycha" style="width:50%;display:none;">
      <thead>
                <th>Name</th>
                <th>Address</th>
                <th>Location</th>
                <th>Distance (m)</th>
      </thead>

      <tbody class="tbody1">

      </tbody>
                        
    </table>

    <table class = "table table-striped" id = "stores" style="width:50%;display:none;">
      <thead>
                <th>Name</th>
                <th>Address</th>
                <th>Location</th>
      </thead>

      <tbody class="tbody5">

      </tbody>
                        
    </table>

    <br><br>
    <br>

      <!--Destination Weather-->
      <span style="color: rgb(21, 21, 21);"> Weather Services </span><hr style="border-top: 1px solid rgb(21, 21, 21);"><br>

      <div class="tab2">

        <button class="tablinks2" onclick="openW(event, 'WFArea')">Weekly Forecast by Area</button>
        <button class="tablinks2" onclick="openW(event, 'WFCoord')">Weekly Forecast by Coordinates</button>
      </div>

      <div id="WFCoord" class="tabcontent2">
        <input type="text" name="latitude" id="latitude" class="field-divided" placeholder="Latitude" size=10 required />
        <input type="text" name="longitude" id="longitude" class="field-divided" placeholder="Longitude" size=10 required /> <br><br>
        <button type = "submit" onclick="getweeklyforecast()">Get Weekly Forecast </button> 
      </div>

      <div id="WFArea" class="tabcontent2">
        <input type="text" name="area02" id="area02" class="field-divided" placeholder="Area" size=10 required />
        <button type = "submit" onclick="getweeklyforecastbyarea()">Get Weekly Forecast </button> 
      </div>

        <br><br>
    
        <input type="text" name="city" id="city" class="field-divided" placeholder="City" size=10 required /><br><br>
        <button type = "submit" onclick="getalerts()">Get Extreme Weather Warnings </button> 
        <button type = "submit" onclick="getastroforecast()">Get Astronomy Forecast </button> 
    
      <br><br>
        <br>


    <table class = "table table-striped" id = "week-forecast-table" style="width:50%;display:none;">
      <thead>
                <th>Day</th>
                <th>Description</th>
                <th>Max Temperature</th>
                <th>Min Temperature</th>
      </thead>
  
      <tbody class="wtbody0">
  
      </tbody>
                        
    </table>
  
    <table class = "table table-striped" id = "alerts-table" style="width:50%;display:none;">
      <thead>
                <th>Country</th>
                <th>State</th>
                <th>Latitude</th>
                <th>Longitude</th>
                <th>Alert</th>
      </thead>
  
      <tbody class= "wtbody1">
  
      </tbody>
                        
    </table>
  
    <table class = "table table-striped" id = "astro-table" style="width:50%;display:none;">
      <thead>
                <th>Sun Rise</th>
                <th>Sun Set</th>
                <th>Moon Rise</th>
                <th>Moon Set</th>
      </thead>
  
      <tbody class= "wtbody2">
  
      </tbody>
                        
    </table>
  
</div>
