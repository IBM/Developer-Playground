{"version":3,"sources":["NavCarbon.js","Form.js","cloudLogo.png","FormTrail.js","NewForm.js","App.js","reportWebVitals.js","index.js"],"names":["NavCarbon","props","state","opened","HeaderContainer","render","isSideNavExpanded","onClickSideNavExpand","Header","aria-label","SkipToContent","HeaderMenuButton","onClick","isActive","HeaderName","href","prefix","HeaderNavigation","HeaderMenuItem","isCurrentPage","setState","SideNav","expanded","isPersistent","SideNavItems","HeaderSideNavItems","Modal","open","this","onRequestClose","size","modalLabel","passiveModal","Component","initialUserState","dependents_no","dependentsError","education","self_emp","credit_history","propertyArea","gendernew","marriage_status","applicant_income","coapplicant_income","applicantIncomeError","coapplicant_income_error","loan_amount","loanAmountError","loan_amount_term","loanTermError","isSubmitted","LoanResponse","age","invalidAge","ageError","experience","invalidExperience","experienceError","income","invalidIncome","incomeError","Zipcode","invalidZipcode","ZipcodeError","familySize","invalidFamilySize","familyError","Ccavg","invalidCcavg","CcavgError","mortgage","invalidMortgage","mortgageError","personal_loan","security_account","CdAccount","online","credit_card","NewForm","changeHandler","e","target","name","value","validate","numbers","match","console","log","submitHandler","preventDefault","data","axios","post","window","location","origin","then","response","catch","err","onChangeSecurityAccount","bind","onChangeEducation","onChangeOnline","onChangeCdAccount","onChangeCreditCard","event","kind","caption","style","top","right","position","marginTop","className","Grid","Row","Column","Loading","description","withOverlay","width","height","class","src","cloudLogo","color","textAlign","onSubmit","sm","md","lg","float","marginLeft","TextInput","id","invalidText","labelText","placeholder","onChange","invalid","inline","FormGroup","legendText","RadioButtonGroup","labelPosition","orientation","RadioButton","Tooltip","direction","tabIndex","marginBottom","Button","type","role","fontSize","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.ec27735e.chunk.js","sourcesContent":["import { HeaderContainer, Modal } from 'carbon-components-react';\nimport {Header} from 'carbon-components-react';\nimport { SkipToContent} from 'carbon-components-react';\nimport {HeaderMenuButton} from 'carbon-components-react';\nimport {HeaderName,HeaderMenuItem,DataTable,TableContainer,Table,TableHead,TableHeader,TableRow,TableBody,TableCell,HeaderMenu,HeaderSideNavItems,SideNav,HeaderNavigation,SideNavItems} from 'carbon-components-react';\nimport React from 'react';\nimport { Component } from 'react';\n\n\nclass NavCarbon extends Component {\n  constructor(props){\n      super(props)\n      this.state={\n        opened:false\n      }\n  }\n  render(){\n    const headerData={\n      'key':'header',\n      'value':'sample'\n    }\n    const rowData={\n      'header':'sample'\n    }\n\n    return(\n      <div>\n      <HeaderContainer\n        render={({ isSideNavExpanded, onClickSideNavExpand }) => (\n        <Header aria-label=\"IBM Platform Name\">\n        <SkipToContent />\n        <HeaderMenuButton\n          aria-label=\"Open menu\"\n          onClick={onClickSideNavExpand}\n          isActive={isSideNavExpanded}\n        />\n        <HeaderName href=\"#\" prefix=\"IBM\">\n          [Platform]\n        </HeaderName>\n        <HeaderNavigation aria-label=\"IBM [Platform]\">\n          <HeaderMenuItem isCurrentPage onClick={()=>this.setState({opened:true})}>\n            About DataSet\n          </HeaderMenuItem>\n          \n          \n        </HeaderNavigation>\n        <SideNav\n          aria-label=\"Side navigation\"\n          expanded={isSideNavExpanded}\n          isPersistent={false}>\n          <SideNavItems>\n            <HeaderSideNavItems>\n              <HeaderMenuItem onClick={()=>this.setState({opened:true})}>About DataSet</HeaderMenuItem>\n              \n            </HeaderSideNavItems>\n          </SideNavItems>\n        </SideNav>\n      </Header>\n      \n    )}\n    \n  />\n  <Modal\n    open={this.state.opened}\n    onRequestClose={()=>this.setState({opened:false})}\n    size=\"md\"\n    modalLabel=\"About the API\"\n    passiveModal\n  >\n    <h1>This is the data set</h1>\n    \n  </Modal>\n    </div>\n    )\n  }\n}\n  \n    \n \n   \n   \n\n       \n\nexport default NavCarbon;","import React, { Component } from 'react';\n\n\nimport {TextInput,Button,Loading,Dropdown,InlineNotification,NotificationActionButton, RadioButtonGroup,RadioButton, FormGroup, Tooltip,Link} from 'carbon-components-react';\nimport axios from 'axios';\nimport './formTrail.scss';\n\n\n//import { action } from '@storybook/addon-actions';\nconst initialUserState={\n  \n  dependents_no:'',\n  dependentsError:'',\n  education:'',\n  self_emp:'',\n  credit_history:'',\n  propertyArea:'',\n  gendernew:'',\n  marriage_status:'',\n  applicant_income:'',\n  coapplicant_income:'',\n  applicantIncomeError:'',\n  coapplicant_income_error:'',\n  loan_amount:'',\n  loanAmountError:'',\n  loan_amount_term:'',\n  loanTermError:'',\n  isSubmitted:'no',\n  LoanResponse:''\n  \n}\n\nconst items=[\n  {\n    label:'urban',\n    value:'urban'\n  },\n  {\n    label:'semi-urban',\n    value:'semi-urban'\n  },\n  {\n    label:'rural',\n    value:'rural'\n  },\n  \n]\n\nclass  Form extends Component{\n  constructor(props){\n    super(props)\n    this.state=initialUserState;\n    this.handleChange = this.handleChange.bind(this);\n    this.handled=this.handled.bind(this);\n    this.onChangeGender=this.onChangeGender.bind(this);\n    this.onChangeMarriage=this.onChangeMarriage.bind(this);\n    this.onChangeSelfEmp=this.onChangeSelfEmp.bind(this);\n    this.onChangeEducation=this.onChangeEducation.bind(this);\n    this.onChangePropertyArea=this.onChangePropertyArea.bind(this);\n    this.submitHandler=this.submitHandler.bind(this);\n  }\n  \n  onChangeEducation(edu){\n    this.state.education=edu.target.value\n  }\n  onChangeSelfEmp(emp){\n    this.state.self_emp=emp.target.value\n  }\n  onChangeGender(event) {\n    \n   this.state.gendernew=event.target.value\n   console.log(this.state.gendernew)\n    \n  }\n  onChangeMarriage(e) {\n    \n    this.state.marriage_status=e.target.value\n    console.log(this.state.marriage_status)\n     \n   }\n   onChangePropertyArea(property) {\n    \n    this.state.propertyArea=property.target.value\n    console.log(this.state.propertyArea)\n     \n   }\n  \n  handleChange = (selectedLoanType) => {\n    console.log(selectedLoanType);\n    this.setState({ loanType: selectedLoanType.selectedItem.value });\n    \n\n    console.log(this.state.loanType)\n    \n  }\n  \n  handled=(e)=>{\n    console.log('new ')\n    this.setState({ gendernew: e.target.value });\n  }\n\n  changeHandler=(e)=>{\n    this.setState({\n      [e.target.name]:e.target.value\n    })\n  }\n\n  validate=()=>{\n    \n    let dependentsError=''\n   \n    let loanAmountError=''\n    let loanTermError=''\n    let applicantIncomeError=''\n    let  coapplicant_income_error=''\n    \n    var numbers = /^[0-9]+$/;\n    let isSubmitted='no'\n   \n    \n \n  if(!this.state.dependents_no){\n    dependentsError='Please enter number of dependents'\n  }\n  else{\n    if(!this.state.dependents_no.match(numbers)){\n      dependentsError='Number of dependents should be a number'\n    }\n  }\n  if(!this.state.loan_amount){\n    loanAmountError='Please enter loan amount'\n  }\n  else{\n    if(!this.state.loan_amount.match(numbers)){\n      loanAmountError='loan amount should be in numbers'\n    }\n  }\n\n  if(!this.state.applicant_income){\n    applicantIncomeError='Applicant income cannot be blank'\n  }\n  else{\n    if(!this.state.applicant_income.match(numbers)){\n      applicantIncomeError='Applicant income should be a number'\n    }\n  }\n  if(!this.state.coapplicant_income){\n    coapplicant_income_error='Co-Applicant income cannot be blank'\n  }\n  else{\n    if(!this.state.coapplicant_income.match(numbers)){\n      coapplicant_income_error='Co-applicant income should be a number'\n    }\n  }\n  if(!this.state.loan_amount_term){\n    loanTermError='Please enter loan term'\n  }\n  else{\n    if(!this.state.loan_amount_term.match(numbers)){\n      loanTermError='loan term should be in numbers'\n    }\n  }\n  if( dependentsError || loanAmountError || loanTermError || applicantIncomeError || coapplicant_income_error){\n  this.setState({\n        dependentsError,loanAmountError,loanTermError,applicantIncomeError,coapplicant_income_error\n      })\n      return false\n    }else{\n      isSubmitted='yes'\n      dependentsError=''\n      loanAmountError=''\n      loanTermError=''\n      coapplicant_income_error=''\n      applicantIncomeError=''\n\n\n      this.setState({\n        isSubmitted,dependentsError,loanAmountError,applicantIncomeError,coapplicant_income_error,loanTermError\n      })\n       return true;\n    }\n   \n  } \n  submitHandler=(e)=>{\n    e.preventDefault()//to prevent page refresh\n    \n   const isValid=this.validate();\n  if(isValid){\n    \n    console.log(this.state);\n   // clear form\n   \n  // this.setState(initialUserState)\n  \n\n    const data={\n      \n  \n     \n      dependents_no:this.state.dependents_no,\n      education:this.state.education,\n      self_emp:this.state.self_emp,\n      \n      gendernew:this.state.gendernew,\n      marriage_status:this.state.marriage_status,\n      loan_amount:this.state.loan_amount,\n      isSubmitted:this.state.isSubmitted,\n      loan_amount_term:this.state.loan_amount_term,\n      applicant_income:this.state.applicant_income,\n      coapplicant_income:this.state.coapplicant_income,\n      credit_history:this.state.credit_history,\n      propertyArea:this.state.propertyArea,\n      loanStatus:'none'\n    }\n    \n    console.log(this.state.isSubmitted)\n    console.log(data)\n    \n    axios.post(`${window.location.origin}/submit`, \n     data )\n    .then( (response)=> {\n      \n      \n      \n      this.setState({\n        LoanResponse:response.data\n      })\n     console.log(\"Response is \",this.state.LoanResponse)\n    }).catch(\n      err=>{\n        console.log('error',err)\n      }\n    )\n    \n    }\n  }\n\n  render(){\n    const {credit_history,dependents_no,loan_amount,applicant_income,coapplicant_income,loan_amount_term}=this.state\n    \n    \n    \n    \n    return (\n      \n      \n      <div style={{marginBottom:10,marginTop:100}} >\n\n  {\n    (this.state.isSubmitted == 'yes' && this.state.LoanResponse=='')?\n    \n    (\n      <div>\n        <center style={{marginTop:'15rem'}}>\n        <Loading\n      description=\"Active loading indicator\" withOverlay={false}\n    />\n    \n          </center>\n       \n\n      <div  style={{width:'80%',height:'10rem',marginLeft:'3.5rem',marginRight:'3rem',marginTop:'4rem'}}> \n      <h4 class=\"alert-heading\" >Wooah! Your form has been submitted &#128516;</h4>\n      <p>Now based on the deployed watson machine learning model in cloudPak for data, predictions for the given input data will be displayed.\n      </p>\n      <hr></hr>\n      <p class=\"mb-0\">Kindly wait for the response.</p>\n    </div>\n      </div>\n    )\n    :\n    ''\n  }\n    {\n(this.state.isSubmitted=='no')?\n\n   (\n     <div>\n        \n       <div>\n       <h3  style={{textAlign:'left',marginLeft:'1rem'}}>Enter your details to request for loan</h3>\n       <hr class=\"new4\">\n\n       </hr>\n       </div>\n      <br/>\n      <div style={{textAlign:'left',marginLeft:'1rem',width:'100%'}}>\n    <InlineNotification\n      kind=\"info\"\n      //actions={<NotificationActionButton lowContrast>Action</NotificationActionButton>}\n      iconDescription=\"describes the close button\"\n      subtitle={<span> We use this information to process your eligibility for taking loan.Kindly provide correct details. </span>}\n      title=\"Note:\"\n    />\n  </div>\n  <form onSubmit={this.submitHandler} style={{marginLeft:'1rem'}}>   \n    <h5 style={{textAlign:'left',marginLeft:'0.5rem',marginBottom:'2rem',marginTop:'1.5rem'}}>1. Personnal information</h5>\n       \n      <div className='box1'>\n        <FormGroup legendText=\"Education\" onChange={this.onChangeEducation} value={this.state.education} style={{textAlign:'left'}}>\n        <RadioButtonGroup\n    //defaultSelected=\"No\"\n    //legend=\"Group Legend\"\n    //name=\"radio-button-group\"\n    //valueSelected=\"No\"\n   labelPosition='right' orientation='horizontal'>\n     <RadioButton\n      id=\"radio-7\"\n      labelText=\"Graduate\"\n      value=\"graduate\"\n      name='education'\n    />\n    <RadioButton\n      id=\"radio-8\"\n      labelText=\"Under Graduate\"\n      value=\"under graduate\"\n      name='education'\n      \n    />\n  </RadioButtonGroup>\n  </FormGroup>\n  \n      </div>\n\n  \n<div className='box1'>\n<FormGroup legendText=\"Self Employed\" onChange={this.onChangeSelfEmp} value={this.state.self_emp} style={{textAlign:'left'}}>\n    \n  \n  <RadioButtonGroup\n    //defaultSelected=\"No\"\n    //legend=\"Group Legend\"\n    //name=\"radio-button-group\"\n    //valueSelected=\"No\"\n   labelPosition='right' orientation='horizontal'\n   \n   >\n    \n    <RadioButton\n      id=\"radio-5\"\n      labelText=\"No\"\n      value=\"No\"\n      name='selfEmp'\n    />\n    <RadioButton\n      id=\"radio-6\"\n      labelText=\"Yes\"\n      value=\"Yes\"\n      name='selfEmp'\n      \n    />\n</RadioButtonGroup>\n     \n   \n  </FormGroup>\n  </div>\n   <div className='box1'>\n     <FormGroup legendText=\"Gender\" onChange={this.onChangeGender} value={this.state.gendernew} style={{textAlign:'left'}}>\n    \n  \n    <RadioButtonGroup\n      //defaultSelected=\"female\"\n      //legend=\"Group Legend\"\n      //name=\"radio-button-group\"\n      //valueSelected=\"female\"\n     labelPosition='right' orientation='horizontal'\n     \n     >\n      \n      <RadioButton\n        id=\"radio-1\"\n        labelText=\"male\"\n        value=\"male\"\n        name='gender'\n      />\n      <RadioButton\n        id=\"radio-2\"\n        labelText=\"female\"\n        value=\"female\"\n        name='gender'\n        \n      />\n  </RadioButtonGroup>\n       \n     \n    </FormGroup>\n     </div> \n       <div className='box1'>\n\n          <FormGroup legendText=\"Married\" onChange={this.onChangeMarriage} value={this.state.marriage_status} style={{textAlign:'left'}}>\n    \n  \n    <RadioButtonGroup\n      //defaultSelected=\"No\"\n      legend=\"Group Legend\"\n      name=\"radio-button-group\"\n      valueSelected='No'\n     labelPosition='right' orientation='horizontal'\n     \n     >\n      \n      <RadioButton\n        id=\"radio-3\"\n        labelText=\"No\"\n        value=\"no\"\n        name='marriage'\n      />\n      <RadioButton\n        id=\"radio-4\"\n        labelText=\"Yes\"\n        value=\"yes\"\n        name='marriage'\n        \n      />\n  </RadioButtonGroup>\n       \n     \n    </FormGroup>\n    </div>\n    <div style={{float: 'left',\n  width: '100%'}}>\n        <FormGroup legendText=\"Property Area\" onChange={this.onChangePropertyArea} value={this.state.propertyArea} style={{textAlign:'left',marginLeft:'1.6rem'}}>\n        <RadioButtonGroup\n    //defaultSelected=\"No\"\n    //legend=\"Group Legend\"\n    //name=\"radio-button-group\"\n    //valueSelected=\"No\"\n   labelPosition='right' orientation='horizontal'>\n     <RadioButton\n      id=\"radio-13\"\n      labelText=\"urban\"\n      value=\"urban\"\n      name='property area'\n    />\n    <RadioButton\n      id=\"radio-14\"\n      labelText=\"rural\"\n      value=\"rural\"\n      name='property area'\n      \n    /><RadioButton\n    id=\"radio-15\"\n    labelText=\"semi-urban\"\n    value=\"semi-urban\"\n    name='property area'\n  />\n  </RadioButtonGroup>\n  </FormGroup>\n  </div>  \n      \n     <div className=\"box\">\n       {\n         (this.state.dependentsError)?\n    (\n      <TextInput\n            //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n            id=\"test2\"\n            invalidText={this.state.dependentsError}\n            labelText=\"Number of dependents\"\n            placeholder=\"Number of dependents\"\n            name=\"dependents_no\"\n            value={dependents_no}\n            onChange={this.changeHandler}\n          invalid/>  \n    ):\n\n    (\n\n       <TextInput\n        //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n        id=\"test2\"\n        //invalidText=\"Invalid error message.\"\n        labelText=\"Number of dependents\"\n        placeholder=\"Number of dependents\"\n        name=\"dependents_no\"\n        value={dependents_no}\n        onChange={this.changeHandler}\n      />   \n    )\n       }\n      \n      </div>\n      <div className=\"box\">\n      <TextInput\n        //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n        id=\"test2\"\n        //invalidText=\"Invalid error message.\"\n        labelText=\"Credit history\"\n        placeholder=\"Credit history\"\n        name=\"credit_history\"\n        value={credit_history}\n        onChange={this.changeHandler}\n      />   \n      </div>\n     \n      \n      \n      {/* <h5 style={{textAlign:'left',marginLeft:'1rem',marginTop:'1rem', float:'left',width:'100%'}}>2. Additional information</h5> */}\n  \n    <h5 style={{textAlign:'left',marginLeft:'0.5rem',marginBottom:'2rem',marginTop:'2rem', float:'left',width:'100%'}}>2.Loan Information\n    <Tooltip\n      direction=\"right\"\n      tabIndex={0}\n      //triggerText=\"Tooltip label\"\n    >\n      <p>\n      We use this information to process your eligibility for taking loan.Kindly provide correct details.</p>\n      \n    </Tooltip>\n    </h5>\n   <div className=\"box\" >\n     {\n       (this.state.applicantIncomeError)?\n       (\n        <TextInput\n            //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n            id=\"test2\"\n            invalidText={this.state.applicantIncomeError}\n            labelText=\"Applicant income\"\n            placeholder=\"Applicant Income in rupees\"\n            name=\"applicant_income\"\n            value={applicant_income}\n            onChange={this.changeHandler}\n          invalid/>\n       ):\n       (\n        <TextInput\n        //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n        id=\"test2\"\n        //invalidText={this.state.applicantIncomeError}\n        labelText=\"Applicant income\"\n        placeholder=\"Applicant Income in rupees\"\n        name=\"applicant_income\"\n        value={applicant_income}\n        onChange={this.changeHandler}\n      />\n       )\n     }\n   \n   </div>\n   <div className=\"box\" >\n     {\n       (this.state.coapplicant_income_error)?\n       (\n        <TextInput\n            //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n            id=\"test2\"\n            invalidText={this.state.coapplicant_income_error}\n            labelText=\"Co-Applicant income\"\n            placeholder=\"Co-Applicant Income in rupees\"\n            name=\"coapplicant_income\"\n            value={coapplicant_income}\n            onChange={this.changeHandler}\n          invalid/>\n       ):\n       (\n<TextInput\n        //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n        id=\"test2\"\n        //invalidText={this.state.coapplicant_income_error}\n        labelText=\"Co-Applicant income\"\n        placeholder=\"Co-Applicant income in rupees\"\n        name=\"coapplicant_income\"\n        value={coapplicant_income}\n        onChange={this.changeHandler}\n      />\n       )\n     }\n   \n   </div>\n    \n      <div className='box' >\n        {\n          (this.state.loanAmountError)?\n          (\n<TextInput\n            //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n            id=\"test2\"\n            invalidText={this.state.loanAmountError}\n            labelText=\"Loan Amount\"\n            name=\"loan_amount\"\n            placeholder=\"loan amount in rupees\"\n            value={loan_amount}\n            onChange={this.changeHandler}\n          invalid/>\n          ):\n          (\n<TextInput\n            //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n            id=\"test2\"\n            //invalidText=\"Invalid error message.\"\n            labelText=\"Loan Amount\"\n            name=\"loan_amount\"\n            placeholder=\"loan amount in rupees\"\n            value={loan_amount}\n            onChange={this.changeHandler}\n          />\n          )\n        }\n      \n      </div>\n         \n          \n        \n          \n          <div className='box'>\n            \n         {\n           (this.state.loanTermError)?\n           (\n<TextInput\n            //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n            id=\"test2\"\n            invalidText={this.state.loanTermError}\n            labelText=\"loan amount term\"\n            placeholder=\"loan amount term\"\n            name=\"loan_amount_term\"\n            value={loan_amount_term}\n            onChange={this.changeHandler}\n          invalid/>\n           ):\n    (\n      \n        \n<TextInput\n            //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n            id=\"test2\"\n            //invalidText=\"Invalid error message.\"\n            labelText=\"loan amount term\"\n            placeholder=\"loan amount term\"\n            name=\"loan_amount_term\"\n            value={loan_amount_term}\n            onChange={this.changeHandler}\n          />\n       \n      \n    )\n         }\n           \n           </div>\n\n <div className='box'>\n   \n \n    </div>   \n      <div style={{float:'left',marginLeft:'0.5rem',marginRight:'4rem',marginBottom:'2rem'}} >\n        <Button kind ='tertiary' type=\"submit\">Submit Application</Button>\n      </div>\n     \n        </form>\n        \n  \n \n       </div>\n   )\n  :\n  ''\n        }\n  {\n    (this.state.LoanResponse=='loan approved' && this.state.isSubmitted=='yes')?\n    (\n      <div class=\"alert alert-success\" role=\"alert\" style={{width:'80%',height:'10rem',marginLeft:'3.5rem',marginRight:'3rem',marginTop:'10rem'}}> \n      <h4 class=\"alert-heading\">Congratulations!</h4>\n      <span style={{fontSize:'40px'}}>&#10003;</span>\n      <p> Your loan has been successfully approved. </p>\n      \n      <hr></hr>\n      <p class=\"mb-0\">Thanking for visiting our site</p>\n    </div>\n\n      \n    )\n    :\n    ''\n    \n  }\n  {\n    (this.state.LoanResponse=='loan denied' && this.state.isSubmitted=='yes')?\n    \n      (\n        <div class=\"alert alert-danger\" role=\"alert\" style={{width:'80%',height:'10rem',marginLeft:'3.5rem',marginRight:'3rem',marginTop:'10rem'}}> \n        <h4 class=\"alert-heading\">Sorry!</h4>\n        <span style={{fontSize:'40px'}}>&#10007;</span>\n        <p> Your loan has been denied. Better luck next time.</p>\n        <hr></hr>\n        <p class=\"mb-0\">Thanking for using our site</p>\n      </div>\n        \n      )\n      :\n      ''\n    \n  }\n       \n\n        </div>  \n    \n  \n       \n          \n        \n      )\n  \n  }\n    }\nexport default Form;\n\n\n","export default __webpack_public_path__ + \"static/media/cloudLogo.cc98c683.png\";","import React, { Component } from 'react';\nimport cloudLogo from './cloudLogo.png';\n\nimport {TextInput,Button,Loading,InlineNotification,NotificationActionButton, RadioButtonGroup,RadioButton, FormGroup, Tooltip,Link} from 'carbon-components-react';\nimport axios from 'axios';\nimport './formTrail.scss'\n//import { action } from '@storybook/addon-actions';\nconst initialUserState={\n  \n  dependents_no:'',\n  dependentsError:'',\n  education:'',\n  self_emp:'',\n  credit_history:'',\n  propertyArea:'',\n  gendernew:'',\n  marriage_status:'',\n  applicant_income:'',\n  coapplicant_income:'',\n  applicantIncomeError:'',\n  coapplicant_income_error:'',\n  loan_amount:'',\n  loanAmountError:'',\n  loan_amount_term:'',\n  loanTermError:'',\n  isSubmitted:'no',\n  LoanResponse:''\n  \n}\nconst items=[\n  {\n    label:'urban',\n    value:'urban'\n  },\n  {\n    label:'semi-urban',\n    value:'semi-urban'\n  },\n  {\n    label:'rural',\n    value:'rural'\n  },\n  \n]\nclass  FormTrail extends Component{\n  constructor(props){\n    super(props)\n    this.state=initialUserState;\n    this.handleChange = this.handleChange.bind(this);\n    this.handled=this.handled.bind(this);\n    this.onChangeGender=this.onChangeGender.bind(this);\n    this.onChangeMarriage=this.onChangeMarriage.bind(this);\n    this.onChangeSelfEmp=this.onChangeSelfEmp.bind(this);\n    this.onChangeEducation=this.onChangeEducation.bind(this);\n    this.onChangePropertyArea=this.onChangePropertyArea.bind(this);\n    this.submitHandler=this.submitHandler.bind(this);\n  }\n  \n  onChangeEducation(edu){\n    this.state.education=edu.target.value\n  }\n  onChangeSelfEmp(emp){\n    this.state.self_emp=emp.target.value\n  }\n  onChangeGender(event) {\n    \n   this.state.gendernew=event.target.value\n   console.log(this.state.gendernew)\n    \n  }\n  onChangeMarriage(e) {\n    \n    this.state.marriage_status=e.target.value\n    console.log(this.state.marriage_status)\n     \n   }\n   onChangePropertyArea(property) {\n    \n    this.state.propertyArea=property.target.value\n    console.log(this.state.propertyArea)\n     \n   }\n  \n  handleChange = (selectedLoanType) => {\n    console.log(selectedLoanType);\n    this.setState({ loanType: selectedLoanType.selectedItem.value });\n    \n\n    console.log(this.state.loanType)\n    \n  }\n  \n  handled=(e)=>{\n    console.log('new ')\n    this.setState({ gendernew: e.target.value });\n  }\n\n  changeHandler=(e)=>{\n    this.setState({\n      [e.target.name]:e.target.value\n    })\n  }\n\n  validate=()=>{\n    \n    let dependentsError=''\n   \n    let loanAmountError=''\n    let loanTermError=''\n    let applicantIncomeError=''\n    let  coapplicant_income_error=''\n    //let credit_history_error=''\n    var numbers = /^[0-9]+$/;\n    let isSubmitted='no'\n   \n    \n  //   if(!this.state.firstname){\n  //       firstnameError='First name cannot be blank'\n  //   }\n  //   if(!this.state.lastname){\n  //     lastNameError='Last name cannot be blank'\n  // }\n  if(!this.state.dependents_no){\n    dependentsError='Please enter number of dependents'\n  }\n  else{\n    if(!this.state.dependents_no.match(numbers)){\n      dependentsError='Number of dependents should be a number'\n    }\n  }\n  if(!this.state.loan_amount){\n    loanAmountError='Please enter loan amount'\n  }\n  else{\n    if(!this.state.loan_amount.match(numbers)){\n      loanAmountError='loan amount should be in numbers'\n    }\n  }\n\n  if(!this.state.applicant_income){\n    applicantIncomeError='Applicant income cannot be blank'\n  }\n  else{\n    if(!this.state.applicant_income.match(numbers)){\n      applicantIncomeError='Applicant income should be a number'\n    }\n  }\n  if(!this.state.coapplicant_income){\n    coapplicant_income_error='Co-Applicant income cannot be blank'\n  }\n  else{\n    if(!this.state.coapplicant_income.match(numbers)){\n      coapplicant_income_error='Co-applicant income should be a number'\n    }\n  }\n  if(!this.state.loan_amount_term){\n    loanTermError='Please enter loan term'\n  }\n  else{\n    if(!this.state.loan_amount_term.match(numbers)){\n      loanTermError='loan term should be in numbers'\n    }\n  }\n  if( dependentsError || loanAmountError || loanTermError || applicantIncomeError || coapplicant_income_error){\n  this.setState({\n        dependentsError,loanAmountError,loanTermError,applicantIncomeError,coapplicant_income_error\n      })\n      return false\n    }else{\n      isSubmitted='yes'\n      dependentsError=''\n      loanAmountError=''\n      loanTermError=''\n      coapplicant_income_error=''\n      applicantIncomeError=''\n\n\n      this.setState({\n        isSubmitted,dependentsError,loanAmountError,applicantIncomeError,coapplicant_income_error,loanTermError\n      })\n       return true;\n    }\n   \n  } \n  submitHandler=(e)=>{\n    e.preventDefault()//to prevent page refresh\n    \n   const isValid=this.validate();\n  if(isValid){\n    \n    console.log(this.state);\n   // clear form\n   \n  // this.setState(initialUserState)\n  \n\n    const data={\n      dependents_no:this.state.dependents_no,\n      education:this.state.education,\n      self_emp:this.state.self_emp,\n      gendernew:this.state.gendernew,\n      marriage_status:this.state.marriage_status,\n      loan_amount:this.state.loan_amount,\n      isSubmitted:this.state.isSubmitted,\n      loan_amount_term:this.state.loan_amount_term,\n      applicant_income:this.state.applicant_income,\n      coapplicant_income:this.state.coapplicant_income,\n      credit_history:this.state.credit_history,\n      propertyArea:this.state.propertyArea,\n      loanStatus:'none'\n    }\n    \n    console.log(this.state.isSubmitted)\n    console.log(data)\n  \n    axios.post(`http://${window.location.hostname}:${window.location.port}/submit`, \n     data )\n    .then( (response)=> {\n      \n      \n      \n      this.setState({\n        LoanResponse:response.data\n      })\n     console.log(\"Response is \",this.state.LoanResponse)\n    }).catch(\n      err=>{\n        console.log('error',err)\n      }\n    )\n    \n    }\n  }\n\n  render(){\n    const {credit_history,dependents_no,loan_amount,applicant_income,coapplicant_income,loan_amount_term}=this.state\n    \n    \n    \n    \n    return (\n      \n      \n      <div style={{marginBottom:10,marginTop:100}} >\n\n  {\n    (this.state.isSubmitted == 'yes' && this.state.LoanResponse=='')?\n    \n    (\n      <div>\n        <center style={{marginTop:'15rem'}}>\n        <Loading\n      description=\"Active loading indicator\" withOverlay={false}\n    />\n    \n          </center>\n       \n\n      <div  style={{width:'40%',height:'4rem',marginLeft:'32rem',marginRight:'30rem',marginTop:'4rem'}}> \n      <h4 class=\"alert-heading\" >Wooah! Your form has been submitted &#128516;</h4>\n      <p>Now based on the deployed watson machine learning model in cloudPak for data, predictions for the given input data will be displayed.\n      </p>\n      <hr></hr>\n      <p class=\"mb-0\">Kindly wait for the response.</p>\n    </div>\n      </div>\n    )\n    :\n    ''\n  }\n    {\n(this.state.isSubmitted=='no')?\n\n   (\n     <div>\n         {/* <div className='sidenav' style={{color:'white'}}>\n        <img src={cloudLogo} style={{width:100,height:70,marginTop:100}}></img>\n        <br/>\n        <br/>\n         <h3 style={{color:'white',}}>Loan Processing Application</h3>\n         <hr className=\"new5\" style={{width:400,color:'white'}}></hr>\n         <hr style={{color:'white'}}></hr>\n         \n         <p style={{textAlign:'left',marginLeft:30,marginRight:20}}>This application leverages the useage of Cloud Pak for data, Cloud Pak for integration and Cloud Pak for Application</p>\n\n        </div> */}\n       <div> \n       <h3  style={{textAlign:'left',marginLeft:'2rem'}}>Enter your details to request for loan</h3>\n       <hr class=\"new4\">\n\n       </hr>\n       </div>\n      <br/>\n      <div style={{textAlign:'left',marginLeft:'2rem'}}>\n    <InlineNotification\n      kind=\"info\"\n      //actions={<NotificationActionButton lowContrast>Action</NotificationActionButton>}\n      iconDescription=\"describes the close button\"\n      subtitle={<span> We use this information to process your eligibility for taking loan.Kindly provide correct details. </span>}\n      title=\"Note:\"\n    />\n  </div>\n  <form onSubmit={this.submitHandler} style={{marginLeft:'1rem'}}>   \n    <h5 style={{textAlign:'left',marginLeft:'1rem'}}>1. Personnal information</h5>\n       \n      <div className='box' >\n        <FormGroup legendText=\"Education\" onChange={this.onChangeEducation} value={this.state.education} style={{textAlign:'left'}}>\n        <RadioButtonGroup\n    //defaultSelected=\"No\"\n    //legend=\"Group Legend\"\n    //name=\"radio-button-group\"\n    //valueSelected=\"No\"\n   labelPosition='right' orientation='horizontal'>\n     <RadioButton\n      id=\"radio-7\"\n      labelText=\"Graduate\"\n      value=\"graduate\"\n      name='education'\n    />\n    <RadioButton\n      id=\"radio-8\"\n      labelText=\"Under Graduate\"\n      value=\"under graduate\"\n      name='education'\n      \n    />\n  </RadioButtonGroup>\n  </FormGroup>\n  </div>  \n      \n\n  \n<div className='box'>\n<FormGroup legendText=\"Self Employed\" onChange={this.onChangeSelfEmp} value={this.state.self_emp} style={{textAlign:'left'}}>\n    \n  \n  <RadioButtonGroup\n    //defaultSelected=\"No\"\n    //legend=\"Group Legend\"\n    //name=\"radio-button-group\"\n    //valueSelected=\"No\"\n   labelPosition='right' orientation='horizontal'\n   \n   >\n    \n    <RadioButton\n      id=\"radio-5\"\n      labelText=\"No\"\n      value=\"No\"\n      name='selfEmp'\n    />\n    <RadioButton\n      id=\"radio-6\"\n      labelText=\"Yes\"\n      value=\"Yes\"\n      name='selfEmp'\n      \n    />\n</RadioButtonGroup>\n     \n   \n  </FormGroup>\n  </div>\n     <div className='box'>\n     <FormGroup legendText=\"Gender\" onChange={this.onChangeGender} value={this.state.gendernew} style={{textAlign:'left'}}>\n    \n  \n    <RadioButtonGroup\n      //defaultSelected=\"female\"\n      //legend=\"Group Legend\"\n      //name=\"radio-button-group\"\n      //valueSelected=\"female\"\n     labelPosition='right' orientation='horizontal'\n     \n     >\n      \n      <RadioButton\n        id=\"radio-1\"\n        labelText=\"male\"\n        value=\"male\"\n        name='gender'\n      />\n      <RadioButton\n        id=\"radio-2\"\n        labelText=\"female\"\n        value=\"female\"\n        name='gender'\n        \n      />\n  </RadioButtonGroup>\n       \n     \n    </FormGroup>\n      \n       </div> \n  \n      <div className='box'>\n          <FormGroup legendText=\"Married\" onChange={this.onChangeMarriage} value={this.state.marriage_status} style={{textAlign:'left'}}>\n    \n  \n    <RadioButtonGroup\n      //defaultSelected=\"No\"\n      legend=\"Group Legend\"\n      name=\"radio-button-group\"\n      valueSelected='No'\n     labelPosition='right' orientation='horizontal'\n     \n     >\n      \n      <RadioButton\n        id=\"radio-3\"\n        labelText=\"No\"\n        value=\"no\"\n        name='marriage'\n      />\n      <RadioButton\n        id=\"radio-4\"\n        labelText=\"Yes\"\n        value=\"yes\"\n        name='marriage'\n        \n      />\n  </RadioButtonGroup>\n       \n     \n    </FormGroup>\n      \n    </div>\n       \n    <div style={{float: 'left',\n  width: '100%',\n  padding: '20px'}}>\n        <FormGroup legendText=\"Property Area\" onChange={this.onChangePropertyArea} value={this.state.propertyArea} style={{textAlign:'left'}}>\n        <RadioButtonGroup\n    //defaultSelected=\"No\"\n    //legend=\"Group Legend\"\n    //name=\"radio-button-group\"\n    //valueSelected=\"No\"\n   labelPosition='right' orientation='horizontal'>\n     <RadioButton\n      id=\"radio-13\"\n      labelText=\"urban\"\n      value=\"urban\"\n      name='property area'\n    />\n    <RadioButton\n      id=\"radio-14\"\n      labelText=\"rural\"\n      value=\"rural\"\n      name='property area'\n      \n    /><RadioButton\n    id=\"radio-15\"\n    labelText=\"semi-urban\"\n    value=\"semi-urban\"\n    name='property area'\n  />\n  </RadioButtonGroup>\n  </FormGroup>\n  </div>  \n      \n     <div className=\"box\">\n       {\n         (this.state.dependentsError)?\n    (\n      <TextInput\n            //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n            id=\"test2\"\n            invalidText={this.state.dependentsError}\n            labelText=\"Number of dependents\"\n            placeholder=\"Number of dependents\"\n            name=\"dependents_no\"\n            value={dependents_no}\n            onChange={this.changeHandler}\n          invalid/>  \n    ):\n\n    (\n\n       <TextInput\n        //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n        id=\"test2\"\n        //invalidText=\"Invalid error message.\"\n        labelText=\"Number of dependents\"\n        placeholder=\"Number of dependents\"\n        name=\"dependents_no\"\n        value={dependents_no}\n        onChange={this.changeHandler}\n      />   \n    )\n       }\n      \n      </div>\n      <div className=\"box\">\n      <TextInput\n        //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n        id=\"test2\"\n        //invalidText=\"Invalid error message.\"\n        labelText=\"Credit history\"\n        placeholder=\"Credit history\"\n        name=\"credit_history\"\n        value={credit_history}\n        onChange={this.changeHandler}\n      />   \n      </div>\n     \n      \n      \n      {/* <h5 style={{textAlign:'left',marginLeft:'1rem',marginTop:'1rem', float:'left',width:'100%'}}>2. Additional information</h5> */}\n  \n    <h5 style={{textAlign:'left',marginLeft:'1rem',marginTop:'1rem', float:'left',width:'100%'}}>2.Loan Information\n    <Tooltip\n      direction=\"right\"\n      tabIndex={0}\n      //triggerText=\"Tooltip label\"\n    >\n      <p>\n      We use this information to process your eligibility for taking loan.Kindly provide correct details.</p>\n      \n    </Tooltip>\n    </h5>\n   <div className=\"box\" >\n     {\n       (this.state.applicantIncomeError)?\n       (\n        <TextInput\n            //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n            id=\"test2\"\n            invalidText={this.state.applicantIncomeError}\n            labelText=\"Applicant income\"\n            placeholder=\"Enter Applicant Income in rupees\"\n            name=\"applicant_income\"\n            value={applicant_income}\n            onChange={this.changeHandler}\n          invalid/>\n       ):\n       (\n        <TextInput\n        //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n        id=\"test2\"\n        //invalidText={this.state.applicantIncomeError}\n        labelText=\"Applicant income\"\n        placeholder=\"Enter Applicant Income in rupees\"\n        name=\"applicant_income\"\n        value={applicant_income}\n        onChange={this.changeHandler}\n      />\n       )\n     }\n   \n   </div>\n   <div className=\"box\" >\n     {\n       (this.state.coapplicant_income_error)?\n       (\n        <TextInput\n            //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n            id=\"test2\"\n            invalidText={this.state.coapplicant_income_error}\n            labelText=\"Co-Applicant income\"\n            placeholder=\"Enter Co-Applicant Income in rupees\"\n            name=\"coapplicant_income\"\n            value={coapplicant_income}\n            onChange={this.changeHandler}\n          invalid/>\n       ):\n       (\n<TextInput\n        //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n        id=\"test2\"\n        //invalidText={this.state.coapplicant_income_error}\n        labelText=\"Co-Applicant income\"\n        placeholder=\"Enter Co-Applicant income in rupees\"\n        name=\"coapplicant_income\"\n        value={coapplicant_income}\n        onChange={this.changeHandler}\n      />\n       )\n     }\n   \n   </div>\n    \n      <div className='box' >\n        {\n          (this.state.loanAmountError)?\n          (\n<TextInput\n            //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n            id=\"test2\"\n            invalidText={this.state.loanAmountError}\n            labelText=\"Loan Amount\"\n            name=\"loan_amount\"\n            placeholder=\"Enter loan amount in rupees\"\n            value={loan_amount}\n            onChange={this.changeHandler}\n          invalid/>\n          ):\n          (\n<TextInput\n            //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n            id=\"test2\"\n            //invalidText=\"Invalid error message.\"\n            labelText=\"Loan Amount\"\n            name=\"loan_amount\"\n            placeholder=\"Enter loan amount in rupees\"\n            value={loan_amount}\n            onChange={this.changeHandler}\n          />\n          )\n        }\n      \n      </div>\n         \n          \n        \n          \n          <div className='box'>\n            \n         {\n           (this.state.loanTermError)?\n           (\n<TextInput\n            //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n            id=\"test2\"\n            invalidText={this.state.loanTermError}\n            labelText=\"loan amount term\"\n            placeholder=\"Enter loan amount term\"\n            name=\"loan_amount_term\"\n            value={loan_amount_term}\n            onChange={this.changeHandler}\n          invalid/>\n           ):\n    (\n      \n        \n<TextInput\n            //helperText=\"Optional helper text here; if message is more than one line text should wrap (~100 character count maximum)\"\n            id=\"test2\"\n            //invalidText=\"Invalid error message.\"\n            labelText=\"loan amount term\"\n            placeholder=\"Enter loan amount term\"\n            name=\"loan_amount_term\"\n            value={loan_amount_term}\n            onChange={this.changeHandler}\n          />\n       \n      \n    )\n         }\n           \n           </div>\n\n <div className='box'>\n   \n \n    </div>   \n      <div style={{float:'left',marginRight:'70rem',marginLeft:'2rem' ,marginBottom:'2rem'}} >\n        <Button kind ='tertiary' type=\"submit\">Submit Application</Button>\n      </div>\n     \n        </form>\n        \n  \n \n       </div>\n   )\n  :\n  ''\n        }\n  {\n    (this.state.LoanResponse=='loan approved' && this.state.isSubmitted=='yes')?\n    (\n      <div class=\"alert alert-success\" role=\"alert\" style={{width:'40%',marginLeft:'30rem',marginRight:'30rem'}}> \n      <h4 class=\"alert-heading\">Congragulations!</h4>\n      <span style={{fontSize:'40px'}}>&#10003;</span>\n      <p> Your loan has been successfully approved. </p>\n      \n      <hr></hr>\n      <p class=\"mb-0\">Thanking for visiting our site</p>\n    </div>\n\n      \n    )\n    :\n    ''\n    \n  }\n  {\n    (this.state.LoanResponse=='loan denied' && this.state.isSubmitted=='yes')?\n    \n      (\n        <div class=\"alert alert-danger\" role=\"alert\" style={{width:'40%',marginLeft:'30rem',marginRight:'30rem'}}> \n        <h4 class=\"alert-heading\">Sorry!</h4>\n        <span style={{fontSize:'40px'}}>&#10007;</span>\n        <p> Your loan has been denied. Better luck next time.</p>\n        <hr></hr>\n        <p class=\"mb-0\">Thanking for using our site</p>\n      </div>\n        \n      )\n      :\n      ''\n    \n  }\n       \n\n        </div>  \n    \n  \n       \n          \n        \n      )\n  \n  }\n    }\nexport default FormTrail;\n\n","import React, { Component } from 'react';\nimport {TextInput,Row,Button,ToastNotification,ProgressStep,ProgressIndicator,Loading,InlineNotification,NotificationActionButton, RadioButtonGroup,RadioButton, FormGroup, Tooltip,Link, Form, Grid, Column, Tile, FormLabel} from 'carbon-components-react';\nimport axios from 'axios';\nimport cloudLogo from './cloudLogo.png';\nimport './newForm.scss'\nconst initialUserState={\n  \n    age:'',\n    invalidAge:false,\n    ageError:'',\n    experience:'',\n    invalidExperience:false,\n    experienceError:'',\n    income:'',\n    invalidIncome:false,\n    incomeError:'',\n    Zipcode:'',\n    invalidZipcode:false,\n    ZipcodeError:'',\n    familySize:'',\n    invalidFamilySize:false,\n    familyError:'',\n    Ccavg:'',\n    invalidCcavg:false,\n    CcavgError:'',\n    mortgage:'',\n    invalidMortgage:false,\n    mortgageError:'',\n    education:'',\n    personal_loan:'',\n    security_account:'',\n    CdAccount:'',\n    online:'',\n    credit_card:'',\n    isSubmitted:'no',\n    LoanResponse:''\n  }\n  \n\nclass NewForm extends Component{\nconstructor(props){\n    super(props)\n    this.state=initialUserState;\n    \n    this.onChangeSecurityAccount=this.onChangeSecurityAccount.bind(this);\n    this.onChangeEducation=this.onChangeEducation.bind(this)\n    this.onChangeOnline=this.onChangeOnline.bind(this)\n    this.onChangeCdAccount=this.onChangeCdAccount.bind(this)\n    this.onChangeCreditCard=this.onChangeCreditCard.bind(this)\n    this.submitHandler=this.submitHandler.bind(this);\n\n}\n\n onChangeSecurityAccount(event) {\n    \n  this.state.security_account=event.target.value\n  console.log(this.state.security_account)\n   \n }\n onChangeEducation(event) {\n    \n  this.state.education=event.target.value\n  console.log(this.state.education)\n   \n }\n onChangeCreditCard(event) {\n    \n  this.state.credit_card=event.target.value\n  console.log(this.state.credit_card)\n   \n }\n onChangeCdAccount(event) {\n    \n  this.state.CdAccount=event.target.value\n  console.log(this.state.CdAccount)\n   \n }\n onChangeOnline(event) {\n    \n  this.state.online=event.target.value\n  console.log(this.state.online)\n   \n }\n\nchangeHandler=(e)=>{\n    this.setState({\n      [e.target.name]:e.target.value\n    })\n  }\n  validate=()=>{\n    \n    let ageError=''\n    let experienceError=''\n    let incomeError=''\n    let ZipcodeError=''\n    let  familyError=''\n    let CcavgError=''\n    let  mortgageError=''\n    \n    var numbers = /^[0-9]+$/;\n    let isSubmitted='no'\n   \n  if(!this.state.age){\n    ageError='Please enter your age'\n    this.setState({\n      invalidAge:true\n    })\n  }\n  else{\n    if(!this.state.age.match(numbers)){\n      ageError='Age should be a number'\n      this.setState({\n        invalidAge:true\n      })\n    }\n  }\n  if(!this.state.experience){\n    experienceError='Experience cannot be empty'\n    this.setState({\n      invalidExperience:true\n    })\n  }\n  else{\n    if(!this.state.experience.match(numbers)){\n        experienceError='Experience should be a number'\n        this.setState({\n          invalidExperience:true\n        })\n    }\n  }\n\n  if(!this.state.income){\n    incomeError='Income cannot be empty'\n    this.setState({\n      invalidIncome:true\n    })\n  }\n  else{\n    if(!this.state.income.match(numbers)){\n      incomeError='Income should be a number'\n      this.setState({\n        invalidIncome:true\n      })\n    }\n  }\n  if(!this.state.Zipcode){\n    ZipcodeError='Zipcode cannot be empty'\n    this.setState({\n      invalidZipcode:true\n    })\n  }\n  else{\n    if(!this.state.Zipcode.match(numbers)){\n      ZipcodeError='Zipcode should be a number'\n      this.setState({\n        invalidZipcode:true\n      })\n    }\n  }\n  if(!this.state.familySize){\n    familyError='Please enter family size'\n    this.setState({\n      invalidFamilySize:true\n    })\n  }\n  else{\n    if(!this.state.familySize.match(numbers)){\n      familyError='family size should be in numbers'\n      this.setState({\n        invalidFamilySize:true\n      })\n    }\n  }\n  if(!this.state.mortgage){\n    mortgageError='Mortgage value cannot be empty'\n    this.setState({\n      invalidMortgage:true\n    })\n  }\n  else{\n    if(!this.state.mortgage.match(numbers)){\n      mortgageError='Mortgage value should be a number'\n      this.setState({\n        invalidMortgage:true\n      })\n    }\n  }\n  if(!this.state.Ccavg){\n    CcavgError='Please enter Ccavg value'\n    this.setState({\n      invalidCcavg:true\n    })\n    \n  }\n  else{\n    if(!this.state.Ccavg.match(numbers)){\n      CcavgError='Ccavg value should be in numbers'\n      this.setState({\n        invalidCcavg:true\n      })\n      \n    }\n  }\n  if( ageError || experienceError || familyError|| mortgageError || CcavgError || incomeError || ZipcodeError ){\n  this.setState({\n        ageError,experienceError,familyError,mortgageError,CcavgError,incomeError,ZipcodeError\n      })\n      return false\n    }else{\n      isSubmitted='yes'\n      ageError=''\n      experienceError=''\n      incomeError=''\n      ZipcodeError=''\n      familyError=''\n      CcavgError=''\n      mortgageError=''\n      this.setState({\n        invalidAge:false,\n        invalidCcavg:false,\n        invalidExperience:false,\n        invalidFamilySize:false,\n        invalidIncome:false,\n        invalidMortgage:false,\n        invalidZipcode:false\n      })\n\n      this.setState({\n        isSubmitted,ageError,experienceError,familyError,mortgageError,CcavgError,incomeError,ZipcodeError\n      })\n      console.log(this.state.isSubmitted)\n       return true;\n    }\n  }\n  submitHandler=(e)=>{\n    e.preventDefault()//to prevent page refresh\n    \n   const isValid=this.validate();\n  if(isValid){\n    console.log(this.state)\n    const data={\n      age:this.state.age,\n      experience:this.state.experience,\n      income:this.state.income,\n      Zipcode:this.state.Zipcode,\n      familySize:this.state.familySize,\n      Ccavg:this.state.Ccavg,\n      mortgage:this.state.mortgage,\n      education:this.state.education,\n      personal_loan:'none',\n      security_account:this.state.security_account,\n      CdAccount:this.state.CdAccount,\n      online:this.state.online,\n      credit_card:this.state.credit_card,\n      isSubmitted:this.state.isSubmitted,\n      \n    }\n    \n    console.log(this.state.isSubmitted)\n    console.log(data)\n  \n    axios.post(`${window.location.origin}/submit`, \n     data )\n    .then( (response)=> {\n      \n      \n      \n      this.setState({\n        LoanResponse:response.data\n      })\n     console.log(\"Response is \",this.state.LoanResponse)\n    }).catch(\n      err=>{\n        console.log('error',err)\n      }\n    )\n    console.log(this.state);\n  }\n}\n    render(){\n        return(\n            <div>\n              {\n                  (this.state.isSubmitted== 'yes' && this.state.LoanResponse=='')?\n    \n                  (\n                    <div>\n\n                    <ToastNotification\n                            kind='success'\n                            caption='Form has been submitted'\n                            style={{ top:0,right:0,position:'absolute',marginTop:'4rem' }}\n                            className='notification--success bx--inline-notification__title'\n                          />\n                  <div className='tilePlacement'>\n                    <Grid>\n                      <Row>\n                        <Column >\n                          \n                          <center>\n                            <Loading\n                              description=\"Active loading indicator\" withOverlay={false}\n                            />\n                            <div  style={{width:'40%',height:'4rem',marginTop:'4rem'}}> \n                              <h4 class=\"alert-heading\" >Wooah! Your form has been submitted &#128516;</h4>\n                              <p>Now based on the deployed watson machine learning model in cloudPak for data, predictions for the given input data will be displayed.\n                              </p>\n                              <hr></hr>\n                              <p class=\"mb-0\">Kindly wait for the response.</p>\n                          </div>\n                          </center>\n                          \n                        </Column>\n                      </Row>\n                    </Grid>\n                    \n                    \n                  </div>\n                  </div>\n                  )\n                  :\n                    ''\n              }\n              {\n              (this.state.isSubmitted=='no')?\n              (\n\n              \n              <div>\n                  <div class=\"header\">\n                  <br/>\n                    <img src={cloudLogo} style={{width:'5rem',height:'4rem'}}/>\n                  <br/>\n                    <h3 style={{color:'white',}}>Loan Processing Application</h3>\n                    <center>\n                      <p style={{textAlign:'center'}}>This application leverages the useage of Cloud Pak for data, Cloud Pak for integration and Cloud Pak for Application</p>\n                    </center>\n                \n                  </div>\n              <br/>\n            \n           \n                  <Form style={{marginTop:'2rem'}} onSubmit={this.submitHandler}>\n                    <Grid >\n                    <Row>\n                      <Column sm={3} md={5} lg={4}>\n                        <h3 style={{float:'left',marginLeft:'1rem'}}>Enter loan details</h3>\n                        <br/>\n                        <hr className='new4'/>\n                      </Column>\n                    </Row>\n                    <br/>\n                    <br/>\n                    <Row>\n                      <Column sm={3} md={5} lg={4}>\n                        <h5 style={{float:'left',marginLeft:'1rem'}}>1. Personal Information</h5>\n                        <br/>\n                        \n                      </Column>\n                      <br/>\n                      \n                    </Row>\n                    <br/>\n                        <Row>\n                            <Column sm={3} md={5} lg={4}>\n                                    \n                \n                                    <TextInput\n                                        //helperText=\"Age should be a number\"\n                                        \n                                        id=\"age\"\n                                        invalidText={this.state.ageError}\n                                        labelText=\"Age\"\n                                        placeholder=\"Enter customer age\"\n                                        name='age'\n                                        value={this.state.age}\n                                        onChange={this.changeHandler}\n                                        invalid={this.state.invalidAge}\n                                        inline\n                                        \n                                    />\n                                \n                    \n                            </Column>\n                            \n                        </Row>\n                        <br/>\n                        <Row>\n                            <Column sm={3} md={5} lg={4}>\n                                \n                \n                                    <TextInput\n                                        //helperText=\"Experience should be a number\"\n                                        id=\"experience\"\n                                        invalidText={this.state.experienceError}\n                                        labelText=\"Experience\"\n                                        placeholder=\"Enter years of experience\"\n                                        name='experience'\n                                        value={this.state.experience}\n                                        onChange={this.changeHandler}\n                                        invalid={this.state.invalidExperience}\n                                        inline\n                                    />\n                                \n                    \n                            </Column>\n                            \n                        </Row>\n                        <br/>\n                        <Row>\n                            <Column sm={3} md={5} lg={4}>\n                                \n                \n                                    <TextInput\n                                        //helperText=\"Income should be a number\"\n                                        id=\"income\"\n                                        invalidText={this.state.incomeError}\n                                        labelText=\"Annual Income\"\n                                        placeholder=\"Enter annual Income \"\n                                        name='income'\n                                        value={this.state.income}\n                                        onChange={this.changeHandler}\n                                        invalid={this.state.invalidIncome}\n                                        inline\n                                    />\n                                \n                    \n                            </Column>\n                            \n                        </Row>\n                        <br/>\n                        <Row>\n                            <Column sm={3} md={5} lg={4}>\n                                \n                \n                                    <TextInput\n                                        //helperText=\"This should be a 6 digit home address zip code\"\n                                        id=\"zipcode\"\n                                        invalidText={this.state.ZipcodeError}\n                                        labelText=\"ZipCode\"\n                                        placeholder=\"Enter Zip code\"\n                                        name='Zipcode'\n                                        value={this.state.Zipcode}\n                                        onChange={this.changeHandler}\n                                        invalid={this.state.invalidZipcode}\n                                        inline\n                                    />\n                                \n                    \n                            </Column>\n                            \n                        </Row>\n\n                        <br/>\n                        <Row>\n                            <Column sm={3} md={5} lg={4}>\n                                \n                \n                                    <TextInput\n                                        //helperText=\"This should be a number\"\n                                        id=\"family\"\n                                        invalidText={this.state.familyError}\n                                        labelText=\"Family Size\"\n                                        placeholder=\"Enter family size\"\n                                        name='familySize'\n                                        value={this.state.familySize}\n                                        onChange={this.changeHandler}\n                                        invalid={this.state.invalidFamilySize}\n                                        inline\n                                    />\n                                \n                    \n                            </Column>\n                            \n                        </Row>\n                        <br/>\n                        <Row>\n\n                            <Column sm={1} md={5} lg={4} style={{marginLeft:'1rem'}}>\n                                <FormGroup legendText=\"Education\" onChange={this.onChangeEducation} value={this.state.education} style={{textAlign:'left'}}>\n                                    <RadioButtonGroup\n                                        //defaultSelected=\"No\"\n                                        // legend=\"Group Legend\"\n                                        // name=\"radio-button-group\"\n            \n                                        labelPosition='right' \n                                        orientation='horizontal'\n     \n                                    >\n                                    <RadioButton\n                                        id=\"undergrad\"\n                                        labelText=\"Under-Graduate\"\n                                        value=\"1\"\n                                        name='education'\n                                    />\n                                    \n                                    <RadioButton\n                                        id=\"graduate\"\n                                        labelText=\"Graduate\"\n                                        value=\"2\"\n                                        name='education'\n                                    />\n                                    <RadioButton\n                                        id=\"advanced\"\n                                        labelText=\"Advanced/Professional\"\n                                        value=\"3\"\n                                        name='education'\n        \n                                    />\n                                    </RadioButtonGroup>\n       \n     \n                                </FormGroup>\n                            </Column>\n                            \n                        </Row>\n                        <br/>\n                        <br/>\n                        <Row>\n                          <Column sm={3} md={5} lg={4}>\n                            <h5 style={{float:'left',marginLeft:'1rem'}}>\n                              2. Loan Information\n                              <Tooltip\n                                direction=\"right\"\n                                tabIndex={0}\n                               //triggerText=\"Tooltip label\"\n                              >\n                              <p>\n                                  We use this information to process your eligibility for taking loan.Kindly provide correct details.</p>\n      \n                              </Tooltip>\n                              </h5>\n                            <br/>\n                          </Column>\n                            <br/>\n                        </Row>\n                    <br/>\n                        <Row>\n                            <Column sm={3} md={5} lg={4}>\n                                \n                \n                                    <TextInput\n                                        //helperText=\"Fill in the average spending of credit card per month\"\n                                        id=\"ccavg\"\n                                        invalidText={this.state.CcavgError}\n                                        labelText=\"Ccavg\"\n                                        placeholder=\"Enter Ccavg\"\n                                        name='Ccavg'\n                                        value={this.state.Ccavg}\n                                        onChange={this.changeHandler}\n                                        invalid={this.state.invalidCcavg}\n                                        inline\n                                    />\n                                \n                    \n                            </Column>\n                            \n                        </Row>\n                        <br/>\n                        \n                        <Row>\n                            <Column sm={3} md={5} lg={4}>\n                                \n                \n                                    <TextInput\n                                       // helperText=\"Fill in the value of house mortgage\"\n                                        id=\"mortgage\"\n                                        invalidText={this.state.mortgageError}\n                                        labelText=\"Mortgage\"\n                                        placeholder=\"Enter Mortgage vale\"\n                                        name='mortgage'\n                                        value={this.state.mortgage}\n                                        onChange={this.changeHandler}\n                                        invalid={this.state.invalidMortgage}\n                                        inline\n                                    />\n                                \n                    \n                            </Column>\n                            \n                        </Row>\n                        <br/>\n                        <br/> \n                        <Row>\n                        <Column sm={1} md={3} lg={5} style={{marginLeft:'1rem'}}>\n                                <FormGroup legendText=\"Security Account\" onChange={this.onChangeSecurityAccount} value={this.state.security_account} style={{textAlign:'left'}}>\n                                    <RadioButtonGroup\n                                        //defaultSelected=\"No\"\n                                        // legend=\"Group Legend\"\n                                        // name=\"radio-button-group\"\n                                        \n                                        labelPosition='right' \n                                        orientation='horizontal'\n                                        \n                                    >\n      \n                                    <RadioButton\n                                        id=\"security-0\"\n                                        labelText=\"No\"\n                                        value=\"0\"\n                                        name='security_account'\n                                    />\n                                    <RadioButton\n                                        id=\"security-1\"\n                                        labelText=\"Yes\"\n                                        value=\"1\"\n                                        name='security_account'\n        \n                                    />\n                                    </RadioButtonGroup>\n       \n     \n                                </FormGroup>\n                            </Column>\n                            <Column sm={1} md={5} lg={4} style={{marginLeft:'1rem'}}>\n                          \n                              <FormGroup legendText=\"CD Account\" onChange={this.onChangeCdAccount} value={this.state.CdAccount} style={{textAlign:'left'}}>\n                                  <RadioButtonGroup\n                                        //defaultSelected=\"No\"\n                                        // legend=\"Group Legend\"\n                                        // name=\"radio-button-group\"\n                                        \n                                        labelPosition='right' \n                                        orientation='horizontal'\n     \n                                  >\n                                  <RadioButton\n                                        id=\"cd-yes\"\n                                        labelText=\"Yes\"\n                                        value=\"1\"\n                                        name='CdAccount'\n                                  />\n                                  <RadioButton\n                                        id=\"cd-no\"\n                                        labelText=\"No\"\n                                        value=\"0\"\n                                        name='CdAccount'\n                                  />\n\n                                  </RadioButtonGroup>\n                              </FormGroup>\n                          </Column>\n                            \n                        </Row>\n\n                        <br/>\n                        <Row>\n                        <Column sm={1} md={3} lg={5} style={{marginLeft:'1rem'}}>\n                                <FormGroup legendText=\"Online\" onChange={this.onChangeOnline} value={this.state.online} style={{textAlign:'left'}}>\n                                    <RadioButtonGroup\n                                        //defaultSelected=\"No\"\n                                        // legend=\"Group Legend\"\n                                        // name=\"radio-button-group\"\n                                        \n                                        labelPosition='right' \n                                        orientation='horizontal'\n     \n                                    >\n      \n                                    <RadioButton\n                                        id=\"online-0\"\n                                        labelText=\"No\"\n                                        value=\"0\"\n                                        name='online'\n                                    />\n                                    <RadioButton\n                                        id=\"online-1\"\n                                        labelText=\"Yes\"\n                                        value=\"1\"\n                                        name='online'\n        \n                                    />\n                                    </RadioButtonGroup>\n       \n     \n                                </FormGroup>\n                            </Column>\n                            <Column sm={1} md={5} lg={4} style={{marginLeft:'1rem'}}>\n                                <FormGroup legendText=\"Credit Card\" onChange={this.onChangeCreditCard} value={this.state.credit_card} style={{textAlign:'left'}}>\n                                    <RadioButtonGroup\n                                        //defaultSelected=\"No\"\n                                        // // legend=\"Group Legend\"\n                                        // // name=\"radio-button-group\"\n                                        // valueSelected='No'\n                                        labelPosition='right' \n                                        orientation='horizontal'\n     \n                                    >\n      \n                                    <RadioButton\n                                        id=\"credit-0\"\n                                        labelText=\"No\"\n                                        value=\"0\"\n                                        name='credit_card'\n                                    />\n                                    <RadioButton\n                                        id=\"credit-1\"\n                                        labelText=\"Yes\"\n                                        value=\"1\"\n                                        name='credit_card'\n        \n                                    />\n                                    </RadioButtonGroup>\n       \n     \n                                </FormGroup>\n                            </Column>\n                            \n                        </Row>\n                        <br/>\n                      \n                        \n                        <Row>\n                                <Column sm={1} md={1} lg={1} style={{marginLeft:'1rem',marginBottom:'6rem'}}>\n                                <Button kind ='tertiary' type=\"submit\">Submit</Button>\n                                </Column>\n                            </Row>            \n                    </Grid>\n                    \n            </Form>\n          </div>\n              ):\n              (\n                ''\n              )\n            }\n            {\n              (this.state.LoanResponse=='loan approved' && this.state.isSubmitted=='yes')?\n                (\n                  <div className='tilePlacement'>\n                    <Grid>\n                      <Row>\n                        <Column >\n                          \n                          <center>\n                            <div class=\"alert alert-success\" role=\"alert\" > \n                              <h4 class=\"alert-heading\">Congratulations!</h4>\n                              <span style={{fontSize:'40px'}}>&#10003;</span>\n                              <p> Your loan has been successfully approved. </p>\n      \n                              <hr></hr>\n                              <p class=\"mb-0\">Thanking for visiting our site</p>\n                            </div>\n                          </center>\n                          \n                        </Column>\n                      </Row>\n                    </Grid>\n                    \n                    \n                  </div>\n                  \n\n      \n                )\n                 :\n                 ''\n    \n            }\n            {\n              (this.state.LoanResponse=='loan denied' && this.state.isSubmitted=='yes')?\n                (\n                  <div className='tilePlacement'>\n                    <Grid>\n                      <Row>\n                        <Column >\n                          \n                          <center>\n                            <div class=\"alert alert-danger\" role=\"alert\" > \n                              <h4 class=\"alert-heading\">Sorry!</h4>\n                              <span style={{fontSize:'40px'}}>&#10007;</span>\n                              <p> Your loan has been denied. Better luck next time.</p>\n                              <hr></hr>\n                              <p class=\"mb-0\">Thanking for using our site</p>\n                            </div>\n        \n                          </center>\n                          \n                        </Column>\n                      </Row>\n                    </Grid>\n                    \n                    \n                  </div>\n      \n                  \n                )\n                :\n                ''\n    \n            }\n            </div>\n        )\n    }\n}\nexport default NewForm;","\nimport './App.scss';\n\nimport NavCarbon from './NavCarbon';\nimport Form from './Form';\nimport FormTrail from './FormTrail';\nimport cloudLogo from './cloudLogo.png';\nimport './form.scss'\nimport NewForm from './NewForm';\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <NavCarbon/>\n      <NewForm/>\n      {/* <Form/> */}\n      {/* <Footer/>\n      <FooterBottom/> */}\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}