{"version":3,"sources":["components/weatherforecast.js","components/hourlyforecast.js","components/intradayforecast.js","components/dailyhist.js","components/hourlyhist.js","components/almanac.js","App.js","index.js"],"names":["Weekforecast","maplat","maplong","useState","latitude","setlatitude","longitude","setlongitude","geocodeobj","setGeocodeobj","isLoading","setLoading","errtext","seterrtext","buttonstate","setbuttonstate","lterrstate","setlterrstate","lngerrstate","setlngerrstate","err1status","seterr1status","err2status","seterr2status","err3status","seterr3status","refmtobj","setrefmtobj","lang","setlang","day","setday","unit","setunit","useEffect","Form","onSubmit","e","preventDefault","locationstr","concat","a","process","REACT_APP_mode","apikey","fetch","keyresponse","json","keyresult","response","result","res","i","length","push","forecast","tempmax","tempmin","geocode2","className","TextInput","id","labelText","invalid","invalidText","helperText","placeholder","size","value","onChange","target","match","Select","event","text","map","item","SelectItem","Button","type","disabled","iconDescription","subtitle","timeout","onClose","title","Loading","active","description","withOverlay","items","DataTable","rows","headers","key","header","getHeaderProps","TableContainer","Table","TableHead","TableRow","TableHeader","TableBody","row","index","TableCell","Hourlyforecast","date","split","time","temp","uv","vis","windspd","Intradayforecast","forecasts","dow","daypart_name","wspd","phrase_32char","Dailyhistory","wxday","wxnight","Hourlyhistory","wx","wdirection","heatidx","Almanac","stday","setstday","stmonth","setstmonth","yrmax","yrmin","precipavg","temprecmax","temprecmin","App","prefix","Style","Tabs","Tab","label","ReactDOM","render","document","getElementById"],"mappings":"mZAuqBeA,MAnqBf,YAA0C,IAAnBC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,QAE7B,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA+BN,oBAAS,GAAxC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEA,EAA8BR,mBAAS,6BAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAsCV,oBAAS,GAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAoCZ,oBAAS,GAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAAsCd,oBAAS,GAA/C,mBAAOe,GAAP,KAAoBC,GAApB,KAEA,GAAoChB,oBAAS,GAA7C,qBAAOiB,GAAP,MAAmBC,GAAnB,MACA,GAAoClB,oBAAS,GAA7C,qBAAOmB,GAAP,MAAmBC,GAAnB,MACA,GAAoCpB,oBAAS,GAA7C,qBAAOqB,GAAP,MAAmBC,GAAnB,MAEA,GAAgCtB,mBAAS,IAAzC,qBAAOuB,GAAP,MAAiBC,GAAjB,MACA,GAAuBxB,mBAAS,SAAhC,qBAAOyB,GAAP,MAAYC,GAAZ,MACA,GAAqB1B,mBAAS,KAA9B,qBAAO2B,GAAP,MAAWC,GAAX,MACA,GAAuB5B,mBAAS,KAAhC,qBAAO6B,GAAP,MAAYC,GAAZ,MAshBA,OAphBIC,qBAAU,WAGV7B,EAAYJ,GACZM,EAAaL,GACbe,GAAc,GACdE,IAAe,GACfJ,GAAe,KAGhB,CAACd,EAAOC,IA2gBT,qCAEA,eAACiC,EAAA,EAAD,CAAMC,SA3gBa,SAACC,GAKtB,GAJEA,EAAEC,iBACF3B,GAAW,GAGTP,GAAYE,EAAW,CAErB,IAAMiC,EAAcnC,EAASoC,OAAO,KAAKA,OAAOlC,IAElC,uCAAG,wCAAAmC,EAAA,kEAMmB,QAA/BC,sOAAYC,eANA,gBAObC,EAASF,GAPI,uCAWUG,MAAM,cAXhB,cAWVC,EAXU,iBAYQA,EAAYC,OAZpB,QAYVC,EAZU,OAadJ,EAASI,EAAS,OAbJ,yBAiBQH,MAAM,gDAAD,OAAiDf,GAAjD,uBAAmES,EAAnE,8BAAoGP,GAApG,qBAAqHJ,GAArH,mBAAoIgB,IAjBjJ,eAiBTK,EAjBS,iBAkBMA,EAASF,OAlBf,QAqBb,IAHIG,EAlBS,OAoBPC,EAAM,GACJC,EAAI,EAAGA,EAAIF,EAAM,UAAcG,OAAQD,IAC3CD,EAAIG,KAAK,CACPxB,IAAKoB,EAAM,UAAcE,GACzBG,SAAUL,EAAM,UAAcE,GAC9BI,QAASN,EAAM,eAAmBE,GAClCK,QAASP,EAAM,eAAmBE,KAIxCzB,GAAYwB,GAGZ1C,EADgB,CAAC,MAAS,CAACyC,KAE3BvC,GAAW,GAlCE,kDAsCbY,IAAc,GACdZ,GAAW,GAvCE,0DAAH,qDA2ChB+C,GACArD,EAAY,IACZE,EAAa,SAKbc,IAAc,GACdV,GAAW,IA+cb,UAEG,qBAAKgD,UAAU,WAAf,SACD,cAACC,EAAA,EAAD,CAAWC,GAAI,WAAYC,UAAa,YAAaC,QAAW/C,EAAYgD,YAAepD,EAASqD,WAAW,0BAA0BC,YAAe,WAAYC,KAAO,KAAKC,MAAOhE,EAAUiE,SA1brL,SAAChC,GAEPA,EAAEiC,OAAOF,MAAMG,MAAM,2CAMrBtD,GAAc,GACdF,GAAe,KANbE,GAAc,GACdJ,EAAW,kDACXE,GAAe,IAOrBV,EAAYgC,EAAEiC,OAAOF,YAibtB,qBAAKT,UAAU,WAAf,SACD,cAACC,EAAA,EAAD,CAAWC,GAAI,YAAaC,UAAa,aAAcC,QAAW7C,GAAa8C,YAAepD,EAASqD,WAAW,0BAA0BC,YAAe,YAAaC,KAAO,KAAKC,MAAO9D,EAAW+D,SA9azL,SAAChC,GAERA,EAAEiC,OAAOF,MAAMG,MAAM,8DAMrBpD,IAAe,GACfJ,GAAe,KANbI,IAAe,GACfN,EAAW,kDACXE,GAAe,IAOrBR,EAAa8B,EAAEiC,OAAOF,YAqaxB,qBAAKT,UAAU,WAAf,SACA,cAACa,EAAA,EAAD,CAAQV,UAAU,wBAAwBK,KAAO,KAAKC,MAAOtC,GAAKuC,SAlBhD,SAACI,GAEnB1C,GAAO0C,EAAMH,OAAOF,QAgBpB,SAjDS,CACb,CACEP,GAAI,IACJa,KAAM,SAER,CACEb,GAAI,IACJa,KAAM,SAEN,CACAb,GAAI,IACJa,KAAM,SAEN,CACAb,GAAI,KACJa,KAAM,UAEN,CACAb,GAAI,KACJa,KAAM,WA+BQC,KAAI,SAACC,EAAMxB,GAAP,OACR,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAKzC,qBAAKO,UAAU,WAAf,SACS,cAACa,EAAA,EAAD,CAAQV,UAAU,0BAA0BK,KAAO,KAAKC,MAAOpC,GAAMqC,SA9B3D,SAACI,GAEpBxC,GAAQwC,EAAMH,OAAOF,QA4BZ,SApEC,CACd,CACEP,GAAI,IACJa,KAAM,iBAER,CACEb,GAAI,IACJa,KAAM,oBA8DSC,KAAI,SAACC,EAAMxB,GAAP,OACT,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAKtC,qBAAKO,UAAU,WAAf,SACD,cAACa,EAAA,EAAD,CAAQV,UAAU,kBAAkBK,KAAO,KAAKC,MAAOxC,GAAMyC,SA1C5C,SAACI,GAEpB5C,GAAQ4C,EAAMH,OAAOF,QAwCnB,SAvaQ,CACd,CACEP,GAAI,QACJa,KAAM,wBAER,CACEb,GAAI,QACJa,KAAM,oCAER,CACEb,GAAI,QACJa,KAAM,8BAER,CACEb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,kCAEJ,CACFb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,sCAER,CACEb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,wCAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,sBAER,CACEb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,wCAER,CACEb,GAAI,QACJa,KAAM,wBAER,CACEb,GAAI,QACJa,KAAM,4BAER,CACEb,GAAI,QACJa,KAAM,uBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,8BAEJ,CACFb,GAAI,QACJa,KAAM,mBAER,CACEb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,sBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,gBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,sBAEJ,CACFb,GAAI,QACJa,KAAM,uBAEJ,CACFb,GAAI,QACJa,KAAM,oBAEJ,CACFb,GAAI,QACJa,KAAM,yBAEJ,CACFb,GAAI,QACJa,KAAM,wBAEF,CACJb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,qBAEF,CACJb,GAAI,QACJa,KAAM,wBAEF,CACJb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,oCAEN,CACAb,GAAI,QACJa,KAAM,uBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,sCAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,sBAEJ,CACFb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,mBAEJ,CACFb,GAAI,QACJa,KAAM,uBAEN,CACAb,GAAI,QACJa,KAAM,oBAEJ,CACFb,GAAI,QACJa,KAAM,wBAEJ,CACFb,GAAI,QACJa,KAAM,yBAER,CACEb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,2BAEJ,CACFb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,yBAEJ,CACFb,GAAI,QACJa,KAAM,uBAiFSC,KAAI,SAACC,EAAMxB,GAAP,OACT,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAKzC,qBAAKO,UAAU,cAAf,SACE,cAACmB,EAAA,EAAD,CAAQC,KAAK,SAASC,SAAYlE,EAAlC,sCAKLM,IACC,cAAC,IAAD,CACI6D,gBAAgB,qBAChBC,SAAU,+EACVC,QAAS,IACTC,QAncR,WACE/D,IAAc,IAmcRgE,MAAM,uBAGX/D,IACC,cAAC,IAAD,CACI2D,gBAAgB,qBAChBC,SAAU,4DACVC,QAAS,IACTC,QAzcR,WACE7D,IAAc,IAycR8D,MAAM,uBAIX7D,IACC,cAAC,IAAD,CACIyD,gBAAgB,qBAChBC,SAAU,6DACVC,QAAS,IACTC,QAhdR,WACE3D,IAAc,IAgdR4D,MAAM,uBAIR,cAACC,EAAA,EAAD,CAASC,OAAU7E,EAAW8E,YAAY,2BAA2BC,aAAa,IAKlFjF,EAAWkF,OACR,qBAAK/B,UAAY,eAAjB,SACMnD,EAAWkF,OAEhB,cAACC,EAAA,EAAD,CAAWC,KAAMpF,EAAWkF,MAAOG,QAzhB7B,CACd,CACEC,IAAK,MACLC,OAAQ,eAEV,CACED,IAAK,WACLC,OAAQ,YAER,CACAD,IAAK,UACLC,OAAQ,mBAER,CACAD,IAAK,UACLC,OAAQ,oBA0gBF,SACK,cAAGH,KAAH,IAASC,EAAT,EAASA,QAASG,EAAlB,EAAkBA,eAAlB,OAED,cAACC,EAAA,EAAD,CAAgBZ,MAAM,2BAAtB,SACE,eAACa,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGP,EAAQlB,KAAI,SAACoB,GAAD,OACX,cAACM,EAAA,EAAD,2BAAiBL,EAAe,CAAED,YAAlC,aACGA,EAAOA,iBAKhB,cAACO,EAAA,EAAD,UACG5E,GAASiD,KAAI,SAAC4B,EAAKC,GACxB,OAEM,eAACJ,EAAA,EAAD,WACE,cAACK,EAAA,EAAD,UAAYF,EAAIzE,MAChB,cAAC2E,EAAA,EAAD,UAAYF,EAAIhD,WAChB,cAACkD,EAAA,EAAD,UAAYF,EAAI/C,UAChB,cAACiD,EAAA,EAAD,UAAYF,EAAI9C,YAJH+C,sBCqCtBE,MAjrBf,YAA4C,IAAnBzG,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,QAE/B,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA+BN,oBAAS,GAAxC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEA,EAA8BR,mBAAS,6BAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAsCV,oBAAS,GAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAoCZ,oBAAS,GAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAAsCd,oBAAS,GAA/C,mBAAOe,GAAP,KAAoBC,GAApB,KAEA,GAAoChB,oBAAS,GAA7C,qBAAOiB,GAAP,MAAmBC,GAAnB,MACA,GAAoClB,oBAAS,GAA7C,qBAAOmB,GAAP,MAAmBC,GAAnB,MACA,GAAoCpB,oBAAS,GAA7C,qBAAOqB,GAAP,MAAmBC,GAAnB,MAEA,GAAgCtB,mBAAS,IAAzC,qBAAOuB,GAAP,MAAiBC,GAAjB,MACA,GAAuBxB,mBAAS,SAAhC,qBAAOyB,GAAP,MAAYC,GAAZ,MACA,GAAqB1B,mBAAS,KAA9B,qBAAO2B,GAAP,MAAWC,GAAX,MACA,GAAuB5B,mBAAS,KAAhC,qBAAO6B,GAAP,MAAYC,GAAZ,MA+hBA,OA7hBIC,qBAAU,WAGV7B,EAAYJ,GACZM,EAAaL,GACbe,GAAc,GACdE,IAAe,GACfJ,GAAe,KAGhB,CAACd,EAAOC,IAohBT,qCAEA,eAACiC,EAAA,EAAD,CAAMC,SAnhBa,SAACC,GAKtB,GAJEA,EAAEC,iBACF3B,GAAW,GAGTP,GAAYE,EAAW,CAErB,IAAMiC,EAAcnC,EAASoC,OAAO,KAAKA,OAAOlC,IAElC,uCAAG,wCAAAmC,EAAA,kEAMmB,QAA/BC,sOAAYC,eANA,gBAObC,EAASF,GAPI,uCAWUG,MAAM,cAXhB,cAWVC,EAXU,iBAYQA,EAAYC,OAZpB,QAYVC,EAZU,OAadJ,EAASI,EAAS,OAbJ,yBAiBQH,MAAM,iDAAD,OAAkDf,GAAlD,uBAAoES,EAApE,8BAAqGP,GAArG,qBAAsHJ,GAAtH,mBAAqIgB,IAjBlJ,eAiBTK,EAjBS,iBAkBMA,EAASF,OAlBf,QAqBb,IAHIG,EAlBS,OAoBPC,EAAM,GACJC,EAAI,EAAGA,EAAIF,EAAM,UAAcG,OAAQD,IAC3CD,EAAIG,KAAK,CACPxB,IAAKoB,EAAM,UAAcE,GACzBuD,KAAMzD,EAAM,eAAmBE,GAAGwD,MAAM,KAAK,GAC7CC,KAAM3D,EAAM,eAAmBE,GAAGwD,MAAM,KAAK,GAC7CrD,SAAUL,EAAM,aAAiBE,GACjC0D,KAAM5D,EAAM,YAAgBE,GAC5B2D,GAAI7D,EAAM,cAAkBE,GAC5B4D,IAAK9D,EAAM,WAAeE,GAC1B6D,QAAS/D,EAAM,UAAcE,KAGnCzB,GAAYwB,GAGZ1C,EADgB,CAAC,MAAS,CAACyC,KAE3BvC,GAAW,GArCE,kDAyCbY,IAAc,GACdZ,GAAW,GA1CE,0DAAH,qDA8ChB+C,GACArD,EAAY,IACZE,EAAa,SAKbc,IAAc,GACdV,GAAW,IAodb,UAEG,qBAAKgD,UAAU,WAAf,SACD,cAACC,EAAA,EAAD,CAAWC,GAAI,WAAYC,UAAa,YAAaC,QAAW/C,EAAYgD,YAAepD,EAASqD,WAAW,0BAA0BC,YAAe,WAAYC,KAAO,KAAKC,MAAOhE,EAAUiE,SA9arL,SAAChC,GAEPA,EAAEiC,OAAOF,MAAMG,MAAM,2CAMrBtD,GAAc,GACdF,GAAe,KANbE,GAAc,GACdJ,EAAW,kDACXE,GAAe,IAOrBV,EAAYgC,EAAEiC,OAAOF,YAqatB,qBAAKT,UAAU,WAAf,SACD,cAACC,EAAA,EAAD,CAAWC,GAAI,YAAaC,UAAa,aAAcC,QAAW7C,GAAa8C,YAAepD,EAASqD,WAAW,0BAA0BC,YAAe,YAAaC,KAAO,KAAKC,MAAO9D,EAAW+D,SAlazL,SAAChC,GAERA,EAAEiC,OAAOF,MAAMG,MAAM,8DAMrBpD,IAAe,GACfJ,GAAe,KANbI,IAAe,GACfN,EAAW,kDACXE,GAAe,IAOrBR,EAAa8B,EAAEiC,OAAOF,YAyZxB,qBAAKT,UAAU,WAAf,SACM,cAACa,EAAA,EAAD,CAAQV,UAAU,wBAAwBK,KAAO,KAAKC,MAAOtC,GAAKuC,SAlBtD,SAACI,GAEnB1C,GAAO0C,EAAMH,OAAOF,QAgBd,SArCG,CACb,CACEP,GAAI,IACJa,KAAM,SAEN,CACAb,GAAI,KACJa,KAAM,WA+BQC,KAAI,SAACC,EAAMxB,GAAP,OACR,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAKzC,qBAAKO,UAAU,WAAf,SACS,cAACa,EAAA,EAAD,CAAQV,UAAU,0BAA0BK,KAAO,KAAKC,MAAOpC,GAAMqC,SA9B3D,SAACI,GAEpBxC,GAAQwC,EAAMH,OAAOF,QA4BZ,SAxDC,CACd,CACEP,GAAI,IACJa,KAAM,iBAER,CACEb,GAAI,IACJa,KAAM,oBAkDSC,KAAI,SAACC,EAAMxB,GAAP,OACT,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAKvC,qBAAKO,UAAU,WAAf,SACG,cAACa,EAAA,EAAD,CAAQV,UAAU,kBAAkBK,KAAO,KAAKC,MAAOxC,GAAMyC,SA1C/C,SAACI,GAEpB5C,GAAQ4C,EAAMH,OAAOF,QAwChB,SA3ZK,CACd,CACEP,GAAI,QACJa,KAAM,wBAER,CACEb,GAAI,QACJa,KAAM,oCAER,CACEb,GAAI,QACJa,KAAM,8BAER,CACEb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,kCAEJ,CACFb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,sCAER,CACEb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,wCAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,sBAER,CACEb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,wCAER,CACEb,GAAI,QACJa,KAAM,wBAER,CACEb,GAAI,QACJa,KAAM,4BAER,CACEb,GAAI,QACJa,KAAM,uBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,8BAEJ,CACFb,GAAI,QACJa,KAAM,mBAER,CACEb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,sBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,gBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,sBAEJ,CACFb,GAAI,QACJa,KAAM,uBAEJ,CACFb,GAAI,QACJa,KAAM,oBAEJ,CACFb,GAAI,QACJa,KAAM,yBAEJ,CACFb,GAAI,QACJa,KAAM,wBAEF,CACJb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,qBAEF,CACJb,GAAI,QACJa,KAAM,wBAEF,CACJb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,oCAEN,CACAb,GAAI,QACJa,KAAM,uBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,sCAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,sBAEJ,CACFb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,mBAEJ,CACFb,GAAI,QACJa,KAAM,uBAEN,CACAb,GAAI,QACJa,KAAM,oBAEJ,CACFb,GAAI,QACJa,KAAM,wBAEJ,CACFb,GAAI,QACJa,KAAM,yBAER,CACEb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,2BAEJ,CACFb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,yBAEJ,CACFb,GAAI,QACJa,KAAM,uBAqESC,KAAI,SAACC,EAAMxB,GAAP,OACT,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAMzC,qBAAKO,UAAU,cAAf,SACE,cAACmB,EAAA,EAAD,CAAQC,KAAK,SAASC,SAAYlE,EAAlC,uCAKLM,IACC,cAAC,IAAD,CACI6D,gBAAgB,qBAChBC,SAAU,+EACVC,QAAS,IACTC,QAxbR,WACE/D,IAAc,IAwbRgE,MAAM,uBAGX/D,IACC,cAAC,IAAD,CACI2D,gBAAgB,qBAChBC,SAAU,4DACVC,QAAS,IACTC,QA9bR,WACE7D,IAAc,IA8bR8D,MAAM,uBAIX7D,IACC,cAAC,IAAD,CACIyD,gBAAgB,qBAChBC,SAAU,6DACVC,QAAS,IACTC,QArcR,WACE3D,IAAc,IAqcR4D,MAAM,uBAIR,cAACC,EAAA,EAAD,CAASC,OAAU7E,EAAW8E,YAAY,2BAA2BC,aAAa,IAKlFjF,EAAWkF,OACR,qBAAK/B,UAAY,eAAjB,SACMnD,EAAWkF,OAEhB,cAACC,EAAA,EAAD,CAAWC,KAAMpF,EAAWkF,MAAOG,QA/hB7B,CACd,CACEC,IAAK,MACLC,OAAQ,eAER,CACAD,IAAK,OACLC,OAAQ,cAEN,CACFD,IAAK,OACLC,OAAQ,cAEV,CACED,IAAK,WACLC,OAAQ,YAER,CACAD,IAAK,OACLC,OAAQ,eAER,CACAD,IAAK,KACLC,OAAQ,kBAER,CACAD,IAAK,MACLC,OAAQ,cAEN,CACFD,IAAK,UACLC,OAAQ,eAggBF,SACK,cAAGH,KAAH,IAASC,EAAT,EAASA,QAASG,EAAlB,EAAkBA,eAAlB,OAED,cAACC,EAAA,EAAD,CAAgBZ,MAAM,0BAAtB,SACE,eAACa,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGP,EAAQlB,KAAI,SAACoB,GAAD,OACX,cAACM,EAAA,EAAD,2BAAiBL,EAAe,CAAED,YAAlC,aACGA,EAAOA,iBAKhB,cAACO,EAAA,EAAD,UACG5E,GAASiD,KAAI,SAAC4B,EAAKC,GACxB,OAEM,eAACJ,EAAA,EAAD,WACE,cAACK,EAAA,EAAD,UAAYF,EAAIzE,MAChB,cAAC2E,EAAA,EAAD,UAAYF,EAAII,OAChB,cAACF,EAAA,EAAD,UAAYF,EAAIM,OAChB,cAACJ,EAAA,EAAD,UAAYF,EAAIhD,WAChB,cAACkD,EAAA,EAAD,UAAYF,EAAIO,OAChB,cAACL,EAAA,EAAD,UAAYF,EAAIQ,KAChB,cAACN,EAAA,EAAD,UAAYF,EAAIS,MAChB,cAACP,EAAA,EAAD,UAAYF,EAAIU,YARHT,sBCOtBU,MA7pBf,YAA8C,IAAnBjH,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,QAEjC,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA+BN,oBAAS,GAAxC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEA,EAA8BR,mBAAS,6BAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAsCV,oBAAS,GAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAoCZ,oBAAS,GAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAAsCd,oBAAS,GAA/C,mBAAOe,GAAP,KAAoBC,GAApB,KAEA,GAAoChB,oBAAS,GAA7C,qBAAOiB,GAAP,MAAmBC,GAAnB,MACA,GAAoClB,oBAAS,GAA7C,qBAAOmB,GAAP,MAAmBC,GAAnB,MACA,GAAoCpB,oBAAS,GAA7C,qBAAOqB,GAAP,MAAmBC,GAAnB,MAEA,GAAuBtB,mBAAS,SAAhC,qBAAOyB,GAAP,MAAYC,GAAZ,MACA,GAAqB1B,mBAAS,KAA9B,qBAAO2B,GAAP,MAAWC,GAAX,MACA,GAAuB5B,mBAAS,KAAhC,qBAAO6B,GAAP,MAAYC,GAAZ,MA6gBA,OA3gBIC,qBAAU,WAGV7B,EAAYJ,GACZM,EAAaL,GACbe,GAAc,GACdE,IAAe,GACfJ,GAAe,KAGhB,CAACd,EAAOC,IAkgBT,qCAEA,eAACiC,EAAA,EAAD,CAAMC,SAjgBa,SAACC,IACpBA,EAAEC,iBACF3B,GAAW,GAGTP,GAAYE,IAEI,uCAAG,oCAAAmC,EAAA,kEAMmB,QAA/BC,sOAAYC,eANA,gBAObC,EAASF,GAPI,uCAWUG,MAAM,cAXhB,cAWVC,EAXU,iBAYQA,EAAYC,OAZpB,QAYVC,EAZU,OAadJ,EAASI,EAAS,OAbJ,yBAiBQH,MAAM,sCAAD,OAAuCzC,EAAvC,YAAmDE,EAAnD,8BAAkFwB,GAAlF,0BAAuGE,GAAvG,qBAAwHJ,GAAxH,mBAAuIgB,IAjBpJ,eAiBTK,EAjBS,iBAkBMA,EAASF,OAlBf,QAkBTG,EAlBS,OAoBbzC,EAAc,eAAIyC,IAElBvC,GAAW,GAtBE,kDA0BbY,IAAc,GACdZ,GAAW,GA3BE,0DAAH,oDA+BhB+C,GACArD,EAAY,IACZE,EAAa,MAKbc,IAAc,GACdV,GAAW,KAmdb,UAEG,qBAAKgD,UAAU,WAAf,SACD,cAACC,EAAA,EAAD,CAAWC,GAAI,WAAYC,UAAa,YAAaC,QAAW/C,EAAYgD,YAAepD,EAASqD,WAAW,0BAA0BC,YAAe,WAAYC,KAAO,KAAKC,MAAOhE,EAAUiE,SA1brL,SAAChC,GAEPA,EAAEiC,OAAOF,MAAMG,MAAM,2CAMrBtD,GAAc,GACdF,GAAe,KANbE,GAAc,GACdJ,EAAW,kDACXE,GAAe,IAOrBV,EAAYgC,EAAEiC,OAAOF,YAibtB,qBAAKT,UAAU,WAAf,SACD,cAACC,EAAA,EAAD,CAAWC,GAAI,YAAaC,UAAa,aAAcC,QAAW7C,GAAa8C,YAAepD,EAASqD,WAAW,0BAA0BC,YAAe,YAAaC,KAAO,KAAKC,MAAO9D,EAAW+D,SA9azL,SAAChC,GAERA,EAAEiC,OAAOF,MAAMG,MAAM,8DAMrBpD,IAAe,GACfJ,GAAe,KANbI,IAAe,GACfN,EAAW,kDACXE,GAAe,IAOrBR,EAAa8B,EAAEiC,OAAOF,YAqaxB,qBAAKT,UAAU,WAAf,SACQ,cAACa,EAAA,EAAD,CAAQV,UAAU,wBAAwBK,KAAO,KAAKC,MAAOtC,GAAKuC,SAlBxD,SAACI,GAEnB1C,GAAO0C,EAAMH,OAAOF,QAgBZ,SAjDC,CACb,CACEP,GAAI,IACJa,KAAM,SAER,CACEb,GAAI,IACJa,KAAM,SAEN,CACAb,GAAI,IACJa,KAAM,SAEN,CACAb,GAAI,KACJa,KAAM,UAEN,CACAb,GAAI,KACJa,KAAM,WA+BQC,KAAI,SAACC,EAAMxB,GAAP,OACR,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAKzC,qBAAKO,UAAU,WAAf,SACE,cAACa,EAAA,EAAD,CAAQV,UAAU,0BAA0BK,KAAO,KAAKC,MAAOpC,GAAMqC,SA9BpD,SAACI,GAEpBxC,GAAQwC,EAAMH,OAAOF,QA4BnB,SApEQ,CACd,CACEP,GAAI,IACJa,KAAM,iBAER,CACEb,GAAI,IACJa,KAAM,oBA8DSC,KAAI,SAACC,EAAMxB,GAAP,OACT,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAKvC,qBAAKO,UAAU,WAAf,SACA,cAACa,EAAA,EAAD,CAAQV,UAAU,kBAAkBK,KAAO,KAAKC,MAAOxC,GAAMyC,SA1C5C,SAACI,GAEpB5C,GAAQ4C,EAAMH,OAAOF,QAwCnB,SAvaQ,CACd,CACEP,GAAI,QACJa,KAAM,wBAER,CACEb,GAAI,QACJa,KAAM,oCAER,CACEb,GAAI,QACJa,KAAM,8BAER,CACEb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,kCAEJ,CACFb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,sCAER,CACEb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,wCAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,sBAER,CACEb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,wCAER,CACEb,GAAI,QACJa,KAAM,wBAER,CACEb,GAAI,QACJa,KAAM,4BAER,CACEb,GAAI,QACJa,KAAM,uBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,8BAEJ,CACFb,GAAI,QACJa,KAAM,mBAER,CACEb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,sBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,gBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,sBAEJ,CACFb,GAAI,QACJa,KAAM,uBAEJ,CACFb,GAAI,QACJa,KAAM,oBAEJ,CACFb,GAAI,QACJa,KAAM,yBAEJ,CACFb,GAAI,QACJa,KAAM,wBAEF,CACJb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,qBAEF,CACJb,GAAI,QACJa,KAAM,wBAEF,CACJb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,oCAEN,CACAb,GAAI,QACJa,KAAM,uBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,sCAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,sBAEJ,CACFb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,mBAEJ,CACFb,GAAI,QACJa,KAAM,uBAEN,CACAb,GAAI,QACJa,KAAM,oBAEJ,CACFb,GAAI,QACJa,KAAM,wBAEJ,CACFb,GAAI,QACJa,KAAM,yBAER,CACEb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,2BAEJ,CACFb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,yBAEJ,CACFb,GAAI,QACJa,KAAM,uBAiFSC,KAAI,SAACC,EAAMxB,GAAP,OACT,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAMzC,qBAAKO,UAAU,cAAf,SACE,cAACmB,EAAA,EAAD,CAAQC,KAAK,SAASC,SAAYlE,EAAlC,yCAKLM,IACC,cAAC,IAAD,CACI6D,gBAAgB,qBAChBC,SAAU,+EACVC,QAAS,IACTC,QApcR,WACE/D,IAAc,IAocRgE,MAAM,uBAGX/D,IACC,cAAC,IAAD,CACI2D,gBAAgB,qBAChBC,SAAU,4DACVC,QAAS,IACTC,QA1cR,WACE7D,IAAc,IA0cR8D,MAAM,uBAIX7D,IACC,cAAC,IAAD,CACIyD,gBAAgB,qBAChBC,SAAU,6DACVC,QAAS,IACTC,QAjdR,WACE3D,IAAc,IAidR4D,MAAM,uBAIR,cAACC,EAAA,EAAD,CAASC,OAAU7E,EAAW8E,YAAY,2BAA2BC,aAAa,IAKjFjF,EAAW2G,WACT,qBAAKxD,UAAY,eAAjB,SACMnD,EAAW2G,WAEhB,cAACxB,EAAA,EAAD,CAAWC,KAAMpF,EAAW2G,UAAWtB,QA9hBjC,CACd,CACEC,IAAK,MACLC,OAAQ,eAEV,CACED,IAAK,WACLC,OAAQ,YAER,CACAD,IAAK,OACLC,OAAQ,eAER,CACAD,IAAK,OACLC,OAAQ,cAER,CACAD,IAAK,KACLC,OAAQ,oBA2gBF,SACK,cAAGH,KAAH,IAASC,EAAT,EAASA,QAASG,EAAlB,EAAkBA,eAAlB,OAED,cAACC,EAAA,EAAD,CAAgBZ,MAAM,4BAAtB,SACE,eAACa,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGP,EAAQlB,KAAI,SAACoB,GAAD,OACX,cAACM,EAAA,EAAD,2BAAiBL,EAAe,CAAED,YAAlC,aACGA,EAAOA,iBAKhB,cAACO,EAAA,EAAD,UACG9F,EAAW2G,UAAUxC,KAAI,SAAC4B,EAAKC,GACpC,OAEM,eAACJ,EAAA,EAAD,WAEI,cAACK,EAAA,EAAD,UAAYF,EAAIa,MAChB,cAACX,EAAA,EAAD,UAAYF,EAAIc,eAChB,cAACZ,EAAA,EAAD,UAAYF,EAAIO,OAChB,cAACL,EAAA,EAAD,UAAYF,EAAIe,OAChB,cAACb,EAAA,EAAD,UAAYF,EAAIgB,kBANLf,sBCctBgB,MAjpBf,YAA0C,IAAnBvH,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,QAE7B,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA+BN,oBAAS,GAAxC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEA,EAA8BR,mBAAS,6BAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAsCV,oBAAS,GAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAoCZ,oBAAS,GAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAAsCd,oBAAS,GAA/C,mBAAOe,GAAP,KAAoBC,GAApB,KAEA,GAAoChB,oBAAS,GAA7C,qBAAOiB,GAAP,MAAmBC,GAAnB,MACA,GAAoClB,oBAAS,GAA7C,qBAAOmB,GAAP,MAAmBC,GAAnB,MACA,GAAoCpB,oBAAS,GAA7C,qBAAOqB,GAAP,MAAmBC,GAAnB,MAEA,GAAgCtB,mBAAS,IAAzC,qBAAOuB,GAAP,MAAiBC,GAAjB,MACA,GAAuBxB,mBAAS,SAAhC,qBAAOyB,GAAP,MAAYC,GAAZ,MACA,GAAuB1B,mBAAS,KAAhC,qBAAO6B,GAAP,MAAYC,GAAZ,MAygBA,OAvgBEC,qBAAU,WAGR7B,EAAYJ,GACZM,EAAaL,GACbe,GAAc,GACdE,IAAe,GACfJ,GAAe,KAGhB,CAACd,EAAOC,IA8fT,qCAEA,eAACiC,EAAA,EAAD,CAAMC,SA7fa,SAACC,GAItB,GAHEA,EAAEC,iBACF3B,GAAW,GAETP,GAAYE,EAAW,CAErB,IAAMiC,EAAcnC,EAASoC,OAAO,KAAKA,OAAOlC,IAElC,uCAAG,wCAAAmC,EAAA,kEAMmB,QAA/BC,sOAAYC,eANA,gBAObC,EAASF,GAPI,uCAWUG,MAAM,cAXhB,cAWVC,EAXU,iBAYQA,EAAYC,OAZpB,QAYVC,EAZU,OAadJ,EAASI,EAAS,OAbJ,yBAiBQH,MAAM,kFAAD,OAAmFN,EAAnF,8BAAoHP,GAApH,qBAAqIJ,GAArI,mBAAoJgB,IAjBjK,eAiBTK,EAjBS,iBAkBMA,EAASF,OAlBf,QAqBb,IAHIG,EAlBS,OAoBPC,EAAM,GACJC,EAAI,EAAGA,EAAIF,EAAM,UAAcG,OAAQD,IAC3CD,EAAIG,KAAK,CACPxB,IAAKoB,EAAM,UAAcE,GACzBuD,KAAMzD,EAAM,eAAmBE,GAAGwD,MAAM,KAAK,GAC7CC,KAAM3D,EAAM,eAAmBE,GAAGwD,MAAM,KAAK,GAC7Ca,MAAOvE,EAAM,gBAAoBE,GACjCsE,QAASxE,EAAM,kBAAsBE,GACrCI,QAASN,EAAM,eAAmBE,GAClCK,QAASP,EAAM,eAAmBE,KAGxCzB,GAAYwB,GAGZ1C,EADgB,CAAC,MAAS,CAACyC,KAE3BvC,GAAW,GApCE,kDAwCbY,IAAc,GACdZ,GAAW,GAzCE,0DAAH,qDA6ChB+C,GACArD,EAAY,IACZE,EAAa,SAKbc,IAAc,GACdV,GAAW,IAgcb,UAEG,qBAAKgD,UAAU,WAAf,SACD,cAACC,EAAA,EAAD,CAAWC,GAAI,WAAYC,UAAa,YAAaC,QAAW/C,EAAYgD,YAAepD,EAASqD,WAAW,0BAA0BC,YAAe,WAAYC,KAAO,KAAKC,MAAOhE,EAAUiE,SA9ZrL,SAAChC,GAEPA,EAAEiC,OAAOF,MAAMG,MAAM,2CAMrBtD,GAAc,GACdF,GAAe,KANbE,GAAc,GACdJ,EAAW,kDACXE,GAAe,IAOrBV,EAAYgC,EAAEiC,OAAOF,YAqZtB,qBAAKT,UAAU,WAAf,SACD,cAACC,EAAA,EAAD,CAAWC,GAAI,YAAaC,UAAa,aAAcC,QAAW7C,GAAa8C,YAAepD,EAASqD,WAAW,0BAA0BC,YAAe,YAAaC,KAAO,KAAKC,MAAO9D,EAAW+D,SAnZzL,SAAChC,GAERA,EAAEiC,OAAOF,MAAMG,MAAM,8DAMrBpD,IAAe,GACfJ,GAAe,KANbI,IAAe,GACfN,EAAW,kDACXE,GAAe,IAOrBR,EAAa8B,EAAEiC,OAAOF,YA0YxB,qBAAKT,UAAU,WAAf,SACC,cAACa,EAAA,EAAD,CAAQV,UAAU,0BAA0BK,KAAO,KAAKC,MAAOpC,GAAMqC,SAlBnD,SAACI,GACpBxC,GAAQwC,EAAMH,OAAOF,QAiBpB,SAjCS,CACd,CACEP,GAAI,IACJa,KAAM,iBAER,CACEb,GAAI,IACJa,KAAM,oBA2BSC,KAAI,SAACC,EAAMxB,GAAP,OACT,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAKzC,qBAAKO,UAAU,WAAf,SACE,cAACa,EAAA,EAAD,CAAQV,UAAU,kBAAkBK,KAAO,KAAKC,MAAOxC,GAAMyC,SA7B5C,SAACI,GACpB5C,GAAQ4C,EAAMH,OAAOF,QA4BnB,SApYQ,CACd,CACEP,GAAI,QACJa,KAAM,wBAER,CACEb,GAAI,QACJa,KAAM,oCAER,CACEb,GAAI,QACJa,KAAM,8BAER,CACEb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,kCAEJ,CACFb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,sCAER,CACEb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,wCAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,sBAER,CACEb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,wCAER,CACEb,GAAI,QACJa,KAAM,wBAER,CACEb,GAAI,QACJa,KAAM,4BAER,CACEb,GAAI,QACJa,KAAM,uBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,8BAEJ,CACFb,GAAI,QACJa,KAAM,mBAER,CACEb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,sBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,gBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,sBAEJ,CACFb,GAAI,QACJa,KAAM,uBAEJ,CACFb,GAAI,QACJa,KAAM,oBAEJ,CACFb,GAAI,QACJa,KAAM,yBAEJ,CACFb,GAAI,QACJa,KAAM,wBAEF,CACJb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,qBAEF,CACJb,GAAI,QACJa,KAAM,wBAEF,CACJb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,oCAEN,CACAb,GAAI,QACJa,KAAM,uBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,sCAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,sBAEJ,CACFb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,mBAEJ,CACFb,GAAI,QACJa,KAAM,uBAEN,CACAb,GAAI,QACJa,KAAM,oBAEJ,CACFb,GAAI,QACJa,KAAM,wBAEJ,CACFb,GAAI,QACJa,KAAM,yBAER,CACEb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,2BAEJ,CACFb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,yBAEJ,CACFb,GAAI,QACJa,KAAM,uBA8CSC,KAAI,SAACC,EAAMxB,GAAP,OACT,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAMzC,qBAAKO,UAAU,cAAf,SACE,cAACmB,EAAA,EAAD,CAAQC,KAAK,SAASC,SAAYlE,EAAlC,qCAKLM,IACC,cAAC,IAAD,CACI6D,gBAAgB,qBAChBC,SAAU,+EACVC,QAAS,IACTC,QAjaR,WACE/D,IAAc,IAiaRgE,MAAM,uBAGX/D,IACC,cAAC,IAAD,CACI2D,gBAAgB,qBAChBC,SAAU,4DACVC,QAAS,IACTC,QAvaR,WACE7D,IAAc,IAuaR8D,MAAM,uBAIX7D,IACC,cAAC,IAAD,CACIyD,gBAAgB,qBAChBC,SAAU,6DACVC,QAAS,IACTC,QA9aR,WACE3D,IAAc,IA8aR4D,MAAM,uBAIR,cAACC,EAAA,EAAD,CAASC,OAAU7E,EAAW8E,YAAY,2BAA2BC,aAAa,IAKlFjF,EAAWkF,OACR,qBAAK/B,UAAY,eAAjB,SACMnD,EAAWkF,OAEhB,cAACC,EAAA,EAAD,CAAWC,KAAMpF,EAAWkF,MAAOG,QAngB7B,CACd,CACEC,IAAK,MACLC,OAAQ,eAEV,CACED,IAAK,OACLC,OAAQ,cAER,CACAD,IAAK,OACLC,OAAQ,cAER,CACAD,IAAK,QACLC,OAAQ,eAER,CACAD,IAAK,UACLC,OAAQ,iBAER,CACAD,IAAK,UACLC,OAAQ,mBAEN,CACFD,IAAK,UACLC,OAAQ,oBAweF,SACK,cAAGH,KAAH,IAASC,EAAT,EAASA,QAASG,EAAlB,EAAkBA,eAAlB,OAED,cAACC,EAAA,EAAD,CAAgBZ,MAAM,wBAAtB,SACE,eAACa,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGP,EAAQlB,KAAI,SAACoB,GAAD,OACX,cAACM,EAAA,EAAD,2BAAiBL,EAAe,CAAED,YAAlC,aACGA,EAAOA,iBAKhB,cAACO,EAAA,EAAD,UACG5E,GAASiD,KAAI,SAAC4B,EAAKC,GACxB,OAEM,eAACJ,EAAA,EAAD,WACE,cAACK,EAAA,EAAD,UAAYF,EAAIzE,MAChB,cAAC2E,EAAA,EAAD,UAAYF,EAAII,OAChB,cAACF,EAAA,EAAD,UAAYF,EAAIM,OAChB,cAACJ,EAAA,EAAD,UAAYF,EAAIkB,QAChB,cAAChB,EAAA,EAAD,UAAYF,EAAImB,UAChB,cAACjB,EAAA,EAAD,UAAYF,EAAI/C,UAChB,cAACiD,EAAA,EAAD,UAAYF,EAAI9C,YAPH+C,sBCoCtBmB,MA3pBf,YAA2C,IAAnB1H,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,QAE9B,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA+BN,oBAAS,GAAxC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEA,EAA8BR,mBAAS,6BAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAsCV,oBAAS,GAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAoCZ,oBAAS,GAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAAsCd,oBAAS,GAA/C,mBAAOe,GAAP,KAAoBC,GAApB,KAEA,GAAoChB,oBAAS,GAA7C,qBAAOiB,GAAP,MAAmBC,GAAnB,MACA,GAAoClB,oBAAS,GAA7C,qBAAOmB,GAAP,MAAmBC,GAAnB,MACA,GAAoCpB,oBAAS,GAA7C,qBAAOqB,GAAP,MAAmBC,GAAnB,MAEA,GAAgCtB,mBAAS,IAAzC,qBAAOuB,GAAP,MAAiBC,GAAjB,MACA,GAAuBxB,mBAAS,SAAhC,qBAAOyB,GAAP,MAAYC,GAAZ,MACA,GAAuB1B,mBAAS,KAAhC,qBAAO6B,GAAP,MAAYC,GAAZ,MAihBA,OA/gBIC,qBAAU,WAGV7B,EAAYJ,GACZM,EAAaL,GACbe,GAAc,GACdE,IAAe,GACfJ,GAAe,KAGhB,CAACd,EAAOC,IAsgBT,qCAEA,eAACiC,EAAA,EAAD,CAAMC,SArgBa,SAACC,GAKtB,GAJEA,EAAEC,iBACF3B,GAAW,GAGTP,GAAYE,EAAW,CAErB,IAAMiC,EAAcnC,EAASoC,OAAO,KAAKA,OAAOlC,IAElC,uCAAG,wCAAAmC,EAAA,kEAMmB,QAA/BC,sOAAYC,eANA,gBAObC,EAASF,GAPI,uCAWUG,MAAM,cAXhB,cAWVC,EAXU,iBAYQA,EAAYC,OAZpB,QAYVC,EAZU,OAadJ,EAASI,EAAS,OAbJ,yBAiBQH,MAAM,2EAAD,OAA4EN,EAA5E,8BAA6GP,GAA7G,qBAA8HJ,GAA9H,mBAA6IgB,IAjB1J,eAiBTK,EAjBS,iBAkBMA,EAASF,OAlBf,QAqBb,IAHIG,EAlBS,OAoBPC,EAAM,GACJC,EAAI,EAAGA,EAAIF,EAAM,UAAcG,OAAQD,IAC3CD,EAAIG,KAAK,CACPxB,IAAKoB,EAAM,UAAcE,GACzBuD,KAAMzD,EAAM,eAAmBE,GAAGwD,MAAM,KAAK,GAC7CC,KAAM3D,EAAM,eAAmBE,GAAGwD,MAAM,KAAK,GAC7CgB,GAAI1E,EAAM,aAAiBE,GAC3B0D,KAAM5D,EAAM,YAAgBE,GAC5ByE,WAAY3E,EAAM,sBAA0BE,GAC5C2D,GAAI7D,EAAM,cAAkBE,GAC5B0E,QAAS5E,EAAM,qBAAyBE,KAG9CzB,GAAYwB,GAGZ1C,EADgB,CAAC,MAAS,CAACyC,KAE3BvC,GAAW,GArCE,kDAyCbY,IAAc,GACdZ,GAAW,GA1CE,0DAAH,qDA8ChB+C,GACArD,EAAY,IACZE,EAAa,SAKbc,IAAc,GACdV,GAAW,IAscb,UAEG,qBAAKgD,UAAU,WAAf,SACD,cAACC,EAAA,EAAD,CAAWC,GAAI,WAAYC,UAAa,YAAaC,QAAW/C,EAAYgD,YAAepD,EAASqD,WAAW,0BAA0BC,YAAe,WAAYC,KAAO,KAAKC,MAAOhE,EAAUiE,SAharL,SAAChC,GAEPA,EAAEiC,OAAOF,MAAMG,MAAM,2CAMrBtD,GAAc,GACdF,GAAe,KANbE,GAAc,GACdJ,EAAW,kDACXE,GAAe,IAOrBV,EAAYgC,EAAEiC,OAAOF,YAuZtB,qBAAKT,UAAU,WAAf,SACD,cAACC,EAAA,EAAD,CAAWC,GAAI,YAAaC,UAAa,aAAcC,QAAW7C,GAAa8C,YAAepD,EAASqD,WAAW,0BAA0BC,YAAe,YAAaC,KAAO,KAAKC,MAAO9D,EAAW+D,SApZzL,SAAChC,GAERA,EAAEiC,OAAOF,MAAMG,MAAM,8DAMrBpD,IAAe,GACfJ,GAAe,KANbI,IAAe,GACfN,EAAW,kDACXE,GAAe,IAOrBR,EAAa8B,EAAEiC,OAAOF,YA2YxB,qBAAKT,UAAU,WAAf,SACK,cAACa,EAAA,EAAD,CAAQV,UAAU,0BAA0BK,KAAO,KAAKC,MAAOpC,GAAMqC,SAlBvD,SAACI,GAEpBxC,GAAQwC,EAAMH,OAAOF,QAgBhB,SAlCK,CACd,CACEP,GAAI,IACJa,KAAM,iBAER,CACEb,GAAI,IACJa,KAAM,oBA4BSC,KAAI,SAACC,EAAMxB,GAAP,OACT,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAKvC,qBAAKO,UAAU,WAAf,SACE,cAACa,EAAA,EAAD,CAAQV,UAAU,kBAAkBK,KAAO,KAAKC,MAAOxC,GAAMyC,SA9B9C,SAACI,GAEpB5C,GAAQ4C,EAAMH,OAAOF,QA4BjB,SArYM,CACd,CACEP,GAAI,QACJa,KAAM,wBAER,CACEb,GAAI,QACJa,KAAM,oCAER,CACEb,GAAI,QACJa,KAAM,8BAER,CACEb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,kCAEJ,CACFb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,sCAER,CACEb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,wCAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,sBAER,CACEb,GAAI,QACJa,KAAM,6BAER,CACEb,GAAI,QACJa,KAAM,wCAER,CACEb,GAAI,QACJa,KAAM,wBAER,CACEb,GAAI,QACJa,KAAM,4BAER,CACEb,GAAI,QACJa,KAAM,uBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,8BAEJ,CACFb,GAAI,QACJa,KAAM,mBAER,CACEb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,sBAER,CACEb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,gBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,sBAEJ,CACFb,GAAI,QACJa,KAAM,uBAEJ,CACFb,GAAI,QACJa,KAAM,oBAEJ,CACFb,GAAI,QACJa,KAAM,yBAEJ,CACFb,GAAI,QACJa,KAAM,wBAEF,CACJb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,qBAEF,CACJb,GAAI,QACJa,KAAM,wBAEF,CACJb,GAAI,QACJa,KAAM,qBAER,CACEb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,oCAEN,CACAb,GAAI,QACJa,KAAM,uBAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,sCAEN,CACAb,GAAI,QACJa,KAAM,0BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,sBAEJ,CACFb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,mBAEJ,CACFb,GAAI,QACJa,KAAM,uBAEN,CACAb,GAAI,QACJa,KAAM,oBAEJ,CACFb,GAAI,QACJa,KAAM,wBAEJ,CACFb,GAAI,QACJa,KAAM,yBAER,CACEb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,qBAEN,CACAb,GAAI,QACJa,KAAM,4BAEN,CACAb,GAAI,QACJa,KAAM,2BAEN,CACAb,GAAI,QACJa,KAAM,sBAEN,CACAb,GAAI,QACJa,KAAM,yBAEN,CACAb,GAAI,QACJa,KAAM,wBAEN,CACAb,GAAI,QACJa,KAAM,2BAEJ,CACFb,GAAI,QACJa,KAAM,qBAEJ,CACFb,GAAI,QACJa,KAAM,yBAEJ,CACFb,GAAI,QACJa,KAAM,uBA+CSC,KAAI,SAACC,EAAMxB,GAAP,OACT,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAMzC,qBAAKO,UAAU,cAAf,SACE,cAACmB,EAAA,EAAD,CAAQC,KAAK,SAASC,SAAYlE,EAAlC,sCAKLM,IACC,cAAC,IAAD,CACI6D,gBAAgB,qBAChBC,SAAU,+EACVC,QAAS,IACTC,QAlaR,WACE/D,IAAc,IAkaRgE,MAAM,uBAGX/D,IACC,cAAC,IAAD,CACI2D,gBAAgB,qBAChBC,SAAU,4DACVC,QAAS,IACTC,QAxaR,WACE7D,IAAc,IAwaR8D,MAAM,uBAIX7D,IACC,cAAC,IAAD,CACIyD,gBAAgB,qBAChBC,SAAU,6DACVC,QAAS,IACTC,QA/aR,WACE3D,IAAc,IA+aR4D,MAAM,uBAIR,cAACC,EAAA,EAAD,CAASC,OAAU7E,EAAW8E,YAAY,2BAA2BC,aAAa,IAKlFjF,EAAWkF,OACR,qBAAK/B,UAAY,eAAjB,SACMnD,EAAWkF,OAEhB,cAACC,EAAA,EAAD,CAAWC,KAAMpF,EAAWkF,MAAOG,QAzgB7B,CACd,CACEC,IAAK,MACLC,OAAQ,eAEV,CACED,IAAK,OACLC,OAAQ,cAER,CACAD,IAAK,OACLC,OAAQ,cAER,CACAD,IAAK,KACLC,OAAQ,WAER,CACAD,IAAK,OACLC,OAAQ,eAER,CACAD,IAAK,aACLC,OAAQ,kBAEN,CACFD,IAAK,KACLC,OAAQ,kBAEN,CACFD,IAAK,UACLC,OAAQ,eA0eF,SACK,cAAGH,KAAH,IAASC,EAAT,EAASA,QAASG,EAAlB,EAAkBA,eAAlB,OAED,cAACC,EAAA,EAAD,CAAgBZ,MAAM,yBAAtB,SACE,eAACa,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGP,EAAQlB,KAAI,SAACoB,GAAD,OACX,cAACM,EAAA,EAAD,2BAAiBL,EAAe,CAAED,YAAlC,aACGA,EAAOA,iBAKhB,cAACO,EAAA,EAAD,UACG5E,GAASiD,KAAI,SAAC4B,EAAKC,GACxB,OAEM,eAACJ,EAAA,EAAD,WACE,cAACK,EAAA,EAAD,UAAYF,EAAIzE,MAChB,cAAC2E,EAAA,EAAD,UAAYF,EAAII,OAChB,cAACF,EAAA,EAAD,UAAYF,EAAIM,OAChB,cAACJ,EAAA,EAAD,UAAYF,EAAIqB,KAChB,cAACnB,EAAA,EAAD,UAAYF,EAAIO,OAChB,cAACL,EAAA,EAAD,UAAYF,EAAIsB,aAChB,cAACpB,EAAA,EAAD,UAAYF,EAAIQ,KAChB,cAACN,EAAA,EAAD,UAAYF,EAAIuB,YARHtB,sBC5GtBuB,MAnhBf,YAAqC,IAAnB9H,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,QAExB,EAAgCC,mBAAS,IAAzC,mBAAOC,EAAP,KAAiBC,EAAjB,KACA,EAAkCF,mBAAS,IAA3C,mBAAOG,EAAP,KAAkBC,EAAlB,KACA,EAAoCJ,mBAAS,IAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA+BN,oBAAS,GAAxC,mBAAOO,EAAP,KAAiBC,EAAjB,KAEA,EAA8BR,mBAAS,6BAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAsCV,oBAAS,GAA/C,mBAAOW,EAAP,KAAoBC,EAApB,KACA,EAAoCZ,oBAAS,GAA7C,mBAAOa,EAAP,KAAmBC,EAAnB,KACA,EAAsCd,oBAAS,GAA/C,mBAAOe,GAAP,KAAoBC,GAApB,KAEA,GAAoChB,oBAAS,GAA7C,qBAAOiB,GAAP,MAAmBC,GAAnB,MACA,GAAoClB,oBAAS,GAA7C,qBAAOmB,GAAP,MAAmBC,GAAnB,MACA,GAAoCpB,oBAAS,GAA7C,qBAAOqB,GAAP,MAAmBC,GAAnB,MAEA,GAAgCtB,mBAAS,IAAzC,qBAAOuB,GAAP,MAAiBC,GAAjB,MACA,GAAuBxB,mBAAS,KAAhC,qBAAO6B,GAAP,MAAYC,GAAZ,MACA,GAAqB9B,mBAAS,KAA9B,qBAAO2B,GAAP,MAAWC,GAAX,MACA,GAAyB5B,mBAAS,MAAlC,qBAAO6H,GAAP,MAAaC,GAAb,MACA,GAA6B9H,mBAAS,MAAtC,qBAAO+H,GAAP,MAAeC,GAAf,MA4XA,OAzXIjG,qBAAU,WAGV7B,EAAYJ,GACZM,EAAaL,GACbe,GAAc,GACdE,IAAe,GACfJ,GAAe,KAGhB,CAACd,EAAOC,IAgXT,qCAEA,eAACiC,EAAA,EAAD,CAAMC,SAhXa,SAACC,GAKtB,GAJEA,EAAEC,iBACF3B,GAAW,GAGTP,GAAYE,EAAW,CAErB,IAAMiC,EAAcnC,EAASoC,OAAO,KAAKA,OAAOlC,IAElC,uCAAG,wCAAAmC,EAAA,kEAMmB,QAA/BC,sOAAYC,eANA,gBAObC,EAASF,GAPI,uCAWUG,MAAM,cAXhB,cAWVC,EAXU,iBAYQA,EAAYC,OAZpB,QAYVC,EAZU,OAadJ,EAASI,EAAS,OAbJ,yBAiBQH,MAAM,+CAAD,OAAgDf,GAAhD,uBAAkES,EAAlE,kBAAuFP,GAAvF,qBAAwGgG,GAAxG,uBAA4HE,GAA5H,+BAA0JtF,IAjBvK,eAiBTK,EAjBS,iBAkBMA,EAASF,OAlBf,QAqBb,IAHIG,EAlBS,OAoBPC,EAAM,GACJC,EAAI,EAAGA,EAAIF,EAAM,kBAAsBG,OAAQD,IACnDD,EAAIG,KAAK,CACPqD,KAAMzD,EAAM,kBAAsBE,GAClCgF,MAAOlF,EAAM,qBAAyBE,GACtCiF,MAAOnF,EAAM,qBAAyBE,GACtCkF,UAAWpF,EAAM,qBAAyBE,GAC1CmF,WAAYrF,EAAM,qBAAyBE,GAC3CoF,WAAYtF,EAAM,qBAAyBE,KAGjDzB,GAAYwB,GAGZ1C,EADgB,CAAC,MAAS,CAACyC,KAE3BvC,GAAW,GAnCE,kDAuCbY,IAAc,GACdZ,GAAW,GAxCE,0DAAH,qDA4ChB+C,GACArD,EAAY,IACZE,EAAa,SAKbc,IAAc,GACdV,GAAW,IAmTb,UAEG,qBAAKgD,UAAU,WAAf,SACD,cAACC,EAAA,EAAD,CAAWC,GAAI,WAAYC,UAAa,YAAaC,QAAW/C,EAAYgD,YAAepD,EAASqD,WAAW,0BAA0BC,YAAe,WAAYC,KAAO,KAAKC,MAAOhE,EAAUiE,SAtRrL,SAAChC,GAEPA,EAAEiC,OAAOF,MAAMG,MAAM,2CAMrBtD,GAAc,GACdF,GAAe,KANbE,GAAc,GACdJ,EAAW,kDACXE,GAAe,IAOrBV,EAAYgC,EAAEiC,OAAOF,YA6QtB,qBAAKT,UAAU,WAAf,SACD,cAACC,EAAA,EAAD,CAAWC,GAAI,YAAaC,UAAa,aAAcC,QAAW7C,GAAa8C,YAAepD,EAASqD,WAAW,0BAA0BC,YAAe,YAAaC,KAAO,KAAKC,MAAO9D,EAAW+D,SA1QzL,SAAChC,GAERA,EAAEiC,OAAOF,MAAMG,MAAM,8DAMrBpD,IAAe,GACfJ,GAAe,KANbI,IAAe,GACfN,EAAW,kDACXE,GAAe,IAOrBR,EAAa8B,EAAEiC,OAAOF,YAiQxB,qBAAKT,UAAU,WAAf,SACA,cAACa,EAAA,EAAD,CAAQV,UAAU,wBAAwBK,KAAO,KAAKC,MAAOtC,GAAKuC,SAvBhD,SAACI,GACnB1C,GAAO0C,EAAMH,OAAOF,QAsBpB,SAvOS,CACb,CACEP,GAAI,IACJa,KAAM,SAEN,CACAb,GAAI,IACJa,KAAM,SAEN,CACAb,GAAI,KACJa,KAAM,UAEN,CACAb,GAAI,KACJa,KAAM,UAEN,CACAb,GAAI,KACJa,KAAM,UAEN,CACAb,GAAI,KACJa,KAAM,WAiNQC,KAAI,SAACC,EAAMxB,GAAP,OACR,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAKzC,qBAAKO,UAAU,WAAf,SACS,cAACa,EAAA,EAAD,CAAQV,UAAU,0BAA0BK,KAAO,KAAKC,MAAOpC,GAAMqC,SAlC3D,SAACI,GACpBxC,GAAQwC,EAAMH,OAAOF,QAiCZ,SA3PC,CACd,CACEP,GAAI,IACJa,KAAM,iBAER,CACEb,GAAI,IACJa,KAAM,oBAqPSC,KAAI,SAACC,EAAMxB,GAAP,OACT,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAMzC,qBAAKO,UAAU,WAAf,SACU,cAACa,EAAA,EAAD,CAAQV,UAAU,mBAAmBK,KAAO,KAAKC,MAAO4D,GAAO3D,SArCrD,SAACI,GACrBwD,GAASxD,EAAMH,OAAOF,QAoCZ,SA5NC,CACf,CACEP,GAAI,KACJa,KAAM,OAEN,CACAb,GAAI,KACJa,KAAM,OAEN,CACAb,GAAI,KACJa,KAAM,OAEN,CACAb,GAAI,KACJa,KAAM,OAEN,CACAb,GAAI,KACJa,KAAM,OAEN,CACAb,GAAI,KACJa,KAAM,OAEJ,CACFb,GAAI,KACJa,KAAM,OAEJ,CACFb,GAAI,KACJa,KAAM,OAEJ,CACFb,GAAI,KACJa,KAAM,OAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,QAEJ,CACFb,GAAI,KACJa,KAAM,SAkGUC,KAAI,SAACC,EAAMxB,GAAP,OACV,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAKzC,qBAAKO,UAAU,WAAf,SACU,cAACa,EAAA,EAAD,CAAQV,UAAU,qBAAqBK,KAAO,KAAKC,MAAO8D,GAAS7D,SA1CvD,SAACI,GACvB0D,GAAW1D,EAAMH,OAAOF,QAyCd,SAtGG,CACjB,CACEP,GAAI,KACJa,KAAM,OAEN,CACAb,GAAI,KACJa,KAAM,OAEN,CACAb,GAAI,KACJa,KAAM,OAEN,CACAb,GAAI,KACJa,KAAM,OAEN,CACAb,GAAI,KACJa,KAAM,OAEN,CACAb,GAAI,KACJa,KAAM,OAEJ,CACFb,GAAI,KACJa,KAAM,OAEJ,CACFb,GAAI,KACJa,KAAM,OAEJ,CACFb,GAAI,KACJa,KAAM,OAEJ,CACFb,GAAI,KACJa,KAAM,OAEJ,CACFb,GAAI,KACJa,KAAM,OAEJ,CACFb,GAAI,KACJa,KAAM,QAwDYC,KAAI,SAACC,EAAMxB,GAAP,OACZ,cAACyB,EAAA,EAAD,CAAYT,MAAOQ,EAAKf,GAAYa,KAAQE,EAAKF,MAAhBtB,UAMzC,qBAAKO,UAAU,cAAf,SACE,cAACmB,EAAA,EAAD,CAAQC,KAAK,SAASC,SAAYlE,EAAlC,+BAKLM,IACC,cAAC,IAAD,CACI6D,gBAAgB,qBAChBC,SAAU,+EACVC,QAAS,IACTC,QAzSR,WACE/D,IAAc,IAySRgE,MAAM,uBAGX/D,IACC,cAAC,IAAD,CACI2D,gBAAgB,qBAChBC,SAAU,4DACVC,QAAS,IACTC,QA/SR,WACE7D,IAAc,IA+SR8D,MAAM,uBAIX7D,IACC,cAAC,IAAD,CACIyD,gBAAgB,qBAChBC,SAAU,6DACVC,QAAS,IACTC,QAtTR,WACE3D,IAAc,IAsTR4D,MAAM,uBAIR,cAACC,EAAA,EAAD,CAASC,OAAU7E,EAAW8E,YAAY,2BAA2BC,aAAa,IAElFjF,EAAWkF,OACR,qBAAK/B,UAAY,eAAjB,SACMnD,EAAWkF,OAEhB,cAACC,EAAA,EAAD,CAAWC,KAAMpF,EAAWkF,MAAOG,QApY7B,CACd,CACEC,IAAK,OACLC,OAAQ,eAEV,CACED,IAAK,QACLC,OAAQ,mBAER,CACAD,IAAK,QACLC,OAAQ,mBAER,CACAD,IAAK,YACLC,OAAQ,yBAER,CACAD,IAAK,aACLC,OAAQ,4BAEN,CACFD,IAAK,aACLC,OAAQ,6BA6WF,SACK,cAAGH,KAAH,IAASC,EAAT,EAASA,QAASG,EAAlB,EAAkBA,eAAlB,OAED,cAACC,EAAA,EAAD,CAAgBZ,MAAM,kBAAtB,SACE,eAACa,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,UACGP,EAAQlB,KAAI,SAACoB,GAAD,OACX,cAACM,EAAA,EAAD,2BAAiBL,EAAe,CAAED,YAAlC,aACGA,EAAOA,iBAKhB,cAACO,EAAA,EAAD,UACG5E,GAASiD,KAAI,SAAC4B,EAAKC,GACxB,OAEM,eAACJ,EAAA,EAAD,WACE,cAACK,EAAA,EAAD,UAAYF,EAAII,OAChB,cAACF,EAAA,EAAD,UAAYF,EAAI6B,QAChB,cAAC3B,EAAA,EAAD,UAAYF,EAAI8B,QAChB,cAAC5B,EAAA,EAAD,UAAYF,EAAI+B,YAChB,cAAC7B,EAAA,EAAD,UAAYF,EAAIgC,aAChB,cAAC9B,EAAA,EAAD,UAAYF,EAAIiC,eANHhC,sBCjatBiC,MA/Ef,WAEI,MAA2BtI,mBAAS,IAApC,mBAAOF,EAAP,KACA,GADA,KAC8BE,mBAAS,KAAvC,mBAAOD,EAAP,KAEF,OAFE,KAIA,qCAEE,cAAC,SAAD,CAAQ,aAAW,MAAnB,SACE,cAAC,aAAD,CAAYwI,OAAS,GAArB,SACE,qBAAKC,MAAM,uBAAX,mDAMN,qBAAKhF,UAAU,MAAf,SACC,sBAAKA,UAAY,aAAjB,UACC,uBACA,uBACA,uBACA,uBAEF,kDACE,uBACA,uBAEF,eAACiF,EAAA,EAAD,CAAM7D,KAAK,YAAX,UACM,cAAC8D,EAAA,EAAD,CAAKhF,GAAG,SAASiF,MAAM,iBAAvB,SACE,qBAAKnF,UAAU,UAAf,SACA,cAAC,EAAD,CAAc1D,OAAUA,EAAQC,QAAWA,QAG7C,cAAC2I,EAAA,EAAD,CAAKhF,GAAG,SAASiF,MAAM,kBAAvB,SACE,qBAAKnF,UAAU,UAAf,SACA,cAAC,EAAD,CAAgB1D,OAAUA,EAAQC,QAAWA,QAG9C,cAAC2I,EAAA,EAAD,CAAKhF,GAAG,SAASiF,MAAM,oBAAvB,SACE,qBAAKnF,UAAU,UAAf,SACA,cAAC,EAAD,CAAkB1D,OAAUA,EAAQC,QAAWA,WAKxD,sDACE,uBACA,uBAEC,eAAC0I,EAAA,EAAD,CAAM7D,KAAK,YAAX,UACG,cAAC8D,EAAA,EAAD,CAAKhF,GAAG,SAASiF,MAAM,gBAAvB,SACE,qBAAKnF,UAAU,UAAf,SACE,cAAC,EAAD,CAAc1D,OAAUA,EAAQC,QAAWA,QAG/C,cAAC2I,EAAA,EAAD,CAAKhF,GAAG,SAASiF,MAAM,iBAAvB,SACE,qBAAKnF,UAAU,UAAf,SACA,cAAC,EAAD,CAAe1D,OAAUA,EAAQC,QAAWA,QAI7C,cAAC2I,EAAA,EAAD,CAAKhF,GAAG,SAASiF,MAAM,UAAvB,SACC,qBAAKnF,UAAU,UAAf,SACC,cAAC,EAAD,CAAS1D,OAAUA,EAAQC,QAAWA,oB,cCxEnD6I,IAASC,OAAO,cAAC,EAAD,IACdC,SAASC,eAAe,U","file":"static/js/main.1f7d9773.chunk.js","sourcesContent":["import React, { useState, useEffect} from 'react';\nimport { Button, TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer,Select,SelectItem} from 'carbon-components-react';\n\nfunction Weekforecast({maplat, maplong}) {\n\n  const [latitude, setlatitude] = useState('');\n  const [longitude, setlongitude] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n  \n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [lterrstate, setlterrstate] = useState(false);\n  const [lngerrstate, setlngerrstate] = useState(false);\n\n  const [err1status, seterr1status] = useState(false); \n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n  const [refmtobj, setrefmtobj] = useState({});\n  const [lang,setlang] = useState('en-US');\n  const [day,setday] = useState('7');\n  const [unit,setunit] = useState('m');\n\n      useEffect(() => {\n\n    function autofill() {\n      setlatitude(maplat);\n      setlongitude(maplong);\n      setlterrstate(false);\n      setlngerrstate(false)\n      setbuttonstate(false)\n    }\n    autofill();\n  }, [maplat,maplong]);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n      \n\n  if (latitude && longitude) {\n\n        const locationstr = latitude.concat(',').concat(longitude);\n      \n        const geocode2 = async() => {\n\n        try{\n        \n          let apikey;\n\n          if(process.env.REACT_APP_mode === \"dev\"){\n            apikey = process.env.REACT_APP_WEATHER_API_KEY;\n          }\n          else{\n\n           let keyresponse = await fetch('/getapikey');\n           let keyresult = await keyresponse.json();\n           apikey = keyresult[\"apikey\"];\n\n          }\n            \n            let response = await fetch(`https://api.weather.com/v3/wx/forecast/daily/${day}day?geocode=${locationstr}&format=json&units=${unit}&language=${lang}&apiKey=${apikey}`)\n            let result = await response.json();\n\n            const res = [];\n            for(let i = 0; i < result[\"dayOfWeek\"].length; i++){\n                res.push({\n                  day: result[\"dayOfWeek\"][i],\n                  forecast: result[\"narrative\"][i],\n                  tempmax: result[\"temperatureMax\"][i],\n                  tempmin: result[\"temperatureMin\"][i],\n\n                });\n            }\n            setrefmtobj(res)\n\n            let formatter = {\"items\": [result]}\n            setGeocodeobj(formatter);\n            setLoading(false);\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      geocode2();\n      setlatitude('');\n      setlongitude('');\n\n      }\n    \n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'day',\n    header: 'Day of Week',\n  },\n  {\n    key: 'forecast',\n    header: 'Forecast',\n  },\n    {\n    key: 'tempmax',\n    header: 'Max Temperature',\n  },\n    {\n    key: 'tempmin',\n    header: 'Min Temperature',\n  },\n];\n\n\nconst validLatf = (e) => {\n\n        if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?){2}$/)){\n              setlterrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlterrstate(false)\n            setbuttonstate(false)\n        }        \n    \n        setlatitude(e.target.value)\n    \n    \n}\nconst validLongf = (e) => {\n\n        if(!e.target.value.match(/^\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setlngerrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlngerrstate(false)\n            setbuttonstate(false)\n        }        \n\n        setlongitude(e.target.value)\n    \n    \n}\n\nfunction err1closef() {\n  seterr1status(false);\n}\nfunction err2closef() {\n  seterr2status(false);\n}\nfunction err3closef() {\n  seterr3status(false);\n}\n\nconst langset = [\n  {\n    id: 'am-ET',\n    text: 'Amharic - (Ethiopia)'\n  },\n  {\n    id: 'ar-AE',\n    text: 'Arabic - (United Arab Emirates) '\n  },\n  {\n    id: 'az-AZ',\n    text: 'Azerbaijani - (Azerbaijan)'\n  },\n  {\n    id: 'bg-BG',\n    text: 'Bulgarian - (Bulgaria)'\n  },\n    {\n    id: 'bn-BD',\n    text: 'Bengali, Bangla - (Bangladesh)'\n  },\n      {\n    id: 'bn-IN',\n    text: 'Bengali, Bangla - (India)'\n  },\n  {\n    id: 'bs-BA',\n    text: 'Bosnian - (Bosnia and Herzegovina)'\n  },\n  {\n    id: 'ca-ES',\n    text: 'Catalan - (Spain)'\n  },\n  {\n    id: 'cs-CZ',\n    text: 'Czech - (Czechia)'\n  },\n    {\n    id: 'da-DK',\n    text: 'Danish - (Denmark)'\n  },\n    {\n    id: 'de-DE',\n    text: 'German - (Germany)'\n  },\n    {\n    id: 'el-GR',\n    text: 'Greek (modern) - (Greece)'\n  },\n  {\n    id: 'en-GB',\n    text: 'English (Great Britain)'\n  },\n    {\n    id: 'en-IN',\n    text: 'English - (India)'\n  },\n    {\n    id: 'en-US',\n    text: 'English - (United States of America)'\n  },\n    {\n    id: 'es-AR',\n    text: 'Spanish - (Argentina)'\n  },\n    {\n    id: 'es-ES',\n    text: 'Spanish - (Spain)'\n  },\n  {\n    id: 'es-LA',\n    text: 'Spanish - (Latin America)'\n  },\n  {\n    id: 'es-MX',\n    text: 'Spanish - (Mexico)'\n  },\n  {\n    id: 'es-UN',\n    text: 'Spanish - (International)'\n  },\n  {\n    id: 'es-US',\n    text: 'Spanish - (United States of America)'\n  },\n  {\n    id: 'et-EE',\n    text: 'Estonian - (Estonia)'\n  },\n  {\n    id: 'fa-IR',\n    text: 'Persian (Farsi) - (Iran)'\n  },\n  {\n    id: 'fi-FI',\n    text: 'Finnish - (Finland)'\n  },\n  {\n    id: 'fr-CA',\n    text: 'French - (Canada)'\n  },\n    {\n    id: 'fr-FR',\n    text: 'French - (France)'\n  },\n  {\n    id: 'gu-IN',\n    text: 'Gujarati - (India)'\n  },\n    {\n    id: 'he-IL',\n    text: 'Hebrew (modern) - (Israel)'\n  },\n      {\n    id: 'hi-IN',\n    text: 'Hindi - (India)'\n  },\n  {\n    id: 'hr-HR',\n    text: 'Croatian - (Croatia)'\n  },\n    {\n    id: 'hu-HU',\n    text: 'Hungarian - (Hungary)'\n  },\n    {\n    id: 'in-ID',\n    text: 'Indonesian - (Indonesia)'\n  },\n    {\n    id: 'is-IS',\n    text: 'Icelandic - (Iceland)'\n  },\n    {\n    id: 'it-IT',\n    text: 'Italian - (Italy)'\n  },\n    {\n    id: 'iw-IL',\n    text: 'Hebrew - (Israel)'\n  },\n    {\n    id: 'ja-JP',\n    text: 'Japanese - (Japan)'\n  },\n    {\n    id: 'jv-ID',\n    text: 'Javanese - (Indonesia)'\n  },\n    {\n    id: 'ka-GE',\n    text: 'Georgian - (Georgia)'\n  },\n    {\n    id: 'kk-KZ',\n    text: 'Kazakh - (Kazakhstan)'\n  },\n    {\n    id: 'km-KH',\n    text: 'Khmer - (Cambodia)'\n  },\n  {\n    id: 'kn-IN',\n    text: 'Kannada - (India)'\n  },  \n    {\n    id: 'ko-KR',\n    text: 'Korean - (South Korea)'\n  },\n    {\n    id: 'lo-LA',\n    text: 'Lao - (Laos)'\n  },\n    {\n    id: 'lt-LT',\n    text: 'Lithuanian - (Lithuania)'\n  },\n    {\n    id: 'lv-LV',\n    text: 'Latvian - (Latvia)'\n  },\n    {\n    id: 'mk-MK',\n    text: 'Macedonian - (Macedonia)'\n  },\n    {\n    id: 'mn-MN',\n    text: 'Mongolian - (Mongolia)'\n  },\n    {\n    id: 'mr-IN',\n    text: 'Marathi - (India)'\n  },\n      {\n    id: 'ms-MY',\n    text: 'Malay - (Malaysia)'\n  },\n      {\n    id: 'my-MM',\n    text: 'Burmese - (Myanmar)'\n  },\n      {\n    id: 'ne-IN',\n    text: 'Nepali - (Nepal)'\n  },\n      {\n    id: 'nl-NL',\n    text: 'Dutch - (Netherlands)'\n  },\n      {\n    id: 'no-NO',\n    text: 'Norwegian - (Norway)'\n  },\n        {\n    id: 'om-ET',\n    text: 'Oromo - (Ethiopia)'\n  },\n    {\n    id: 'pa-IN',\n    text: 'Punjabi - (India)'\n  },\n        {\n    id: 'pa-PK',\n    text: 'Punjabi - (Pakistan)'\n  },\n        {\n    id: 'pl-PL',\n    text: 'Polish - (Poland)'\n  },\n  {\n    id: 'pt-BR',\n    text: 'Portuguese - (Brazil)'\n  },\n    {\n    id: 'pt-PT',\n    text: 'Portuguese - (Portugal)'\n  },\n    {\n    id: 'ro-RO',\n    text: 'Romanian - (Romania)'\n  },\n    {\n    id: 'ru-RU',\n    text: 'Russian - (Russia)'\n  },\n    {\n    id: 'si-LK',\n    text: 'Sinhalese, Sinhala - (Sri Lanka)'\n  },\n    {\n    id: 'sk-SK',\n    text: 'Slovak - (Slovakia)'\n  },\n    {\n    id: 'sl-SI',\n    text: 'Slovenian - (Slovenia)'\n  },\n    {\n    id: 'sq-AL',\n    text: 'Albanian - (Albania)'\n  },\n    {\n    id: 'sr-BA',\n    text: 'Serbian - (Bosnia and Herzegovina)'\n  },\n    {\n    id: 'sr-ME',\n    text: 'Serbian - (Montenegro)'\n  },\n    {\n    id: 'sr-RS',\n    text: 'Serbian - (Serbia)'\n  },\n    {\n    id: 'sv-SE',\n    text: 'Swedish - (Sweden)'\n  },\n      {\n    id: 'sw-KE',\n    text: 'Swahili - (Kenya)'\n  },\n      {\n    id: 'ta-IN',\n    text: 'Tamil - (India)'\n  },\n      {\n    id: 'ta-LK',\n    text: 'Tamil - (Sri Lanka)'\n  },\n    {\n    id: 'te-IN',\n    text: 'Telugu - (India)'\n  }, \n      {\n    id: 'ti-ER',\n    text: 'Tigrinya - (Eritrea)'\n  },\n      {\n    id: 'ti-ET',\n    text: 'Tigrinya - (Ethiopia)'\n  },\n  {\n    id: 'tg-TJ',\n    text: 'Tajik - (Tajikistan)'\n  },\n    {\n    id: 'th-TH',\n    text: 'Thai - (Thailand)'\n  },\n    {\n    id: 'tk-TM',\n    text: 'Turkmen - (Turkmenistan)'\n  },\n    {\n    id: 'tl-PH',\n    text: 'Tagalog - (Philippines)'\n  },\n    {\n    id: 'tr-TR',\n    text: 'Turkish - (Turkey)'\n  },\n    {\n    id: 'uk-UA',\n    text: 'Ukrainian - (Ukraine)'\n  },\n    {\n    id: 'uz-UZ',\n    text: 'Uzbek - (Uzbekistan)'\n  },\n    {\n    id: 'vi-VN',\n    text: 'Vietnamese - (Viet Nam)'\n  },\n      {\n    id: 'zh-CN',\n    text: 'Chinese - (China)'\n  },\n      {\n    id: 'zh-HK',\n    text: 'Chinese - (Hong Kong)'\n  },\n      {\n    id: 'zh-TW',\n    text: 'Chinese - (Taiwan)'\n  }\n];\n\nconst unitset = [\n  {\n    id: 'm',\n    text: 'Metric system'\n  },\n  {\n    id: 'e',\n    text: 'Imperial system'\n  },\n     \n];\nconst dayset = [\n  {\n    id: '3',\n    text: '3-day'\n  },\n  {\n    id: '5',\n    text: '5-day'\n  },\n    {\n    id: '7',\n    text: '7-day'\n  },\n    {\n    id: '10',\n    text: '10-day'\n  },\n    {\n    id: '15',\n    text: '15-day'\n  },\n     \n];\nconst handlelangchoice = (event) => {\n      //console.log(event.target.value);\n      setlang(event.target.value);\n}\nconst handleunitchoice = (event) => {\n      //console.log(event.target.value);\n      setunit(event.target.value);\n}\nconst handledaychoice = (event) => {\n      //console.log(event.target.value);\n      setday(event.target.value);\n}\n  return (\n    <>\n\n    <Form onSubmit={handleSubmit}>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'latitude'} labelText = {'Latitude*'} invalid = {lterrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Latitude'} size = 'lg' value={latitude} onChange={validLatf} />\n       </div>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'longitude'} labelText = {'Longitude*'} invalid = {lngerrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Longitude'} size = 'lg' value={longitude} onChange={validLongf} />\n      </div>\n      \n      <div className=\"TextArea\" >\n      <Select labelText=\"Choose number of days\" size = \"lg\" value={day} onChange={handledaychoice}>\n          {dayset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n      </Select>\n      </div>\n\n      <div className=\"TextArea\" >\n               <Select labelText=\"Choose units of measure\" size = \"lg\" value={unit} onChange={handleunitchoice}>\n          {unitset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n       </Select>\n      </div>\n    \n         <div className=\"TextArea\" >\n        <Select labelText=\"Choose Language\" size = \"lg\" value={lang} onChange={handlelangchoice}>\n          {langset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n          </Select>\n         </div>\n      \n      <div className=\"CButtonArea\" >\n        <Button type=\"submit\" disabled = {buttonstate}> Get Daily Forecast</Button>\n      </div>\n\n      </Form>\n\n  {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude  values cannot be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No data results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n\n      {/* {JSON.stringify(geocodeobj)} */}\n\n     {geocodeobj.items && \n         <div className = \"TableDisplay\">\n              {geocodeobj.items && \n          \n          <DataTable rows={geocodeobj.items} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Weather Forecast Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {refmtobj.map((row, index) => {\n                return (\n                    \n                      <TableRow key={index} >\n                        <TableCell>{row.day}</TableCell>\n                        <TableCell>{row.forecast}</TableCell>\n                        <TableCell>{row.tempmax}</TableCell>\n                        <TableCell>{row.tempmin}</TableCell>\n                      </TableRow>\n                      \n\n                );\n                })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>} \n\n    </>\n  );\n};\n\nexport default Weekforecast;\n","import React, { useState, useEffect} from 'react';\nimport { Button, TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer,Select,SelectItem} from 'carbon-components-react';\n\nfunction Hourlyforecast({maplat, maplong}) {\n\n  const [latitude, setlatitude] = useState('');\n  const [longitude, setlongitude] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n  \n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [lterrstate, setlterrstate] = useState(false);\n  const [lngerrstate, setlngerrstate] = useState(false);\n\n  const [err1status, seterr1status] = useState(false); \n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n  const [refmtobj, setrefmtobj] = useState({});\n  const [lang,setlang] = useState('en-US');\n  const [day,setday] = useState('2');\n  const [unit,setunit] = useState('m');\n\n      useEffect(() => {\n\n    function autofill() {\n      setlatitude(maplat);\n      setlongitude(maplong);\n      setlterrstate(false);\n      setlngerrstate(false)\n      setbuttonstate(false)\n    }\n    autofill();\n  }, [maplat,maplong]);\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n      \n\n  if (latitude && longitude) {\n\n        const locationstr = latitude.concat(',').concat(longitude);\n      \n        const geocode2 = async() => {\n\n        try{\n        \n          let apikey;\n\n          if(process.env.REACT_APP_mode === \"dev\"){\n            apikey = process.env.REACT_APP_WEATHER_API_KEY;\n          }\n          else{\n\n           let keyresponse = await fetch('/getapikey');\n           let keyresult = await keyresponse.json();\n           apikey = keyresult[\"apikey\"];\n\n          }\n\n            let response = await fetch(`https://api.weather.com/v3/wx/forecast/hourly/${day}day?geocode=${locationstr}&format=json&units=${unit}&language=${lang}&apiKey=${apikey}`)\n            let result = await response.json();\n\n            const res = [];\n            for(let i = 0; i < result[\"dayOfWeek\"].length; i++){\n                res.push({\n                  day: result[\"dayOfWeek\"][i],\n                  date: result[\"validTimeLocal\"][i].split(\"T\")[0],\n                  time: result[\"validTimeLocal\"][i].split(\"T\")[1],\n                  forecast: result[\"wxPhraseLong\"][i],\n                  temp: result[\"temperature\"][i],\n                  uv: result[\"uvDescription\"][i],\n                  vis: result[\"visibility\"][i],\n                  windspd: result[\"windSpeed\"][i]\n                });\n            }\n            setrefmtobj(res)\n\n            let formatter = {\"items\": [result]}\n            setGeocodeobj(formatter);\n            setLoading(false);\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      geocode2();\n      setlatitude('');\n      setlongitude('');\n\n      }\n    \n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'day',\n    header: 'Day of Week',\n  },\n    {\n    key: 'date',\n    header: 'Local Date',\n  },\n      {\n    key: 'time',\n    header: 'Local Time',\n  },\n  {\n    key: 'forecast',\n    header: 'Forecast',\n  },\n    {\n    key: 'temp',\n    header: 'Temperature',\n  },\n    {\n    key: 'uv',\n    header: 'UV Description',\n  },\n    {\n    key: 'vis',\n    header: 'Visibility',\n  },\n      {\n    key: 'windspd',\n    header: 'Wind Speed',\n  }\n\n];\n\n\nconst validLatf = (e) => {\n\n        if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?){2}$/)){\n              setlterrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlterrstate(false)\n            setbuttonstate(false)\n        }        \n    \n        setlatitude(e.target.value)\n    \n    \n}\nconst validLongf = (e) => {\n\n        if(!e.target.value.match(/^\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setlngerrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlngerrstate(false)\n            setbuttonstate(false)\n        }        \n\n        setlongitude(e.target.value)\n    \n    \n}\n\nfunction err1closef() {\n  seterr1status(false);\n}\nfunction err2closef() {\n  seterr2status(false);\n}\nfunction err3closef() {\n  seterr3status(false);\n}\n\nconst langset = [\n  {\n    id: 'am-ET',\n    text: 'Amharic - (Ethiopia)'\n  },\n  {\n    id: 'ar-AE',\n    text: 'Arabic - (United Arab Emirates) '\n  },\n  {\n    id: 'az-AZ',\n    text: 'Azerbaijani - (Azerbaijan)'\n  },\n  {\n    id: 'bg-BG',\n    text: 'Bulgarian - (Bulgaria)'\n  },\n    {\n    id: 'bn-BD',\n    text: 'Bengali, Bangla - (Bangladesh)'\n  },\n      {\n    id: 'bn-IN',\n    text: 'Bengali, Bangla - (India)'\n  },\n  {\n    id: 'bs-BA',\n    text: 'Bosnian - (Bosnia and Herzegovina)'\n  },\n  {\n    id: 'ca-ES',\n    text: 'Catalan - (Spain)'\n  },\n  {\n    id: 'cs-CZ',\n    text: 'Czech - (Czechia)'\n  },\n    {\n    id: 'da-DK',\n    text: 'Danish - (Denmark)'\n  },\n    {\n    id: 'de-DE',\n    text: 'German - (Germany)'\n  },\n    {\n    id: 'el-GR',\n    text: 'Greek (modern) - (Greece)'\n  },\n  {\n    id: 'en-GB',\n    text: 'English (Great Britain)'\n  },\n    {\n    id: 'en-IN',\n    text: 'English - (India)'\n  },\n    {\n    id: 'en-US',\n    text: 'English - (United States of America)'\n  },\n    {\n    id: 'es-AR',\n    text: 'Spanish - (Argentina)'\n  },\n    {\n    id: 'es-ES',\n    text: 'Spanish - (Spain)'\n  },\n  {\n    id: 'es-LA',\n    text: 'Spanish - (Latin America)'\n  },\n  {\n    id: 'es-MX',\n    text: 'Spanish - (Mexico)'\n  },\n  {\n    id: 'es-UN',\n    text: 'Spanish - (International)'\n  },\n  {\n    id: 'es-US',\n    text: 'Spanish - (United States of America)'\n  },\n  {\n    id: 'et-EE',\n    text: 'Estonian - (Estonia)'\n  },\n  {\n    id: 'fa-IR',\n    text: 'Persian (Farsi) - (Iran)'\n  },\n  {\n    id: 'fi-FI',\n    text: 'Finnish - (Finland)'\n  },\n  {\n    id: 'fr-CA',\n    text: 'French - (Canada)'\n  },\n    {\n    id: 'fr-FR',\n    text: 'French - (France)'\n  },\n  {\n    id: 'gu-IN',\n    text: 'Gujarati - (India)'\n  },\n    {\n    id: 'he-IL',\n    text: 'Hebrew (modern) - (Israel)'\n  },\n      {\n    id: 'hi-IN',\n    text: 'Hindi - (India)'\n  },\n  {\n    id: 'hr-HR',\n    text: 'Croatian - (Croatia)'\n  },\n    {\n    id: 'hu-HU',\n    text: 'Hungarian - (Hungary)'\n  },\n    {\n    id: 'in-ID',\n    text: 'Indonesian - (Indonesia)'\n  },\n    {\n    id: 'is-IS',\n    text: 'Icelandic - (Iceland)'\n  },\n    {\n    id: 'it-IT',\n    text: 'Italian - (Italy)'\n  },\n    {\n    id: 'iw-IL',\n    text: 'Hebrew - (Israel)'\n  },\n    {\n    id: 'ja-JP',\n    text: 'Japanese - (Japan)'\n  },\n    {\n    id: 'jv-ID',\n    text: 'Javanese - (Indonesia)'\n  },\n    {\n    id: 'ka-GE',\n    text: 'Georgian - (Georgia)'\n  },\n    {\n    id: 'kk-KZ',\n    text: 'Kazakh - (Kazakhstan)'\n  },\n    {\n    id: 'km-KH',\n    text: 'Khmer - (Cambodia)'\n  },\n  {\n    id: 'kn-IN',\n    text: 'Kannada - (India)'\n  },  \n    {\n    id: 'ko-KR',\n    text: 'Korean - (South Korea)'\n  },\n    {\n    id: 'lo-LA',\n    text: 'Lao - (Laos)'\n  },\n    {\n    id: 'lt-LT',\n    text: 'Lithuanian - (Lithuania)'\n  },\n    {\n    id: 'lv-LV',\n    text: 'Latvian - (Latvia)'\n  },\n    {\n    id: 'mk-MK',\n    text: 'Macedonian - (Macedonia)'\n  },\n    {\n    id: 'mn-MN',\n    text: 'Mongolian - (Mongolia)'\n  },\n    {\n    id: 'mr-IN',\n    text: 'Marathi - (India)'\n  },\n      {\n    id: 'ms-MY',\n    text: 'Malay - (Malaysia)'\n  },\n      {\n    id: 'my-MM',\n    text: 'Burmese - (Myanmar)'\n  },\n      {\n    id: 'ne-IN',\n    text: 'Nepali - (Nepal)'\n  },\n      {\n    id: 'nl-NL',\n    text: 'Dutch - (Netherlands)'\n  },\n      {\n    id: 'no-NO',\n    text: 'Norwegian - (Norway)'\n  },\n        {\n    id: 'om-ET',\n    text: 'Oromo - (Ethiopia)'\n  },\n    {\n    id: 'pa-IN',\n    text: 'Punjabi - (India)'\n  },\n        {\n    id: 'pa-PK',\n    text: 'Punjabi - (Pakistan)'\n  },\n        {\n    id: 'pl-PL',\n    text: 'Polish - (Poland)'\n  },\n  {\n    id: 'pt-BR',\n    text: 'Portuguese - (Brazil)'\n  },\n    {\n    id: 'pt-PT',\n    text: 'Portuguese - (Portugal)'\n  },\n    {\n    id: 'ro-RO',\n    text: 'Romanian - (Romania)'\n  },\n    {\n    id: 'ru-RU',\n    text: 'Russian - (Russia)'\n  },\n    {\n    id: 'si-LK',\n    text: 'Sinhalese, Sinhala - (Sri Lanka)'\n  },\n    {\n    id: 'sk-SK',\n    text: 'Slovak - (Slovakia)'\n  },\n    {\n    id: 'sl-SI',\n    text: 'Slovenian - (Slovenia)'\n  },\n    {\n    id: 'sq-AL',\n    text: 'Albanian - (Albania)'\n  },\n    {\n    id: 'sr-BA',\n    text: 'Serbian - (Bosnia and Herzegovina)'\n  },\n    {\n    id: 'sr-ME',\n    text: 'Serbian - (Montenegro)'\n  },\n    {\n    id: 'sr-RS',\n    text: 'Serbian - (Serbia)'\n  },\n    {\n    id: 'sv-SE',\n    text: 'Swedish - (Sweden)'\n  },\n      {\n    id: 'sw-KE',\n    text: 'Swahili - (Kenya)'\n  },\n      {\n    id: 'ta-IN',\n    text: 'Tamil - (India)'\n  },\n      {\n    id: 'ta-LK',\n    text: 'Tamil - (Sri Lanka)'\n  },\n    {\n    id: 'te-IN',\n    text: 'Telugu - (India)'\n  }, \n      {\n    id: 'ti-ER',\n    text: 'Tigrinya - (Eritrea)'\n  },\n      {\n    id: 'ti-ET',\n    text: 'Tigrinya - (Ethiopia)'\n  },\n  {\n    id: 'tg-TJ',\n    text: 'Tajik - (Tajikistan)'\n  },\n    {\n    id: 'th-TH',\n    text: 'Thai - (Thailand)'\n  },\n    {\n    id: 'tk-TM',\n    text: 'Turkmen - (Turkmenistan)'\n  },\n    {\n    id: 'tl-PH',\n    text: 'Tagalog - (Philippines)'\n  },\n    {\n    id: 'tr-TR',\n    text: 'Turkish - (Turkey)'\n  },\n    {\n    id: 'uk-UA',\n    text: 'Ukrainian - (Ukraine)'\n  },\n    {\n    id: 'uz-UZ',\n    text: 'Uzbek - (Uzbekistan)'\n  },\n    {\n    id: 'vi-VN',\n    text: 'Vietnamese - (Viet Nam)'\n  },\n      {\n    id: 'zh-CN',\n    text: 'Chinese - (China)'\n  },\n      {\n    id: 'zh-HK',\n    text: 'Chinese - (Hong Kong)'\n  },\n      {\n    id: 'zh-TW',\n    text: 'Chinese - (Taiwan)'\n  }\n];\n\nconst unitset = [\n  {\n    id: 'm',\n    text: 'Metric system'\n  },\n  {\n    id: 'e',\n    text: 'Imperial system'\n  },\n     \n];\nconst dayset = [\n  {\n    id: '2',\n    text: '2-day'\n  },\n    {\n    id: '15',\n    text: '15-day'\n  }\n     \n];\nconst handlelangchoice = (event) => {\n      //console.log(event.target.value);\n      setlang(event.target.value);\n}\nconst handleunitchoice = (event) => {\n      //console.log(event.target.value);\n      setunit(event.target.value);\n}\nconst handledaychoice = (event) => {\n      //console.log(event.target.value);\n      setday(event.target.value);\n}\n  return (\n    <>\n\n    <Form onSubmit={handleSubmit}>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'latitude'} labelText = {'Latitude*'} invalid = {lterrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Latitude'} size = 'lg' value={latitude} onChange={validLatf} />\n       </div>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'longitude'} labelText = {'Longitude*'} invalid = {lngerrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Longitude'} size = 'lg' value={longitude} onChange={validLongf} />\n      </div>\n\n      <div className=\"TextArea\" >\n            <Select labelText=\"Choose number of days\" size = \"lg\" value={day} onChange={handledaychoice}>\n          {dayset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n      </Select>\n      </div>\n\n      <div className=\"TextArea\" >\n               <Select labelText=\"Choose units of measure\" size = \"lg\" value={unit} onChange={handleunitchoice}>\n          {unitset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n       </Select>\n      </div>\n        \n        <div className=\"TextArea\" >\n           <Select labelText=\"Choose Language\" size = \"lg\" value={lang} onChange={handlelangchoice}>\n          {langset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n          </Select>\n        </div>\n\n      \n      <div className=\"CButtonArea\" >\n        <Button type=\"submit\" disabled = {buttonstate}> Get Hourly Forecast</Button>\n      </div>\n\n      </Form>\n\n  {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude  values cannot be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No data results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n\n      {/* {JSON.stringify(geocodeobj)} */}\n\n     {geocodeobj.items && \n         <div className = \"TableDisplay\">\n              {geocodeobj.items && \n          \n          <DataTable rows={geocodeobj.items} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Hourly Forecast Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {refmtobj.map((row, index) => {\n                return (\n                    \n                      <TableRow key={index} >\n                        <TableCell>{row.day}</TableCell>\n                        <TableCell>{row.date}</TableCell>\n                        <TableCell>{row.time}</TableCell>\n                        <TableCell>{row.forecast}</TableCell>\n                        <TableCell>{row.temp}</TableCell>\n                        <TableCell>{row.uv}</TableCell>\n                        <TableCell>{row.vis}</TableCell>\n                        <TableCell>{row.windspd}</TableCell>\n                      </TableRow>\n                      \n\n                );\n                })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>} \n\n    </>\n  );\n};\n\nexport default Hourlyforecast;\n","import React, { useState, useEffect} from 'react';\nimport { Button, TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer,Select,SelectItem} from 'carbon-components-react';\n\nfunction Intradayforecast({maplat, maplong}) {\n\n  const [latitude, setlatitude] = useState('');\n  const [longitude, setlongitude] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n  \n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [lterrstate, setlterrstate] = useState(false);\n  const [lngerrstate, setlngerrstate] = useState(false);\n\n  const [err1status, seterr1status] = useState(false); \n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n  const [lang,setlang] = useState('en-US');\n  const [day,setday] = useState('7');\n  const [unit,setunit] = useState('m');\n\n      useEffect(() => {\n\n    function autofill() {\n      setlatitude(maplat);\n      setlongitude(maplong);\n      setlterrstate(false);\n      setlngerrstate(false)\n      setbuttonstate(false)\n    }\n    autofill();\n  }, [maplat,maplong]);\n  \n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n      \n\n  if (latitude && longitude) {\n      \n        const geocode2 = async() => {\n\n        try{\n        \n          let apikey;\n\n          if(process.env.REACT_APP_mode === \"dev\"){\n            apikey = process.env.REACT_APP_WEATHER_API_KEY;\n          }\n          else{\n\n           let keyresponse = await fetch('/getapikey');\n           let keyresult = await keyresponse.json();\n           apikey = keyresult[\"apikey\"];\n\n          }\n\n            let response = await fetch(`https://api.weather.com/v1/geocode/${latitude}/${longitude}/forecast/intraday/${day}day.json?units=${unit}&language=${lang}&apiKey=${apikey}`)\n            let result = await response.json();\n\n            setGeocodeobj({...result});\n\n            setLoading(false);\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      geocode2();\n      setlatitude('');\n      setlongitude('');\n\n      }\n    \n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'day',\n    header: 'Day of Week',\n  },\n  {\n    key: 'temporal',\n    header: 'Day Part',\n  },\n    {\n    key: 'temp',\n    header: 'Temperature',\n  },\n    {\n    key: 'wspd',\n    header: 'Wind Speed',\n  },\n    {\n    key: 'wx',\n    header: 'Weather Summary',\n  },\n];\n\n\nconst validLatf = (e) => {\n\n        if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?){2}$/)){\n              setlterrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlterrstate(false)\n            setbuttonstate(false)\n        }        \n    \n        setlatitude(e.target.value)\n    \n    \n}\nconst validLongf = (e) => {\n\n        if(!e.target.value.match(/^\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setlngerrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlngerrstate(false)\n            setbuttonstate(false)\n        }        \n\n        setlongitude(e.target.value)\n    \n    \n}\n\nfunction err1closef() {\n  seterr1status(false);\n}\nfunction err2closef() {\n  seterr2status(false);\n}\nfunction err3closef() {\n  seterr3status(false);\n}\n\nconst langset = [\n  {\n    id: 'am-ET',\n    text: 'Amharic - (Ethiopia)'\n  },\n  {\n    id: 'ar-AE',\n    text: 'Arabic - (United Arab Emirates) '\n  },\n  {\n    id: 'az-AZ',\n    text: 'Azerbaijani - (Azerbaijan)'\n  },\n  {\n    id: 'bg-BG',\n    text: 'Bulgarian - (Bulgaria)'\n  },\n    {\n    id: 'bn-BD',\n    text: 'Bengali, Bangla - (Bangladesh)'\n  },\n      {\n    id: 'bn-IN',\n    text: 'Bengali, Bangla - (India)'\n  },\n  {\n    id: 'bs-BA',\n    text: 'Bosnian - (Bosnia and Herzegovina)'\n  },\n  {\n    id: 'ca-ES',\n    text: 'Catalan - (Spain)'\n  },\n  {\n    id: 'cs-CZ',\n    text: 'Czech - (Czechia)'\n  },\n    {\n    id: 'da-DK',\n    text: 'Danish - (Denmark)'\n  },\n    {\n    id: 'de-DE',\n    text: 'German - (Germany)'\n  },\n    {\n    id: 'el-GR',\n    text: 'Greek (modern) - (Greece)'\n  },\n  {\n    id: 'en-GB',\n    text: 'English (Great Britain)'\n  },\n    {\n    id: 'en-IN',\n    text: 'English - (India)'\n  },\n    {\n    id: 'en-US',\n    text: 'English - (United States of America)'\n  },\n    {\n    id: 'es-AR',\n    text: 'Spanish - (Argentina)'\n  },\n    {\n    id: 'es-ES',\n    text: 'Spanish - (Spain)'\n  },\n  {\n    id: 'es-LA',\n    text: 'Spanish - (Latin America)'\n  },\n  {\n    id: 'es-MX',\n    text: 'Spanish - (Mexico)'\n  },\n  {\n    id: 'es-UN',\n    text: 'Spanish - (International)'\n  },\n  {\n    id: 'es-US',\n    text: 'Spanish - (United States of America)'\n  },\n  {\n    id: 'et-EE',\n    text: 'Estonian - (Estonia)'\n  },\n  {\n    id: 'fa-IR',\n    text: 'Persian (Farsi) - (Iran)'\n  },\n  {\n    id: 'fi-FI',\n    text: 'Finnish - (Finland)'\n  },\n  {\n    id: 'fr-CA',\n    text: 'French - (Canada)'\n  },\n    {\n    id: 'fr-FR',\n    text: 'French - (France)'\n  },\n  {\n    id: 'gu-IN',\n    text: 'Gujarati - (India)'\n  },\n    {\n    id: 'he-IL',\n    text: 'Hebrew (modern) - (Israel)'\n  },\n      {\n    id: 'hi-IN',\n    text: 'Hindi - (India)'\n  },\n  {\n    id: 'hr-HR',\n    text: 'Croatian - (Croatia)'\n  },\n    {\n    id: 'hu-HU',\n    text: 'Hungarian - (Hungary)'\n  },\n    {\n    id: 'in-ID',\n    text: 'Indonesian - (Indonesia)'\n  },\n    {\n    id: 'is-IS',\n    text: 'Icelandic - (Iceland)'\n  },\n    {\n    id: 'it-IT',\n    text: 'Italian - (Italy)'\n  },\n    {\n    id: 'iw-IL',\n    text: 'Hebrew - (Israel)'\n  },\n    {\n    id: 'ja-JP',\n    text: 'Japanese - (Japan)'\n  },\n    {\n    id: 'jv-ID',\n    text: 'Javanese - (Indonesia)'\n  },\n    {\n    id: 'ka-GE',\n    text: 'Georgian - (Georgia)'\n  },\n    {\n    id: 'kk-KZ',\n    text: 'Kazakh - (Kazakhstan)'\n  },\n    {\n    id: 'km-KH',\n    text: 'Khmer - (Cambodia)'\n  },\n  {\n    id: 'kn-IN',\n    text: 'Kannada - (India)'\n  },  \n    {\n    id: 'ko-KR',\n    text: 'Korean - (South Korea)'\n  },\n    {\n    id: 'lo-LA',\n    text: 'Lao - (Laos)'\n  },\n    {\n    id: 'lt-LT',\n    text: 'Lithuanian - (Lithuania)'\n  },\n    {\n    id: 'lv-LV',\n    text: 'Latvian - (Latvia)'\n  },\n    {\n    id: 'mk-MK',\n    text: 'Macedonian - (Macedonia)'\n  },\n    {\n    id: 'mn-MN',\n    text: 'Mongolian - (Mongolia)'\n  },\n    {\n    id: 'mr-IN',\n    text: 'Marathi - (India)'\n  },\n      {\n    id: 'ms-MY',\n    text: 'Malay - (Malaysia)'\n  },\n      {\n    id: 'my-MM',\n    text: 'Burmese - (Myanmar)'\n  },\n      {\n    id: 'ne-IN',\n    text: 'Nepali - (Nepal)'\n  },\n      {\n    id: 'nl-NL',\n    text: 'Dutch - (Netherlands)'\n  },\n      {\n    id: 'no-NO',\n    text: 'Norwegian - (Norway)'\n  },\n        {\n    id: 'om-ET',\n    text: 'Oromo - (Ethiopia)'\n  },\n    {\n    id: 'pa-IN',\n    text: 'Punjabi - (India)'\n  },\n        {\n    id: 'pa-PK',\n    text: 'Punjabi - (Pakistan)'\n  },\n        {\n    id: 'pl-PL',\n    text: 'Polish - (Poland)'\n  },\n  {\n    id: 'pt-BR',\n    text: 'Portuguese - (Brazil)'\n  },\n    {\n    id: 'pt-PT',\n    text: 'Portuguese - (Portugal)'\n  },\n    {\n    id: 'ro-RO',\n    text: 'Romanian - (Romania)'\n  },\n    {\n    id: 'ru-RU',\n    text: 'Russian - (Russia)'\n  },\n    {\n    id: 'si-LK',\n    text: 'Sinhalese, Sinhala - (Sri Lanka)'\n  },\n    {\n    id: 'sk-SK',\n    text: 'Slovak - (Slovakia)'\n  },\n    {\n    id: 'sl-SI',\n    text: 'Slovenian - (Slovenia)'\n  },\n    {\n    id: 'sq-AL',\n    text: 'Albanian - (Albania)'\n  },\n    {\n    id: 'sr-BA',\n    text: 'Serbian - (Bosnia and Herzegovina)'\n  },\n    {\n    id: 'sr-ME',\n    text: 'Serbian - (Montenegro)'\n  },\n    {\n    id: 'sr-RS',\n    text: 'Serbian - (Serbia)'\n  },\n    {\n    id: 'sv-SE',\n    text: 'Swedish - (Sweden)'\n  },\n      {\n    id: 'sw-KE',\n    text: 'Swahili - (Kenya)'\n  },\n      {\n    id: 'ta-IN',\n    text: 'Tamil - (India)'\n  },\n      {\n    id: 'ta-LK',\n    text: 'Tamil - (Sri Lanka)'\n  },\n    {\n    id: 'te-IN',\n    text: 'Telugu - (India)'\n  }, \n      {\n    id: 'ti-ER',\n    text: 'Tigrinya - (Eritrea)'\n  },\n      {\n    id: 'ti-ET',\n    text: 'Tigrinya - (Ethiopia)'\n  },\n  {\n    id: 'tg-TJ',\n    text: 'Tajik - (Tajikistan)'\n  },\n    {\n    id: 'th-TH',\n    text: 'Thai - (Thailand)'\n  },\n    {\n    id: 'tk-TM',\n    text: 'Turkmen - (Turkmenistan)'\n  },\n    {\n    id: 'tl-PH',\n    text: 'Tagalog - (Philippines)'\n  },\n    {\n    id: 'tr-TR',\n    text: 'Turkish - (Turkey)'\n  },\n    {\n    id: 'uk-UA',\n    text: 'Ukrainian - (Ukraine)'\n  },\n    {\n    id: 'uz-UZ',\n    text: 'Uzbek - (Uzbekistan)'\n  },\n    {\n    id: 'vi-VN',\n    text: 'Vietnamese - (Viet Nam)'\n  },\n      {\n    id: 'zh-CN',\n    text: 'Chinese - (China)'\n  },\n      {\n    id: 'zh-HK',\n    text: 'Chinese - (Hong Kong)'\n  },\n      {\n    id: 'zh-TW',\n    text: 'Chinese - (Taiwan)'\n  }\n];\n\nconst unitset = [\n  {\n    id: 'm',\n    text: 'Metric system'\n  },\n  {\n    id: 'e',\n    text: 'Imperial system'\n  },\n     \n];\nconst dayset = [\n  {\n    id: '3',\n    text: '3-day'\n  },\n  {\n    id: '5',\n    text: '5-day'\n  },\n    {\n    id: '7',\n    text: '7-day'\n  },\n    {\n    id: '10',\n    text: '10-day'\n  },\n    {\n    id: '15',\n    text: '15-day'\n  },\n     \n];\nconst handlelangchoice = (event) => {\n      //console.log(event.target.value);\n      setlang(event.target.value);\n}\nconst handleunitchoice = (event) => {\n      //console.log(event.target.value);\n      setunit(event.target.value);\n}\nconst handledaychoice = (event) => {\n      //console.log(event.target.value);\n      setday(event.target.value);\n}\n  return (\n    <>\n\n    <Form onSubmit={handleSubmit}>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'latitude'} labelText = {'Latitude*'} invalid = {lterrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Latitude'} size = 'lg' value={latitude} onChange={validLatf} />\n       </div>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'longitude'} labelText = {'Longitude*'} invalid = {lngerrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Longitude'} size = 'lg' value={longitude} onChange={validLongf} />\n      </div>\n\n      <div className=\"TextArea\" >\n              <Select labelText=\"Choose number of days\" size = \"lg\" value={day} onChange={handledaychoice}>\n          {dayset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n      </Select>\n      </div>\n\n      <div className=\"TextArea\" >\n        <Select labelText=\"Choose units of measure\" size = \"lg\" value={unit} onChange={handleunitchoice}>\n          {unitset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n       </Select>\n      </div>\n\n        <div className=\"TextArea\" >\n        <Select labelText=\"Choose Language\" size = \"lg\" value={lang} onChange={handlelangchoice}>\n          {langset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n          </Select>\n        </div>\n\n      \n      <div className=\"CButtonArea\" >\n        <Button type=\"submit\" disabled = {buttonstate}> Get Intraday Forecast</Button>\n      </div>\n\n      </Form>\n\n  {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude  values cannot be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No data results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n\n      {/* {JSON.stringify(geocodeobj)} */}\n\n      {geocodeobj.forecasts && \n         <div className = \"TableDisplay\">\n              {geocodeobj.forecasts && \n          \n          <DataTable rows={geocodeobj.forecasts} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Intraday Forecast Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {geocodeobj.forecasts.map((row, index) => {\n                return (\n                    \n                      <TableRow key={index} >\n\n                          <TableCell>{row.dow}</TableCell>\n                          <TableCell>{row.daypart_name}</TableCell>\n                          <TableCell>{row.temp}</TableCell>\n                          <TableCell>{row.wspd}</TableCell>\n                          <TableCell>{row.phrase_32char}</TableCell>\n                      \n                      </TableRow>\n                      \n\n                );\n                })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>}  \n        \n    </>\n  );\n};\n\nexport default Intradayforecast;\n","import React, { useState, useEffect} from 'react';\nimport { Button, TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer,Select,SelectItem} from 'carbon-components-react';\n\nfunction Dailyhistory({maplat, maplong}) {\n\n  const [latitude, setlatitude] = useState('');\n  const [longitude, setlongitude] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n  \n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [lterrstate, setlterrstate] = useState(false);\n  const [lngerrstate, setlngerrstate] = useState(false);\n\n  const [err1status, seterr1status] = useState(false); \n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n  const [refmtobj, setrefmtobj] = useState({});\n  const [lang,setlang] = useState('en-US');\n  const [unit,setunit] = useState('m');\n\n    useEffect(() => {\n\n    function autofill() {\n      setlatitude(maplat);\n      setlongitude(maplong);\n      setlterrstate(false);\n      setlngerrstate(false)\n      setbuttonstate(false)\n    }\n    autofill();\n  }, [maplat,maplong]);\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n      \n  if (latitude && longitude) {\n\n        const locationstr = latitude.concat(',').concat(longitude);\n      \n        const geocode2 = async() => {\n\n        try{\n        \n          let apikey;\n\n          if(process.env.REACT_APP_mode === \"dev\"){\n            apikey = process.env.REACT_APP_WEATHER_API_KEY;\n          }\n          else{\n\n           let keyresponse = await fetch('/getapikey');\n           let keyresult = await keyresponse.json();\n           apikey = keyresult[\"apikey\"];\n\n          }\n\n            let response = await fetch(`https://api.weather.com/v3/wx/conditions/historical/dailysummary/30day?geocode=${locationstr}&format=json&units=${unit}&language=${lang}&apiKey=${apikey}`)\n            let result = await response.json();\n\n            const res = [];\n            for(let i = 0; i < result[\"dayOfWeek\"].length; i++){\n                res.push({\n                  day: result[\"dayOfWeek\"][i],\n                  date: result[\"validTimeLocal\"][i].split(\"T\")[0], \n                  time: result[\"validTimeLocal\"][i].split(\"T\")[1], \n                  wxday: result[\"wxPhraseLongDay\"][i],\n                  wxnight: result[\"wxPhraseLongNight\"][i],\n                  tempmax: result[\"temperatureMax\"][i],\n                  tempmin: result[\"temperatureMin\"][i]\n                });\n            }\n            setrefmtobj(res)\n\n            let formatter = {\"items\": [result]}\n            setGeocodeobj(formatter);\n            setLoading(false);\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      geocode2();\n      setlatitude('');\n      setlongitude('');\n\n      }\n    \n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'day',\n    header: 'Day of Week',\n  },\n  {\n    key: 'date',\n    header: 'Local Date',\n  },\n    {\n    key: 'time',\n    header: 'Local Time',\n  },\n    {\n    key: 'wxday',\n    header: 'Day Summary',\n  },\n    {\n    key: 'wxnight',\n    header: 'Night Summary',\n  },\n    {\n    key: 'tempmax',\n    header: 'Max Temperature',\n  },\n      {\n    key: 'tempmin',\n    header: 'Min Temperature',\n  }\n\n];\n\n\nconst validLatf = (e) => {\n\n        if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?){2}$/)){\n              setlterrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlterrstate(false)\n            setbuttonstate(false)\n        }        \n    \n        setlatitude(e.target.value)\n        \n}\nconst validLongf = (e) => {\n\n        if(!e.target.value.match(/^\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setlngerrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlngerrstate(false)\n            setbuttonstate(false)\n        }        \n\n        setlongitude(e.target.value)\n    \n    \n}\n\nfunction err1closef() {\n  seterr1status(false);\n}\nfunction err2closef() {\n  seterr2status(false);\n}\nfunction err3closef() {\n  seterr3status(false);\n}\n\nconst langset = [\n  {\n    id: 'am-ET',\n    text: 'Amharic - (Ethiopia)'\n  },\n  {\n    id: 'ar-AE',\n    text: 'Arabic - (United Arab Emirates) '\n  },\n  {\n    id: 'az-AZ',\n    text: 'Azerbaijani - (Azerbaijan)'\n  },\n  {\n    id: 'bg-BG',\n    text: 'Bulgarian - (Bulgaria)'\n  },\n    {\n    id: 'bn-BD',\n    text: 'Bengali, Bangla - (Bangladesh)'\n  },\n      {\n    id: 'bn-IN',\n    text: 'Bengali, Bangla - (India)'\n  },\n  {\n    id: 'bs-BA',\n    text: 'Bosnian - (Bosnia and Herzegovina)'\n  },\n  {\n    id: 'ca-ES',\n    text: 'Catalan - (Spain)'\n  },\n  {\n    id: 'cs-CZ',\n    text: 'Czech - (Czechia)'\n  },\n    {\n    id: 'da-DK',\n    text: 'Danish - (Denmark)'\n  },\n    {\n    id: 'de-DE',\n    text: 'German - (Germany)'\n  },\n    {\n    id: 'el-GR',\n    text: 'Greek (modern) - (Greece)'\n  },\n  {\n    id: 'en-GB',\n    text: 'English (Great Britain)'\n  },\n    {\n    id: 'en-IN',\n    text: 'English - (India)'\n  },\n    {\n    id: 'en-US',\n    text: 'English - (United States of America)'\n  },\n    {\n    id: 'es-AR',\n    text: 'Spanish - (Argentina)'\n  },\n    {\n    id: 'es-ES',\n    text: 'Spanish - (Spain)'\n  },\n  {\n    id: 'es-LA',\n    text: 'Spanish - (Latin America)'\n  },\n  {\n    id: 'es-MX',\n    text: 'Spanish - (Mexico)'\n  },\n  {\n    id: 'es-UN',\n    text: 'Spanish - (International)'\n  },\n  {\n    id: 'es-US',\n    text: 'Spanish - (United States of America)'\n  },\n  {\n    id: 'et-EE',\n    text: 'Estonian - (Estonia)'\n  },\n  {\n    id: 'fa-IR',\n    text: 'Persian (Farsi) - (Iran)'\n  },\n  {\n    id: 'fi-FI',\n    text: 'Finnish - (Finland)'\n  },\n  {\n    id: 'fr-CA',\n    text: 'French - (Canada)'\n  },\n    {\n    id: 'fr-FR',\n    text: 'French - (France)'\n  },\n  {\n    id: 'gu-IN',\n    text: 'Gujarati - (India)'\n  },\n    {\n    id: 'he-IL',\n    text: 'Hebrew (modern) - (Israel)'\n  },\n      {\n    id: 'hi-IN',\n    text: 'Hindi - (India)'\n  },\n  {\n    id: 'hr-HR',\n    text: 'Croatian - (Croatia)'\n  },\n    {\n    id: 'hu-HU',\n    text: 'Hungarian - (Hungary)'\n  },\n    {\n    id: 'in-ID',\n    text: 'Indonesian - (Indonesia)'\n  },\n    {\n    id: 'is-IS',\n    text: 'Icelandic - (Iceland)'\n  },\n    {\n    id: 'it-IT',\n    text: 'Italian - (Italy)'\n  },\n    {\n    id: 'iw-IL',\n    text: 'Hebrew - (Israel)'\n  },\n    {\n    id: 'ja-JP',\n    text: 'Japanese - (Japan)'\n  },\n    {\n    id: 'jv-ID',\n    text: 'Javanese - (Indonesia)'\n  },\n    {\n    id: 'ka-GE',\n    text: 'Georgian - (Georgia)'\n  },\n    {\n    id: 'kk-KZ',\n    text: 'Kazakh - (Kazakhstan)'\n  },\n    {\n    id: 'km-KH',\n    text: 'Khmer - (Cambodia)'\n  },\n  {\n    id: 'kn-IN',\n    text: 'Kannada - (India)'\n  },  \n    {\n    id: 'ko-KR',\n    text: 'Korean - (South Korea)'\n  },\n    {\n    id: 'lo-LA',\n    text: 'Lao - (Laos)'\n  },\n    {\n    id: 'lt-LT',\n    text: 'Lithuanian - (Lithuania)'\n  },\n    {\n    id: 'lv-LV',\n    text: 'Latvian - (Latvia)'\n  },\n    {\n    id: 'mk-MK',\n    text: 'Macedonian - (Macedonia)'\n  },\n    {\n    id: 'mn-MN',\n    text: 'Mongolian - (Mongolia)'\n  },\n    {\n    id: 'mr-IN',\n    text: 'Marathi - (India)'\n  },\n      {\n    id: 'ms-MY',\n    text: 'Malay - (Malaysia)'\n  },\n      {\n    id: 'my-MM',\n    text: 'Burmese - (Myanmar)'\n  },\n      {\n    id: 'ne-IN',\n    text: 'Nepali - (Nepal)'\n  },\n      {\n    id: 'nl-NL',\n    text: 'Dutch - (Netherlands)'\n  },\n      {\n    id: 'no-NO',\n    text: 'Norwegian - (Norway)'\n  },\n        {\n    id: 'om-ET',\n    text: 'Oromo - (Ethiopia)'\n  },\n    {\n    id: 'pa-IN',\n    text: 'Punjabi - (India)'\n  },\n        {\n    id: 'pa-PK',\n    text: 'Punjabi - (Pakistan)'\n  },\n        {\n    id: 'pl-PL',\n    text: 'Polish - (Poland)'\n  },\n  {\n    id: 'pt-BR',\n    text: 'Portuguese - (Brazil)'\n  },\n    {\n    id: 'pt-PT',\n    text: 'Portuguese - (Portugal)'\n  },\n    {\n    id: 'ro-RO',\n    text: 'Romanian - (Romania)'\n  },\n    {\n    id: 'ru-RU',\n    text: 'Russian - (Russia)'\n  },\n    {\n    id: 'si-LK',\n    text: 'Sinhalese, Sinhala - (Sri Lanka)'\n  },\n    {\n    id: 'sk-SK',\n    text: 'Slovak - (Slovakia)'\n  },\n    {\n    id: 'sl-SI',\n    text: 'Slovenian - (Slovenia)'\n  },\n    {\n    id: 'sq-AL',\n    text: 'Albanian - (Albania)'\n  },\n    {\n    id: 'sr-BA',\n    text: 'Serbian - (Bosnia and Herzegovina)'\n  },\n    {\n    id: 'sr-ME',\n    text: 'Serbian - (Montenegro)'\n  },\n    {\n    id: 'sr-RS',\n    text: 'Serbian - (Serbia)'\n  },\n    {\n    id: 'sv-SE',\n    text: 'Swedish - (Sweden)'\n  },\n      {\n    id: 'sw-KE',\n    text: 'Swahili - (Kenya)'\n  },\n      {\n    id: 'ta-IN',\n    text: 'Tamil - (India)'\n  },\n      {\n    id: 'ta-LK',\n    text: 'Tamil - (Sri Lanka)'\n  },\n    {\n    id: 'te-IN',\n    text: 'Telugu - (India)'\n  }, \n      {\n    id: 'ti-ER',\n    text: 'Tigrinya - (Eritrea)'\n  },\n      {\n    id: 'ti-ET',\n    text: 'Tigrinya - (Ethiopia)'\n  },\n  {\n    id: 'tg-TJ',\n    text: 'Tajik - (Tajikistan)'\n  },\n    {\n    id: 'th-TH',\n    text: 'Thai - (Thailand)'\n  },\n    {\n    id: 'tk-TM',\n    text: 'Turkmen - (Turkmenistan)'\n  },\n    {\n    id: 'tl-PH',\n    text: 'Tagalog - (Philippines)'\n  },\n    {\n    id: 'tr-TR',\n    text: 'Turkish - (Turkey)'\n  },\n    {\n    id: 'uk-UA',\n    text: 'Ukrainian - (Ukraine)'\n  },\n    {\n    id: 'uz-UZ',\n    text: 'Uzbek - (Uzbekistan)'\n  },\n    {\n    id: 'vi-VN',\n    text: 'Vietnamese - (Viet Nam)'\n  },\n      {\n    id: 'zh-CN',\n    text: 'Chinese - (China)'\n  },\n      {\n    id: 'zh-HK',\n    text: 'Chinese - (Hong Kong)'\n  },\n      {\n    id: 'zh-TW',\n    text: 'Chinese - (Taiwan)'\n  }\n];\n\nconst unitset = [\n  {\n    id: 'm',\n    text: 'Metric system'\n  },\n  {\n    id: 'e',\n    text: 'Imperial system'\n  },\n     \n];\n\nconst handlelangchoice = (event) => {\n      setlang(event.target.value);\n}\nconst handleunitchoice = (event) => {\n      setunit(event.target.value);\n}\n\n  return (\n    <>\n\n    <Form onSubmit={handleSubmit}>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'latitude'} labelText = {'Latitude*'} invalid = {lterrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Latitude'} size = 'lg' value={latitude} onChange={validLatf} />\n       </div>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'longitude'} labelText = {'Longitude*'} invalid = {lngerrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Longitude'} size = 'lg' value={longitude} onChange={validLongf} />\n      </div>\n\n      <div className=\"TextArea\" >\n       <Select labelText=\"Choose units of measure\" size = \"lg\" value={unit} onChange={handleunitchoice}>\n          {unitset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n       </Select>\n      </div>\n\n      <div className=\"TextArea\" >\n        <Select labelText=\"Choose Language\" size = \"lg\" value={lang} onChange={handlelangchoice}>\n          {langset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n          </Select>\n      </div>\n              \n\n      <div className=\"CButtonArea\" >\n        <Button type=\"submit\" disabled = {buttonstate}> Get Daily History</Button>\n      </div>\n\n      </Form>\n\n  {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude  values cannot be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No data results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n\n      {/* {JSON.stringify(geocodeobj)} */}\n\n     {geocodeobj.items && \n         <div className = \"TableDisplay\">\n              {geocodeobj.items && \n          \n          <DataTable rows={geocodeobj.items} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Daily History Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {refmtobj.map((row, index) => {\n                return (\n                    \n                      <TableRow key={index} >\n                        <TableCell>{row.day}</TableCell>\n                        <TableCell>{row.date}</TableCell>\n                        <TableCell>{row.time}</TableCell>\n                        <TableCell>{row.wxday}</TableCell>\n                        <TableCell>{row.wxnight}</TableCell>\n                        <TableCell>{row.tempmax}</TableCell>\n                        <TableCell>{row.tempmin}</TableCell>\n                      </TableRow>\n                      \n\n                );\n                })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>} \n\n    </>\n  );\n};\n\nexport default Dailyhistory;\n","import React, { useState, useEffect} from 'react';\nimport { Button, TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer,Select,SelectItem} from 'carbon-components-react';\n\nfunction Hourlyhistory({maplat, maplong}) {\n\n  const [latitude, setlatitude] = useState('');\n  const [longitude, setlongitude] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n  \n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [lterrstate, setlterrstate] = useState(false);\n  const [lngerrstate, setlngerrstate] = useState(false);\n\n  const [err1status, seterr1status] = useState(false); \n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n  const [refmtobj, setrefmtobj] = useState({});\n  const [lang,setlang] = useState('en-US');\n  const [unit,setunit] = useState('m');\n\n      useEffect(() => {\n\n    function autofill() {\n      setlatitude(maplat);\n      setlongitude(maplong);\n      setlterrstate(false);\n      setlngerrstate(false)\n      setbuttonstate(false)\n    }\n    autofill();\n  }, [maplat,maplong]);\n\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n      \n\n  if (latitude && longitude) {\n\n        const locationstr = latitude.concat(',').concat(longitude);\n      \n        const geocode2 = async() => {\n\n        try{\n        \n          let apikey;\n\n          if(process.env.REACT_APP_mode === \"dev\"){\n            apikey = process.env.REACT_APP_WEATHER_API_KEY;\n          }\n          else{\n\n           let keyresponse = await fetch('/getapikey');\n           let keyresult = await keyresponse.json();\n           apikey = keyresult[\"apikey\"];\n\n          }\n\n            let response = await fetch(`https://api.weather.com/v3/wx/conditions/historical/hourly/1day?geocode=${locationstr}&format=json&units=${unit}&language=${lang}&apiKey=${apikey}`)\n            let result = await response.json();\n\n            const res = [];\n            for(let i = 0; i < result[\"dayOfWeek\"].length; i++){\n                res.push({\n                  day: result[\"dayOfWeek\"][i],\n                  date: result[\"validTimeLocal\"][i].split(\"T\")[0], \n                  time: result[\"validTimeLocal\"][i].split(\"T\")[1], \n                  wx: result[\"wxPhraseLong\"][i],\n                  temp: result[\"temperature\"][i],\n                  wdirection: result[\"windDirectionCardinal\"][i],\n                  uv: result[\"uvDescription\"][i],\n                  heatidx: result[\"temperatureHeatIndex\"][i]\n                });\n            }\n            setrefmtobj(res)\n\n            let formatter = {\"items\": [result]}\n            setGeocodeobj(formatter);\n            setLoading(false);\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      geocode2();\n      setlatitude('');\n      setlongitude('');\n\n      }\n    \n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'day',\n    header: 'Day of Week',\n  },\n  {\n    key: 'date',\n    header: 'Local date',\n  },\n    {\n    key: 'time',\n    header: 'Local Time',\n  },\n    {\n    key: 'wx',\n    header: 'Summary',\n  },\n    {\n    key: 'temp',\n    header: 'Temperature',\n  },\n    {\n    key: 'wdirection',\n    header: 'Wind Direction',\n  },\n      {\n    key: 'uv',\n    header: 'UV Description',\n  },\n      {\n    key: 'heatidx',\n    header: 'Heat Index',\n  }\n\n];\n\n\nconst validLatf = (e) => {\n\n        if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?){2}$/)){\n              setlterrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlterrstate(false)\n            setbuttonstate(false)\n        }        \n    \n        setlatitude(e.target.value)\n    \n    \n}\nconst validLongf = (e) => {\n\n        if(!e.target.value.match(/^\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setlngerrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlngerrstate(false)\n            setbuttonstate(false)\n        }        \n\n        setlongitude(e.target.value)\n    \n    \n}\n\nfunction err1closef() {\n  seterr1status(false);\n}\nfunction err2closef() {\n  seterr2status(false);\n}\nfunction err3closef() {\n  seterr3status(false);\n}\n\nconst langset = [\n  {\n    id: 'am-ET',\n    text: 'Amharic - (Ethiopia)'\n  },\n  {\n    id: 'ar-AE',\n    text: 'Arabic - (United Arab Emirates) '\n  },\n  {\n    id: 'az-AZ',\n    text: 'Azerbaijani - (Azerbaijan)'\n  },\n  {\n    id: 'bg-BG',\n    text: 'Bulgarian - (Bulgaria)'\n  },\n    {\n    id: 'bn-BD',\n    text: 'Bengali, Bangla - (Bangladesh)'\n  },\n      {\n    id: 'bn-IN',\n    text: 'Bengali, Bangla - (India)'\n  },\n  {\n    id: 'bs-BA',\n    text: 'Bosnian - (Bosnia and Herzegovina)'\n  },\n  {\n    id: 'ca-ES',\n    text: 'Catalan - (Spain)'\n  },\n  {\n    id: 'cs-CZ',\n    text: 'Czech - (Czechia)'\n  },\n    {\n    id: 'da-DK',\n    text: 'Danish - (Denmark)'\n  },\n    {\n    id: 'de-DE',\n    text: 'German - (Germany)'\n  },\n    {\n    id: 'el-GR',\n    text: 'Greek (modern) - (Greece)'\n  },\n  {\n    id: 'en-GB',\n    text: 'English (Great Britain)'\n  },\n    {\n    id: 'en-IN',\n    text: 'English - (India)'\n  },\n    {\n    id: 'en-US',\n    text: 'English - (United States of America)'\n  },\n    {\n    id: 'es-AR',\n    text: 'Spanish - (Argentina)'\n  },\n    {\n    id: 'es-ES',\n    text: 'Spanish - (Spain)'\n  },\n  {\n    id: 'es-LA',\n    text: 'Spanish - (Latin America)'\n  },\n  {\n    id: 'es-MX',\n    text: 'Spanish - (Mexico)'\n  },\n  {\n    id: 'es-UN',\n    text: 'Spanish - (International)'\n  },\n  {\n    id: 'es-US',\n    text: 'Spanish - (United States of America)'\n  },\n  {\n    id: 'et-EE',\n    text: 'Estonian - (Estonia)'\n  },\n  {\n    id: 'fa-IR',\n    text: 'Persian (Farsi) - (Iran)'\n  },\n  {\n    id: 'fi-FI',\n    text: 'Finnish - (Finland)'\n  },\n  {\n    id: 'fr-CA',\n    text: 'French - (Canada)'\n  },\n    {\n    id: 'fr-FR',\n    text: 'French - (France)'\n  },\n  {\n    id: 'gu-IN',\n    text: 'Gujarati - (India)'\n  },\n    {\n    id: 'he-IL',\n    text: 'Hebrew (modern) - (Israel)'\n  },\n      {\n    id: 'hi-IN',\n    text: 'Hindi - (India)'\n  },\n  {\n    id: 'hr-HR',\n    text: 'Croatian - (Croatia)'\n  },\n    {\n    id: 'hu-HU',\n    text: 'Hungarian - (Hungary)'\n  },\n    {\n    id: 'in-ID',\n    text: 'Indonesian - (Indonesia)'\n  },\n    {\n    id: 'is-IS',\n    text: 'Icelandic - (Iceland)'\n  },\n    {\n    id: 'it-IT',\n    text: 'Italian - (Italy)'\n  },\n    {\n    id: 'iw-IL',\n    text: 'Hebrew - (Israel)'\n  },\n    {\n    id: 'ja-JP',\n    text: 'Japanese - (Japan)'\n  },\n    {\n    id: 'jv-ID',\n    text: 'Javanese - (Indonesia)'\n  },\n    {\n    id: 'ka-GE',\n    text: 'Georgian - (Georgia)'\n  },\n    {\n    id: 'kk-KZ',\n    text: 'Kazakh - (Kazakhstan)'\n  },\n    {\n    id: 'km-KH',\n    text: 'Khmer - (Cambodia)'\n  },\n  {\n    id: 'kn-IN',\n    text: 'Kannada - (India)'\n  },  \n    {\n    id: 'ko-KR',\n    text: 'Korean - (South Korea)'\n  },\n    {\n    id: 'lo-LA',\n    text: 'Lao - (Laos)'\n  },\n    {\n    id: 'lt-LT',\n    text: 'Lithuanian - (Lithuania)'\n  },\n    {\n    id: 'lv-LV',\n    text: 'Latvian - (Latvia)'\n  },\n    {\n    id: 'mk-MK',\n    text: 'Macedonian - (Macedonia)'\n  },\n    {\n    id: 'mn-MN',\n    text: 'Mongolian - (Mongolia)'\n  },\n    {\n    id: 'mr-IN',\n    text: 'Marathi - (India)'\n  },\n      {\n    id: 'ms-MY',\n    text: 'Malay - (Malaysia)'\n  },\n      {\n    id: 'my-MM',\n    text: 'Burmese - (Myanmar)'\n  },\n      {\n    id: 'ne-IN',\n    text: 'Nepali - (Nepal)'\n  },\n      {\n    id: 'nl-NL',\n    text: 'Dutch - (Netherlands)'\n  },\n      {\n    id: 'no-NO',\n    text: 'Norwegian - (Norway)'\n  },\n        {\n    id: 'om-ET',\n    text: 'Oromo - (Ethiopia)'\n  },\n    {\n    id: 'pa-IN',\n    text: 'Punjabi - (India)'\n  },\n        {\n    id: 'pa-PK',\n    text: 'Punjabi - (Pakistan)'\n  },\n        {\n    id: 'pl-PL',\n    text: 'Polish - (Poland)'\n  },\n  {\n    id: 'pt-BR',\n    text: 'Portuguese - (Brazil)'\n  },\n    {\n    id: 'pt-PT',\n    text: 'Portuguese - (Portugal)'\n  },\n    {\n    id: 'ro-RO',\n    text: 'Romanian - (Romania)'\n  },\n    {\n    id: 'ru-RU',\n    text: 'Russian - (Russia)'\n  },\n    {\n    id: 'si-LK',\n    text: 'Sinhalese, Sinhala - (Sri Lanka)'\n  },\n    {\n    id: 'sk-SK',\n    text: 'Slovak - (Slovakia)'\n  },\n    {\n    id: 'sl-SI',\n    text: 'Slovenian - (Slovenia)'\n  },\n    {\n    id: 'sq-AL',\n    text: 'Albanian - (Albania)'\n  },\n    {\n    id: 'sr-BA',\n    text: 'Serbian - (Bosnia and Herzegovina)'\n  },\n    {\n    id: 'sr-ME',\n    text: 'Serbian - (Montenegro)'\n  },\n    {\n    id: 'sr-RS',\n    text: 'Serbian - (Serbia)'\n  },\n    {\n    id: 'sv-SE',\n    text: 'Swedish - (Sweden)'\n  },\n      {\n    id: 'sw-KE',\n    text: 'Swahili - (Kenya)'\n  },\n      {\n    id: 'ta-IN',\n    text: 'Tamil - (India)'\n  },\n      {\n    id: 'ta-LK',\n    text: 'Tamil - (Sri Lanka)'\n  },\n    {\n    id: 'te-IN',\n    text: 'Telugu - (India)'\n  }, \n      {\n    id: 'ti-ER',\n    text: 'Tigrinya - (Eritrea)'\n  },\n      {\n    id: 'ti-ET',\n    text: 'Tigrinya - (Ethiopia)'\n  },\n  {\n    id: 'tg-TJ',\n    text: 'Tajik - (Tajikistan)'\n  },\n    {\n    id: 'th-TH',\n    text: 'Thai - (Thailand)'\n  },\n    {\n    id: 'tk-TM',\n    text: 'Turkmen - (Turkmenistan)'\n  },\n    {\n    id: 'tl-PH',\n    text: 'Tagalog - (Philippines)'\n  },\n    {\n    id: 'tr-TR',\n    text: 'Turkish - (Turkey)'\n  },\n    {\n    id: 'uk-UA',\n    text: 'Ukrainian - (Ukraine)'\n  },\n    {\n    id: 'uz-UZ',\n    text: 'Uzbek - (Uzbekistan)'\n  },\n    {\n    id: 'vi-VN',\n    text: 'Vietnamese - (Viet Nam)'\n  },\n      {\n    id: 'zh-CN',\n    text: 'Chinese - (China)'\n  },\n      {\n    id: 'zh-HK',\n    text: 'Chinese - (Hong Kong)'\n  },\n      {\n    id: 'zh-TW',\n    text: 'Chinese - (Taiwan)'\n  }\n];\n\nconst unitset = [\n  {\n    id: 'm',\n    text: 'Metric system'\n  },\n  {\n    id: 'e',\n    text: 'Imperial system'\n  },\n     \n];\n\nconst handlelangchoice = (event) => {\n      //console.log(event.target.value);\n      setlang(event.target.value);\n}\nconst handleunitchoice = (event) => {\n      //console.log(event.target.value);\n      setunit(event.target.value);\n}\n  return (\n    <>\n\n    <Form onSubmit={handleSubmit}>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'latitude'} labelText = {'Latitude*'} invalid = {lterrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Latitude'} size = 'lg' value={latitude} onChange={validLatf} />\n       </div>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'longitude'} labelText = {'Longitude*'} invalid = {lngerrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Longitude'} size = 'lg' value={longitude} onChange={validLongf} />\n      </div>\n\n      <div className=\"TextArea\" >\n           <Select labelText=\"Choose units of measure\" size = \"lg\" value={unit} onChange={handleunitchoice}>\n          {unitset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n       </Select>\n      </div>\n      \n        <div className=\"TextArea\" >\n          <Select labelText=\"Choose Language\" size = \"lg\" value={lang} onChange={handlelangchoice}>\n          {langset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n          </Select>\n        </div>\n\n      \n      <div className=\"CButtonArea\" >\n        <Button type=\"submit\" disabled = {buttonstate}> Get Hourly History</Button>\n      </div>\n\n      </Form>\n\n  {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude  values cannot be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No data results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n\n      {/* {JSON.stringify(geocodeobj)} */}\n\n     {geocodeobj.items && \n         <div className = \"TableDisplay\">\n              {geocodeobj.items && \n          \n          <DataTable rows={geocodeobj.items} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Hourly History Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {refmtobj.map((row, index) => {\n                return (\n                    \n                      <TableRow key={index} >\n                        <TableCell>{row.day}</TableCell>\n                        <TableCell>{row.date}</TableCell>\n                        <TableCell>{row.time}</TableCell>\n                        <TableCell>{row.wx}</TableCell>\n                        <TableCell>{row.temp}</TableCell>\n                        <TableCell>{row.wdirection}</TableCell>\n                        <TableCell>{row.uv}</TableCell>\n                        <TableCell>{row.heatidx}</TableCell>\n                      </TableRow>\n                      \n\n                );\n                })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>} \n\n\n    </>\n  );\n};\n\nexport default Hourlyhistory;\n","import React, { useState, useEffect} from 'react';\nimport { Button, TextInput, Form, Loading, ToastNotification } from 'carbon-components-react';\nimport {DataTable,Table,TableHead,TableRow,TableHeader,TableBody,TableCell,TableContainer,Select,SelectItem} from 'carbon-components-react';\n\nfunction Almanac({maplat, maplong}) {\n\n  const [latitude, setlatitude] = useState('');\n  const [longitude, setlongitude] = useState('');\n  const [geocodeobj, setGeocodeobj] = useState({});\n  const [isLoading,setLoading] = useState(false);\n  \n  const [errtext, seterrtext] = useState('A valid value is required');\n  const [buttonstate, setbuttonstate] = useState(false);\n  const [lterrstate, setlterrstate] = useState(false);\n  const [lngerrstate, setlngerrstate] = useState(false);\n\n  const [err1status, seterr1status] = useState(false); \n  const [err2status, seterr2status] = useState(false);\n  const [err3status, seterr3status] = useState(false);\n\n  const [refmtobj, setrefmtobj] = useState({});\n  const [unit,setunit] = useState('m');\n  const [day,setday] = useState('7');\n  const [stday,setstday] = useState('01');\n  const [stmonth,setstmonth] = useState('01');\n\n\n      useEffect(() => {\n\n    function autofill() {\n      setlatitude(maplat);\n      setlongitude(maplong);\n      setlterrstate(false);\n      setlngerrstate(false)\n      setbuttonstate(false)\n    }\n    autofill();\n  }, [maplat,maplong]);\n  \n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setLoading(true);\n      \n\n  if (latitude && longitude) {\n\n        const locationstr = latitude.concat(',').concat(longitude);\n      \n        const geocode2 = async() => {\n\n        try{\n        \n          let apikey;\n\n          if(process.env.REACT_APP_mode === \"dev\"){\n            apikey = process.env.REACT_APP_WEATHER_API_KEY;\n          }\n          else{\n\n           let keyresponse = await fetch('/getapikey');\n           let keyresult = await keyresponse.json();\n           apikey = keyresult[\"apikey\"];\n\n          }\n\n            let response = await fetch(`https://api.weather.com/v3/wx/almanac/daily/${day}day?geocode=${locationstr}&units=${unit}&startDay=${stday}&startMonth=${stmonth}&format=json&apiKey=${apikey}`)\n            let result = await response.json();\n\n            const res = [];\n            for(let i = 0; i < result[\"almanacRecordDate\"].length; i++){\n                res.push({\n                  date: result[\"almanacRecordDate\"][i],\n                  yrmax: result[\"almanacRecordYearMax\"][i], \n                  yrmin: result[\"almanacRecordYearMin\"][i],\n                  precipavg: result[\"precipitationAverage\"][i],\n                  temprecmax: result[\"temperatureRecordMax\"][i],\n                  temprecmin: result[\"temperatureRecordMin\"][i]\n                });\n            }\n            setrefmtobj(res)\n\n            let formatter = {\"items\": [result]}\n            setGeocodeobj(formatter);\n            setLoading(false);\n\n        }\n        catch(error){\n            seterr2status(true);\n            setLoading(false);\n        }\n\n        }\n      geocode2();\n      setlatitude('');\n      setlongitude('');\n\n      }\n    \n      else {\n      seterr1status(true);\n      setLoading(false);\n    }\n  };\n\nconst headers = [\n  {\n    key: 'date',\n    header: 'Record Date',\n  },\n  {\n    key: 'yrmax',\n    header: 'Record Year Max',\n  },\n    {\n    key: 'yrmin',\n    header: 'Record Year Min',\n  },\n    {\n    key: 'precipavg',\n    header: 'Average Precipitation',\n  },\n    {\n    key: 'temprecmax',\n    header: 'Max Recorded Temperature',\n  },\n      {\n    key: 'temprecmin',\n    header: 'Min Recorded Temperature',\n  }\n\n];\n\nconst validLatf = (e) => {\n\n        if(!e.target.value.match(/^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?){2}$/)){\n              setlterrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlterrstate(false)\n            setbuttonstate(false)\n        }        \n    \n        setlatitude(e.target.value)\n    \n    \n}\nconst validLongf = (e) => {\n\n        if(!e.target.value.match(/^\\s*[-+]?(180(\\.0+)?|((1[0-7]\\d)|([1-9]?\\d))(\\.\\d+)?){2}$/)){\n              setlngerrstate(true)\n              seterrtext(\"Only valid co-ordinates allowed. No characters\");\n              setbuttonstate(true)\n           }\n        else{\n            setlngerrstate(false)\n            setbuttonstate(false)\n        }        \n\n        setlongitude(e.target.value)\n    \n    \n}\n\nfunction err1closef() {\n  seterr1status(false);\n}\nfunction err2closef() {\n  seterr2status(false);\n}\nfunction err3closef() {\n  seterr3status(false);\n}\n\nconst unitset = [\n  {\n    id: 'm',\n    text: 'Metric system'\n  },\n  {\n    id: 'e',\n    text: 'Imperial system'\n  },\n     \n];\n\nconst dayset = [\n  {\n    id: '5',\n    text: '5-day'\n  },\n    {\n    id: '7',\n    text: '7-day'\n  },\n    {\n    id: '10',\n    text: '10-day'\n  },\n    {\n    id: '15',\n    text: '15-day'\n  },\n    {\n    id: '30',\n    text: '30-day'\n  },\n    {\n    id: '45',\n    text: '45-day'\n  }\n     \n];\n\nconst stdayset = [\n  {\n    id: '01',\n    text: '1st'\n  },\n    {\n    id: '02',\n    text: '2nd'\n  },\n    {\n    id: '03',\n    text: '3rd'\n  },\n    {\n    id: '04',\n    text: '4th'\n  },\n    {\n    id: '05',\n    text: '5th'\n  },\n    {\n    id: '06',\n    text: '6th'\n  },\n      {\n    id: '07',\n    text: '7th'\n  },\n      {\n    id: '08',\n    text: '8th'\n  },\n      {\n    id: '09',\n    text: '9th'\n  },\n      {\n    id: '10',\n    text: '10th'\n  },\n      {\n    id: '11',\n    text: '11th'\n  },\n      {\n    id: '12',\n    text: '12th'\n  },\n      {\n    id: '13',\n    text: '13th'\n  },\n      {\n    id: '14',\n    text: '14th'\n  },\n      {\n    id: '15',\n    text: '15th'\n  },\n      {\n    id: '16',\n    text: '16th'\n  },\n      {\n    id: '17',\n    text: '17th'\n  },\n      {\n    id: '18',\n    text: '18th'\n  },\n      {\n    id: '19',\n    text: '19th'\n  },\n      {\n    id: '20',\n    text: '20th'\n  },\n      {\n    id: '21',\n    text: '21st'\n  },\n      {\n    id: '22',\n    text: '22nd'\n  },\n      {\n    id: '23',\n    text: '23th'\n  },\n      {\n    id: '24',\n    text: '24th'\n  },\n      {\n    id: '25',\n    text: '25th'\n  },\n      {\n    id: '26',\n    text: '26th'\n  },\n      {\n    id: '27',\n    text: '27th'\n  },\n      {\n    id: '28',\n    text: '28th'\n  },\n      {\n    id: '29',\n    text: '29th'\n  },\n      {\n    id: '30',\n    text: '30th'\n  },\n      {\n    id: '31',\n    text: '31st'\n  }\n];\nconst stmonthset = [\n  {\n    id: '01',\n    text: 'Jan'\n  },\n    {\n    id: '02',\n    text: 'Feb'\n  },\n    {\n    id: '03',\n    text: 'Mar'\n  },\n    {\n    id: '04',\n    text: 'Apr'\n  },\n    {\n    id: '05',\n    text: 'May'\n  },\n    {\n    id: '06',\n    text: 'Jun'\n  },\n      {\n    id: '07',\n    text: 'Jul'\n  },\n      {\n    id: '08',\n    text: 'Aug'\n  },\n      {\n    id: '09',\n    text: 'Sep'\n  },\n      {\n    id: '10',\n    text: 'Oct'\n  },\n      {\n    id: '11',\n    text: 'Nov'\n  },\n      {\n    id: '12',\n    text: 'Dec'\n  }   \n];\n\nconst handleunitchoice = (event) => {\n      setunit(event.target.value);\n}\nconst handledaychoice = (event) => {\n      setday(event.target.value);\n}\nconst handlestdaychoice = (event) => {\n      setstday(event.target.value);\n}\nconst handlestmonthchoice = (event) => {\n      setstmonth(event.target.value);\n}\n  return (\n    <>\n\n    <Form onSubmit={handleSubmit}>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'latitude'} labelText = {'Latitude*'} invalid = {lterrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Latitude'} size = 'lg' value={latitude} onChange={validLatf} />\n       </div>\n\n       <div className=\"TextArea\" >\n      <TextInput id={'longitude'} labelText = {'Longitude*'} invalid = {lngerrstate} invalidText = {errtext} helperText=\"Add valid co-ordinates.\" placeholder = {'Longitude'} size = 'lg' value={longitude} onChange={validLongf} />\n      </div>\n\n      <div className=\"TextArea\" >\n      <Select labelText=\"Choose number of days\" size = \"lg\" value={day} onChange={handledaychoice}>\n          {dayset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n      </Select>\n      </div>\n\n      <div className=\"TextArea\" >\n               <Select labelText=\"Choose units of measure\" size = \"lg\" value={unit} onChange={handleunitchoice}>\n          {unitset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n       </Select>\n      </div>\n\n\n      <div className=\"TextArea\" >\n                <Select labelText=\"Choose start day\" size = \"lg\" value={stday} onChange={handlestdaychoice}>\n          {stdayset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n      </Select>\n      </div>\n        \n      <div className=\"TextArea\" >\n                <Select labelText=\"Choose start month\" size = \"lg\" value={stmonth} onChange={handlestmonthchoice}>\n          {stmonthset.map((item, i) => (\n              <SelectItem value={item.id} key={i} text = {item.text} />\n                    ))}\n      </Select>\n      </div>\n        \n\n      <div className=\"CButtonArea\" >\n        <Button type=\"submit\" disabled = {buttonstate}> Get Almanac</Button>\n      </div>\n\n      </Form>\n\n  {err1status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Latitude, Longitude  values cannot be empty</span>}\n        timeout={3000}\n        onClose = {err1closef}\n        title=\"Error Notification\"\n      />\n      }\n  {err2status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>Server cannot be reached</span>}\n        timeout={3000}\n        onClose = {err2closef}\n        title=\"Error Notification\"\n      />\n      }\n  \n  {err3status && \n    <ToastNotification\n        iconDescription=\"Close notification\"\n        subtitle={<span>No data results available</span>}\n        timeout={3000}\n        onClose = {err3closef}\n        title=\"Error Notification\"\n      />\n      }\n\n      <Loading active = {isLoading} description=\"Active loading indicator\" withOverlay={true}/>\n\n     {geocodeobj.items && \n         <div className = \"TableDisplay\">\n              {geocodeobj.items && \n          \n          <DataTable rows={geocodeobj.items} headers={headers}>\n              {({ rows, headers, getHeaderProps}) => \n            (\n              <TableContainer title=\"Almanac Results\">\n                <Table>\n                  <TableHead>\n                    <TableRow>\n                      {headers.map((header) => (\n                        <TableHeader {...getHeaderProps({ header })}>\n                          {header.header}\n                        </TableHeader>\n                      ))}\n                    </TableRow>\n                  </TableHead>\n                  <TableBody>\n                    {refmtobj.map((row, index) => {\n                return (\n                    \n                      <TableRow key={index} >\n                        <TableCell>{row.date}</TableCell>\n                        <TableCell>{row.yrmax}</TableCell>\n                        <TableCell>{row.yrmin}</TableCell>\n                        <TableCell>{row.precipavg}</TableCell>\n                        <TableCell>{row.temprecmax}</TableCell>\n                        <TableCell>{row.temprecmin}</TableCell>\n                      </TableRow>\n                      \n\n                );\n                })}\n                  </TableBody>\n                </Table>\n                </TableContainer>\n            )\n                }\n          </DataTable>}\n\n        </div>} \n\n    </>\n  );\n};\n\nexport default Almanac;\n","/* eslint-disable */\nimport React, {useState} from 'react'\nimport './App.css';\nimport {Header,HeaderName} from \"carbon-components-react/lib/components/UIShell\";\nimport { Tabs, Tab } from 'carbon-components-react';\n\nimport Weekforecast from './components/weatherforecast';\nimport Hourlyforecast from './components/hourlyforecast';\nimport Intradayforecast from './components/intradayforecast';\nimport Dailyhistory from './components/dailyhist';\nimport Hourlyhistory from './components/hourlyhist';\nimport Almanac from './components/almanac';\n\n\nfunction App() {\n  \n    const [maplat,setmaplat] = useState('');\n    const [maplong, setmaplong] = useState('');\n\n  return (\n\n    <>\n    \n      <Header aria-label=\"IBM\">\n        <HeaderName prefix = \"\">\n          <div Style=\"white-space: nowrap;\">\n            Weather Data Assistant for Travel\n            </div>\n          </HeaderName>\n        </Header> \n\n    <div className=\"App\">\n     <div className = \"AppContent\">\n      <br/>\n      <br/>\n      <br/>\n      <br/>\n\n    <h2>Forecast Details</h2>\n      <br/>\n      <br/>\n\n    <Tabs type='container'>\n          <Tab id=\"tab-q1\" label=\"Daily Forecast\">\n            <div className=\"TabArea\">\n            <Weekforecast maplat = {maplat} maplong = {maplong}/>\n            </div>\n          </Tab>\n          <Tab id=\"tab-q2\" label=\"Hourly Forecast\">\n            <div className=\"TabArea\">\n            <Hourlyforecast maplat = {maplat} maplong = {maplong}/>\n            </div>\n          </Tab>\n           <Tab id=\"tab-q3\" label=\"Intraday Forecast\">\n             <div className=\"TabArea\">\n             <Intradayforecast maplat = {maplat} maplong = {maplong}/>\n             </div>\n          </Tab>\n    </Tabs>\n\n    <h2>Historical Forecast </h2>\n      <br/>\n      <br/>\n\n       <Tabs type='container'>\n          <Tab id=\"tab-q1\" label=\"Daily History\">\n            <div className=\"TabArea\">\n              <Dailyhistory maplat = {maplat} maplong = {maplong}/>\n            </div>\n          </Tab>\n          <Tab id=\"tab-q2\" label=\"Hourly History\">\n            <div className=\"TabArea\">\n            <Hourlyhistory maplat = {maplat} maplong = {maplong}/>\n            </div>\n          </Tab>\n\n           <Tab id=\"tab-q3\" label=\"Almanac\">\n            <div className=\"TabArea\">\n             <Almanac maplat = {maplat} maplong = {maplong} />\n            </div>\n          </Tab>\n    </Tabs>\n    \n    </div>\n    </div>  \n\n\n    </>\n\n    \n  )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.scss\";\nimport \"./style.scss\";\n\nReactDOM.render(<App />,\n  document.getElementById('root')\n);"],"sourceRoot":""}