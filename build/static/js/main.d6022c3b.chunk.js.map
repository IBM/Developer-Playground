{"version":3,"sources":["components/Chart.js","components/FileUpload.js","components/FetchResults.js","App.js","index.js"],"names":["Chart","data","lines","showAnomaly","time","CustomizedDot","props","cx","cy","payload","stroke","value","anomaly","x","y","width","height","fill","viewBox","d","className","ResponsiveContainer","LineChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","dataKey","domain","YAxis","Tooltip","Legend","map","line","color","Line","type","dot","lastId","uid","prefix","valid","FileUpload","accept","sendDataToParent","useState","files","setFiles","validSize","name","console","log","fileNameSplit","split","length","uploadFile","fileToUpload","a","JSON","stringify","filesize","updatedFile","status","iconDescription","invalid","errorSubject","errorBody","file","uuid","invalidFileType","fetch","method","mode","body","ok","Error","setTimeout","handleFileUploaderItemClick","useCallback","_","clickedUuid","filter","class","FileUploaderDropContainer","labelText","onAddFiles","evt","addedFiles","stopPropagation","newFiles","size","FormData","append","style","rest","FileUploaderItem","onDelete","FetchResults","jobId","getChartResults","loading","setLoading","state","text","setInvalid","showButton","setButton","currentJobId","setJobId","getResults","e","preventDefault","target","job_text","trim","axios","get","res","Form","onSubmit","TextInput","helperText","placeholder","invalidText","defaultValue","onChange","ButtonSet","Button","kind","marginLeft","onClick","window","open","Loading","active","overlay","anaomalyEstimator","WindowAD","ReconstructAD","RelationshipAD","App","setData","setLines","setAnomaly","showChart","setChart","showFileUploader","setFileUploader","columns","setColumns","showForm","setForm","showTarget","setTarget","showAnomalyEstimatorOptions","setAnomalyEstimatorOptions","showTextField","setTextField","targetParams","setTargetParams","timeColumnOptions","setTimeColumnOptions","showTimeColumn","setTimeColumn","setTime","anomalyEstimatorOptions","setAnomalyEstimator","targetInvalid","setTargetInvalid","LWInvalid","setLWInvalid","OWInvalid","setOWInvalid","LTInvalid","setLTInvalid","resetStates","Math","random","toString","substring","entries","post","Object","keys","getSample","slice","lineData","forEach","push","floor","columnNames","column","uploadData","formData","dataset_type","target_column","prediction_type","document","getElementById","innerText","toLowerCase","algorithm_type","anomaly_estimator","lookback_window","parseInt","lookback_window_custom_value","observation_window","labeling_method","labeling_threshold","time_column","Array","isNaN","Number","isInteger","href","whiteSpace","id","RadioButtonGroup","legendText","RadioButton","Dropdown","titleText","label","items","selectedItem","index","indexOf","idx","FormGroup","MultiSelect","itemToString","item","selectedItems","initialSelectedItem","ReactDOM","render"],"mappings":"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","file":"static/js/main.d6022c3b.chunk.js","sourcesContent":["import { LineChart, Line, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer } from 'recharts';\nimport React from \"react\";\n\nconst Chart = ({ data, lines, showAnomaly, time }) => {\n  const CustomizedDot = (props) => {\n    const { cx, cy, stroke, payload, value } = props;\n    if (payload.anomaly)\n      return (\n        <svg x={cx - 10} y={cy - 10} width={20} height={20} fill=\"red\" viewBox=\"0 0 1024 1024\">\n          <path d=\"M517.12 53.248q95.232 0 179.2 36.352t145.92 98.304 98.304 145.92 36.352 179.2-36.352 179.2-98.304 145.92-145.92 98.304-179.2 36.352-179.2-36.352-145.92-98.304-98.304-145.92-36.352-179.2 36.352-179.2 98.304-145.92 145.92-98.304 179.2-36.352zM663.552 261.12q-15.36 0-28.16 6.656t-23.04 18.432-15.872 27.648-5.632 33.28q0 35.84 21.504 61.44t51.2 25.6 51.2-25.6 21.504-61.44q0-17.408-5.632-33.28t-15.872-27.648-23.04-18.432-28.16-6.656zM373.76 261.12q-29.696 0-50.688 25.088t-20.992 60.928 20.992 61.44 50.688 25.6 50.176-25.6 20.48-61.44-20.48-60.928-50.176-25.088zM520.192 602.112q-51.2 0-97.28 9.728t-82.944 27.648-62.464 41.472-35.84 51.2q-1.024 1.024-1.024 2.048-1.024 3.072-1.024 8.704t2.56 11.776 7.168 11.264 12.8 6.144q25.6-27.648 62.464-50.176 31.744-19.456 79.36-35.328t114.176-15.872q67.584 0 116.736 15.872t81.92 35.328q37.888 22.528 63.488 50.176 17.408-5.12 19.968-18.944t0.512-18.944-3.072-7.168-1.024-3.072q-26.624-55.296-100.352-88.576t-176.128-33.28z\" />\n        </svg>\n      );\n    else\n      return null\n  };\n  return (\n    <div>\n      <h2 className=\"chart-result\">Results</h2>\n      <ResponsiveContainer className=\"chart-area\"width={\"100%\"} height={400}>\n        <LineChart\n          data={data}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 20,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey={time} domain={[\"dataMin\", \"dataMax\"]} />\n          <YAxis />\n          <Tooltip />\n          <Legend />\n          {lines.map(({line,color}) =>\n            <Line type=\"monotone\" dataKey={line} stroke={color} dot={showAnomaly ? <CustomizedDot /> : null} />\n          )}\n        </LineChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\nexport default Chart;","import { FileUploaderItem, FileUploaderDropContainer} from \"carbon-components-react\"\nimport React, { useState, useCallback} from \"react\";\nlet lastId = 0;\nfunction uid(prefix = \"id\") {\n    lastId++;\n    return `${prefix}${lastId}`;\n}\nlet valid = true\nconst FileUpload = ({ accept, sendDataToParent }) => {\n    const [files, setFiles] = useState([]);\n\n    const validSize = name => {\n        console.log(name)\n        let fileNameSplit = name.split('.')\n        let fileType = fileNameSplit[fileNameSplit.length - 1]\n        if(fileType === \"csv\")\n            return 5000000\n        else\n            return 10000000\n    }\n\n    const uploadFile = async (fileToUpload) => {\n        // file size validation\n        console.log(\"file to upload: \" + JSON.stringify(fileToUpload))\n        if (fileToUpload.filesize <= validSize(fileToUpload.name)) {\n            valid = true;\n        } else {\n            valid = false;\n            const updatedFile = {\n                ...fileToUpload,\n                status: \"edit\",\n                iconDescription: \"Delete file\",\n                invalid: true,\n                errorSubject: \"File size exceeds limit\",\n                errorBody: `Max file size is ${fileToUpload.name.split(\".\")[fileToUpload.name.split(\".\").length - 1] === \"csv\"?5:10}MB. Select a new file and try again.`,\n            };\n            setFiles((files) =>\n                files.map((file) =>\n                    file.uuid === fileToUpload.uuid ? updatedFile : file\n                )\n            );\n            return;\n        }\n        console.log(fileToUpload);\n        // file type validation\n        if (fileToUpload.invalidFileType) {\n            valid = false;\n            const updatedFile = {\n                ...fileToUpload,\n                status: \"edit\",\n                iconDescription: \"Delete file\",\n                invalid: true,\n                errorSubject: \"Invalid file type\",\n                errorBody: `\"${fileToUpload.name}\" does not have a valid file type.`,\n            };\n            setFiles((files) =>\n                files.map((file) =>\n                    file.uuid === fileToUpload.uuid ? updatedFile : file\n                )\n            );\n            return;\n        } else {\n            valid = true;\n        }\n        try {\n            const response = await fetch(\n                \"https://www.mocky.io/v2/5185415ba171ea3a00704eed?mocky-delay=1000ms\",\n                {\n                    method: \"POST\",\n                    mode: \"cors\",\n                    body: fileToUpload,\n                }\n            );\n            if (!response.ok) {\n                throw new Error(\"Network response was not ok\");\n            }\n            const updatedFile = {\n                ...fileToUpload,\n                status: \"complete\",\n                iconDescription: \"Upload complete\",\n            };\n            setFiles((files) =>\n                files.map((file) =>\n                    file.uuid === fileToUpload.uuid ? updatedFile : file\n                )\n            );\n\n            // show x icon after 1 second\n            setTimeout(() => {\n                const updatedFile = {\n                    ...fileToUpload,\n                    status: \"edit\",\n                    iconDescription: \"Remove file\",\n                };\n                setFiles((files) =>\n                    files.map((file) =>\n                        file.uuid === fileToUpload.uuid ? updatedFile : file\n                    )\n                );\n            }, 1000);\n        } catch (error) {\n            valid = false;\n            const updatedFile = {\n                ...fileToUpload,\n                status: \"edit\",\n                iconDescription: \"Upload failed\",\n                invalid: true,\n            };\n            setFiles((files) =>\n                files.map((file) =>\n                    file.uuid === fileToUpload.uuid ? updatedFile : file\n                )\n            );\n            //console.log(error);\n        }\n    };\n\n    const onAddFiles = (evt, { addedFiles }) => {\n        evt.stopPropagation();\n        const newFiles = addedFiles.map((file) => ({\n            uuid: uid(),\n            name: file.name,\n            filesize: file.size,\n            status: \"uploading\",\n            iconDescription: \"Uploading\",\n        }));\n        if (addedFiles[0]) {\n            setFiles([newFiles[0]]);\n            uploadFile(newFiles[0]);\n            if(valid){\n                const data = new FormData()\n                data.append('file', addedFiles[0])\n                sendDataToParent(data)\n            }\n        } else {\n            //console.log(\"No file uploaded\");\n        }\n    };\n\n    const handleFileUploaderItemClick = useCallback(\n        (_, { uuid: clickedUuid }) =>\n            setFiles(files.filter(({ uuid }) => clickedUuid !== uuid)),\n        [files]\n    );\n\n    return (\n        <div class=\"bx--form-item\">\n            <strong class=\"bx--file--label\">Upload File</strong>\n            <p class=\"bx--label-description\">Max file size is 10MB for .json and 5MB for .csv. Supported file types are .json and .csv.</p>\n            <FileUploaderDropContainer\n                labelText=\"Drag and drop here or click to upload\"\n                onAddFiles={onAddFiles}\n                accept={accept}\n            />\n            <div className=\"uploaded-files\" style={{ width: \"100%\" }}>\n                {files.map(\n                    ({\n                        uuid,\n                        name,\n                        filesize,\n                        status,\n                        iconDescription,\n                        invalid,\n                        ...rest\n                    }) => (\n                        <FileUploaderItem\n                            key={uid()}\n                            uuid={uuid}\n                            name={name}\n                            filesize={filesize}\n                            size=\"lg\"\n                            status={status}\n                            iconDescription={iconDescription}\n                            invalid={invalid}\n                            onDelete={handleFileUploaderItemClick}\n                            {...rest}\n                        />))}\n            </div>\n        </div>\n    )\n}\n\nexport default FileUpload;","import { TextInput, Button, Form, Loading, ButtonSet } from 'carbon-components-react';\nimport axios from 'axios';\nimport { useState } from \"react\"\nimport \"../App.css\"\n\nconst FetchResults = ({ jobId, getChartResults }) => {\n  const [loading, setLoading] = useState(false)\n  const [invalid, setInvalid] = useState({ state: false, text: \"\" })\n  const [showButton, setButton] = useState(false)\n  const [currentJobId, setJobId] = useState(\"\")\n  \n  const getResults = async (e) => {\n    e.preventDefault();\n    if (e.target.job_text.value.trim() === \"\") {\n      setInvalid({\n        state: true,\n        text: \"Please enter a Job ID\"\n      })\n    } else {\n      setLoading(true)\n      let res = await axios.get(`/result?jobid=${e.target.job_text.value}`)\n      setButton(true)\n      setJobId(e.target.job_text.value)\n      getChartResults(res.data)\n      setLoading(false)\n    }\n  }\n\n  const download = (e) => {\n    e.preventDefault();\n    window.open(`/download?jobid=${currentJobId}`)\n  }\n  return (<Form className=\"fetch-results\"onSubmit={getResults}>\n    <h3>Fetch Processed Results </h3>\n    <br />\n    <br />\n    <TextInput\n      name=\"job_text\"\n      size=\"lg\"\n      labelText={\"Fetch Results\"}\n      helperText={\"Save this Job ID for futher use\"}\n      placeholder={\"Job ID\"}\n      invalid={invalid.state}\n      invalidText={invalid.text}\n      defaultValue={jobId}\n      onChange={() => {setInvalid({ state: false, text: \"\" });setButton(false)}}\n    />\n    <br />\n    <ButtonSet >\n    <Button\n      kind=\"tertiary\"\n      type=\"submit\"\n    >\n      Fetch Results\n    </Button>\n    {showButton ? \n    <Button type=\"submit\" style={{marginLeft: \"14px\"}} onClick={download}> Download Results </Button>:null}\n    </ButtonSet>\n    <Loading active={loading} overlay={true} />\n  </Form>)\n}\n\nexport default FetchResults","import { MultiSelect, RadioButton, RadioButtonGroup, FormGroup, Dropdown, TextInput, Button, Loading} from 'carbon-components-react';\nimport Chart from './components/Chart'\nimport { Header, HeaderName } from \"carbon-components-react/lib/components/UIShell\";\nimport { useState } from 'react'\nimport axios from 'axios'\nimport './App.css'\nimport FileUpload from './components/FileUpload';\nimport FetchResults from './components/FetchResults';\n\n\nconst anaomalyEstimator = {\n  WindowAD: ['IsolationForest', 'NearestNeighbor', 'SyntheticRandomForestTrainer', 'MinCovDet', 'AnomalyEnsembler'],\n  ReconstructAD: ['Covariance', 'GMM_L0', 'GMM_L1', 'MachineTranslation'],\n  RelationshipAD: ['IDD_AutoEncoder', 'Seq2seq_AutoEncoder', 'CNNAutoEncoder', 'GAN']\n}\n\nfunction App() {\n  const [data, setData] = useState([])\n  const [lines, setLines] = useState([])\n  const [showAnomaly, setAnomaly] = useState(false)\n  const [showChart, setChart] = useState(false)\n  const [showFileUploader, setFileUploader] = useState(false)\n  const [columns, setColumns] = useState([])\n  const [showForm, setForm] = useState(false)\n  const [showTarget, setTarget] = useState(false)\n  const [showAnomalyEstimatorOptions, setAnomalyEstimatorOptions] = useState(false)\n  const [showTextField, setTextField] = useState(false)\n  const [targetParams, setTargetParams] = useState([])\n  const [loading, setLoading] = useState(false)\n  const [timeColumnOptions, setTimeColumnOptions] = useState([])\n  const [showTimeColumn, setTimeColumn] = useState(false)\n  const [time, setTime] = useState(\"\")\n  const [anomalyEstimatorOptions, setAnomalyEstimator] = useState([])\n  const [jobId, setJobId] = useState(\"\")\n  const [targetInvalid, setTargetInvalid] = useState({ state: false, text: \"\" })\n  const [LWInvalid, setLWInvalid] = useState({ state: false, text: \"\" })\n  const [OWInvalid, setOWInvalid] = useState({ state: false, text: \"\" })\n  const [LTInvalid, setLTInvalid] = useState({ state: false, text: \"\" })\n\n\n  const resetStates = () => {\n    setTargetInvalid({state: false, text: \"\" })\n    setLWInvalid({state: false, text: \"\" })\n    setOWInvalid({ state:false, text: \"\" })\n    setLTInvalid({state: false, text: \"\" })\n    setTimeColumnOptions([])\n    setChart(false)\n    setTimeColumn(false)\n    setLines([])\n  }\n\n  const sendDataToParent = async (data) => {\n    resetStates()\n    data.append('name',Math.random().toString(36).substring(2,13))\n    console.log(data.entries())\n    const res = await axios.post(\"/upload\", data, {})\n    setData(res.data)\n    setTimeColumn(true)\n    setTimeColumnOptions(Object.keys(res.data[0]))\n    setForm(false)\n  }\n\n  const getSample = async (e) => {\n    resetStates()\n    let res = await axios.get('/sampledata')\n    setData(res.data)\n    setChart(true)\n    setTimeColumn(false)\n    let lines = Object.keys(res.data[0]).slice(1)\n    let lineData = []\n    lines.forEach(line => {\n      lineData.push({\n        line,\n        color: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n      })\n    })\n    setLines(lineData)\n    setFileUploader(false)\n    let columnNames = Object.keys(res.data[0]).slice(1)\n    console.log(columnNames, Object.keys(res.data[0]))\n    let columns = []\n    columnNames.forEach(column => {\n      columns.push({\n        name: column\n      })\n    })\n    setColumns(columns)\n    setForm(true)\n    if (columns.length === 1) {\n      setTarget(false)\n    } else {\n      setTarget(true)\n    }\n    setAnomaly(false)\n  }\n\n  const showDragDrop = () => {\n    setFileUploader(true)\n    setChart(false)\n    setForm(false)\n    //setTargetParams([])\n    //setTimeColumnOptions([])\n  }\n\n  const showTextInput = ({ selectedItem }) => {\n    if (selectedItem === \"Custom\")\n      setTextField(true)\n    else\n      setTextField(false)\n\n  }\n\n  const setTargetParameters = ({ selectedItem }) => {\n    const index = timeColumnOptions.indexOf(selectedItem)\n    let columns = []\n    let lines = []\n    timeColumnOptions.forEach((column, idx) => {\n      if (idx !== index) {\n        columns.push({\n          name: column\n        })\n        let color = `#${Math.floor(Math.random() * 16777215).toString(16)}`\n        while (color === \"#ffffff\")\n          color = `#${Math.floor(Math.random() * 16777215).toString(16)}`\n        lines.push({\n          line: column,\n          color\n        })\n      }\n    })\n    setColumns(columns)\n    setChart(true)\n    setLines(lines)\n    setForm(true)\n    if (timeColumnOptions.length === 2) {\n      setTarget(false)\n    } else {\n      setTarget(true)\n    }\n    setAnomaly(false)\n    setTime(selectedItem)\n  }\n\n  const uploadData = async (e) => {\n    e.preventDefault()\n    console.log(e)\n    let formData = {}\n    formData.dataset_type = e.target.dataset_type.value\n    if (columns.length === 1) {\n      formData.target_column = columns[0].name\n    } else {\n      formData.target_column = targetParams\n    }\n    formData.prediction_type = document.getElementById(\"prediction_type\").innerText.toLowerCase()\n    formData.algorithm_type = document.getElementById(\"algorithm_type\").innerText\n    console.log(formData.algorithm_type === \"DeepAD\")\n    if (formData.algorithm_type !== \"DeepAD\" && formData.algorithm_type !== \"PredAD\")\n      formData.anomaly_estimator = document.getElementById(\"anomaly_estimator\").innerText\n    else\n      formData.anomaly_estimator = 'Default'\n    formData.lookback_window = document.getElementById(\"lookback_window\").innerText.toLowerCase()\n    if (formData.lookback_window === 'custom')\n      formData.lookback_window = parseInt(e.target.lookback_window_custom_value.value)\n    formData.observation_window = parseInt(e.target.observation_window.value)\n    formData.labeling_method = document.getElementById(\"labeling_method\").innerText\n    formData.labeling_threshold = parseInt(e.target.labeling_threshold.value)\n    formData.time_column = time\n    //formData.recent_data = parseInt(e.target.recent_data.value)\n    console.log(formData)\n    let valid = true\n    if (typeof(formData.target_column) ===Array && formData.target_column.length === 0) {\n      setTargetInvalid({ state: true, text: \"Please select some options\" })\n      valid = false\n    }\n    if (formData.lookback_window !== 'auto' && (isNaN(formData.lookback_window) || formData.lookback_window > 50 || formData.lookback_window < 1 || !Number.isInteger(formData.lookback_window))) {\n      setLWInvalid({ state: true, text: \"Please enter an integer between 1 and 50\" })\n      valid = false\n    }\n    if(isNaN(formData.observation_window) || formData.observation_window < 1 || !Number.isInteger(formData.observation_window)){\n      setOWInvalid({ state: true, text: \"Please enter an integer > 0\" })\n      valid = false\n    }\n    if(isNaN(formData.labeling_threshold) || formData.labeling_threshold < 1 || !Number.isInteger(formData.labeling_threshold)){\n      setLTInvalid({ state: true, text: \"Please enter an integer > 0\" })\n      valid = false\n    }\n    console.log(valid)\n    if (valid) {\n      setLoading(true)\n      let res = await axios.post('/detect', JSON.stringify(formData), {\n        \"headers\": {\n          \"content-type\": \"application/json\",\n        }\n      })\n      setLoading(false)\n      setJobId(res.data)\n      /*setData(res.data)\n      setLines([...lines, {\n        line: \"anomaly_score\",\n        color: \"#000000\"\n      }])\n      setAnomaly(true)*/\n    }\n  }\n\n  const changeAnomalyEstimatorOptions = ({ selectedItem }) => {\n    setAnomalyEstimatorOptions(false)\n    setTimeout(() => {\n      if (selectedItem !== `DeepAD` && selectedItem !== `PredAD`) {\n        setAnomalyEstimator(anaomalyEstimator[selectedItem])\n        setAnomalyEstimatorOptions(true)\n      } else {\n        setAnomalyEstimatorOptions(false)\n      }\n    }, 1)\n  }\n\n  const getChartResults = (data) => {\n    setData(data)\n    let lines = Object.keys(data[0]).slice(1)\n    let lineData = []\n    lines.forEach(line => {\n      if(line !== \"anomaly\")\n        lineData.push({\n          line,\n          color: `#${Math.floor(Math.random() * 16777215).toString(16)}`\n        })\n    })\n    setLines(lineData)\n    setAnomaly(true)\n    setChart(true)\n    setForm(false)\n  }\n  return (\n    <div className=\"app\">\n      <Header aria-label=\"IBM\">\n        <HeaderName href=\"#\" prefix=\"\">\n          <div style={{ whiteSpace: \"nowrap\" }}>\n            Anomaly Detection Sample Application\n          </div>\n        </HeaderName>\n      </Header>\n      <br /><br /><br /><br />\n      <div className=\"app-header\">\n        <h2>Anomaly Detection</h2>\n      </div>\n      <form id=\"form-data\" onSubmit={uploadData} >\n        <div className=\"app-content\">\n          <RadioButtonGroup\n            legendText=\"Choose the type of Dataset\"\n            name=\"dataset_type\"\n          >\n            <RadioButton\n              labelText=\"Upload your Dataset\"\n              value=\"customdt\"\n              id=\"customdt\"\n              onClick={showDragDrop}\n            />\n            <RadioButton\n              labelText=\"Use Sample Dataset\"\n              value=\"sampledt\"\n              id=\"sampledt\"\n              onClick={getSample}\n            />\n          </RadioButtonGroup></div>\n        {showFileUploader ?\n          <FileUpload accept=\".json, .csv\" sendDataToParent={sendDataToParent} />\n          : null}\n\n        {showTimeColumn ? <div>\n          <p className=\"others\">Time Column</p>\n          <Dropdown\n            id=\"time_column\"\n            titleText=\"Select Value\"\n            label=\"Choose an Option\"\n            items={timeColumnOptions}\n            onChange={setTargetParameters} /> </div> : null}\n        {showChart ?\n          <Chart data={data} lines={lines} showAnomaly={showAnomaly} time={time} />\n          : null}\n        {showForm ?\n          <FormGroup>\n            {showTarget ? <div>\n              <p className=\"target\">Target Parameters</p>\n              <MultiSelect\n                id=\"target_columns\"\n                titleText=\"Select Value\"\n                label=\"Select Options\"\n                items={columns}\n                itemToString={(item) => (item ? item.name : '')}\n                onChange={({ selectedItems }) => {\n                  setTargetParams(selectedItems)\n                  setTargetInvalid({ state: false, text: \"\" })\n                }}\n                invalid={targetInvalid.state}\n                invalidText={targetInvalid.text}\n              /> </div> : null}\n            {/*<p className=\"others\">Recent Data</p>\n            <TextInput name=\"recent_data\" type=\"number\" labelText=\"Add Value\" helperText=\"Add numbers (30% of data-size)\" defaultValue=\"1\" />*/}\n            <p className=\"others\">Prediction Type</p>\n            <Dropdown\n              id=\"prediction_type\"\n              titleText=\"Select Value\"\n              label=\"Choose an Option\"\n              initialSelectedItem=\"Entire\"\n              items={[\"Enitre\", \"Recent\"]} />\n            <p className=\"others\">Algorithm Type</p>\n            <Dropdown\n              id=\"algorithm_type\"\n              titleText=\"Select Value\"\n              label=\"Select Options\"\n              items={['DeepAD', 'WindowAD', 'PredAD', 'ReconstructAD', 'RelationshipAD']}\n              initialSelectedItem=\"DeepAD\"\n              onChange={changeAnomalyEstimatorOptions} />\n            {showAnomalyEstimatorOptions ?\n              <div className=\"hidden-options\">\n                <Dropdown\n                  id=\"anomaly_estimator\"\n                  titleText=\"Select Value\"\n                  label=\"Select Options\"\n                  initialSelectedItem={anomalyEstimatorOptions[0]}\n                  items={anomalyEstimatorOptions}\n                /></div>\n              : null}\n            <p className=\"others\">Loopback Window</p>\n            <Dropdown\n              id=\"lookback_window\"\n              titleText=\"Select Value\"\n              items={['Auto', 'Custom']}\n              initialSelectedItem=\"Auto\"\n              onChange={showTextInput}\n            />\n            {showTextField ?\n              <div className=\"hidden-options\">\n                <TextInput\n                  name=\"lookback_window_custom_value\"\n                  type=\"number\" labelText=\"Add Value\"\n                  helperText=\"Add numbers (Max.50)\"\n                  defaultValue=\"10\"\n                  invalid={LWInvalid.state}\n                  invalidText={LWInvalid.text}\n                  onChange={() => setLWInvalid({ state: false, text: \"\" })} />\n              </div> : null}\n            <p className=\"others\">Observation Window</p>\n            <TextInput\n              name=\"observation_window\"\n              type=\"number\"\n              labelText=\"Add Value\"\n              helperText=\"Add numbers (10% of data-size)\"\n              defaultValue=\"10\"\n              invalid={OWInvalid.state}\n              invalidText={OWInvalid.text}\n              onChange={() => setOWInvalid({ state: false, text: \"\" })} />\n            <p className=\"others\">Labeling Method</p>\n            <Dropdown\n              id=\"labeling_method\"\n              titleText=\"Select Value\"\n              label=\"Select Options\"\n              items={['Chi-Square', 'IID', 'Q-Score', 'Sliding-Window', 'Adaptive-Sliding-Window', 'Contextual-Anomaly']}\n              initialSelectedItem=\"IID\"\n            />\n            <p className=\"others\">Labelling Threshold</p>\n            <TextInput\n              name=\"labeling_threshold\"\n              type=\"number\" labelText=\"Add Value\"\n              helperText=\"Add numbers\"\n              defaultValue=\"10\"\n              invalid={LTInvalid.state}\n              invalidText={LTInvalid.text}\n              onChange={() => setLTInvalid({ state: false, text: \"\" })} />\n            <div className=\"hidden-options\">\n              <Button type=\"submit\">Submit</Button>\n              <Loading active={loading} overlay={true} />\n            </div>\n          </FormGroup> : null}\n      </form>\n      <br />\n      <FetchResults jobId={jobId} getChartResults = {getChartResults}/>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.scss\";\nimport \"./style.scss\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}