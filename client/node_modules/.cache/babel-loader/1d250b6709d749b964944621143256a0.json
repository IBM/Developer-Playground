{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nvar prefix = settings.prefix;\n/**\n * The AspectRatio component provides a `ratio` prop that will be used to\n * specify the aspect ratio that the children you provide will be displayed in.\n * This is often useful alongside our grid components, or for media assets like\n * images or videos.\n */\n\nfunction AspectRatio(_ref) {\n  var _ref$as = _ref.as,\n      BaseComponent = _ref$as === void 0 ? 'div' : _ref$as,\n      containerClassName = _ref.className,\n      children = _ref.children,\n      _ref$ratio = _ref.ratio,\n      ratio = _ref$ratio === void 0 ? '1x1' : _ref$ratio,\n      rest = _objectWithoutProperties(_ref, [\"as\", \"className\", \"children\", \"ratio\"]);\n\n  var className = cx(containerClassName, \"\".concat(prefix, \"--aspect-ratio\"), \"\".concat(prefix, \"--aspect-ratio--\").concat(ratio));\n  return /*#__PURE__*/React.createElement(BaseComponent, _extends({\n    className: className\n  }, rest), children);\n}\n\nAspectRatio.propTypes = {\n  /**\n   * Provide a custom component or string to be rendered as the outermost node\n   * of the component. This is useful if you want to deviate from the default\n   * `div` tag, where you could specify `section` or `article` instead.\n   *\n   * ```jsx\n   * <AspectRatio as=\"article\">My content</AspectRatio>\n   * ```\n   */\n  as: PropTypes.elementType,\n\n  /**\n   * Specify the content that will be placed in the aspect ratio\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a class name for the outermost node of the component\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the ratio to be used by the aspect ratio container. This will\n   * determine what aspect ratio your content will be displayed in.\n   */\n  ratio: PropTypes.oneOf(['16x9', '9x16', '2x1', '1x2', '4x3', '3x4', '1x1'])\n};\nexport default AspectRatio;","map":{"version":3,"sources":["/Users/nupurnegi/Desktop/UI_ongoingChanges/Developer-Playground/client/node_modules/carbon-components-react/es/components/AspectRatio/AspectRatio.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","settings","cx","PropTypes","React","prefix","AspectRatio","_ref","_ref$as","as","BaseComponent","containerClassName","className","children","_ref$ratio","ratio","rest","concat","createElement","propTypes","elementType","node","string","oneOf"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nvar prefix = settings.prefix;\n/**\n * The AspectRatio component provides a `ratio` prop that will be used to\n * specify the aspect ratio that the children you provide will be displayed in.\n * This is often useful alongside our grid components, or for media assets like\n * images or videos.\n */\n\nfunction AspectRatio(_ref) {\n  var _ref$as = _ref.as,\n      BaseComponent = _ref$as === void 0 ? 'div' : _ref$as,\n      containerClassName = _ref.className,\n      children = _ref.children,\n      _ref$ratio = _ref.ratio,\n      ratio = _ref$ratio === void 0 ? '1x1' : _ref$ratio,\n      rest = _objectWithoutProperties(_ref, [\"as\", \"className\", \"children\", \"ratio\"]);\n\n  var className = cx(containerClassName, \"\".concat(prefix, \"--aspect-ratio\"), \"\".concat(prefix, \"--aspect-ratio--\").concat(ratio));\n  return /*#__PURE__*/React.createElement(BaseComponent, _extends({\n    className: className\n  }, rest), children);\n}\n\nAspectRatio.propTypes = {\n  /**\n   * Provide a custom component or string to be rendered as the outermost node\n   * of the component. This is useful if you want to deviate from the default\n   * `div` tag, where you could specify `section` or `article` instead.\n   *\n   * ```jsx\n   * <AspectRatio as=\"article\">My content</AspectRatio>\n   * ```\n   */\n  as: PropTypes.elementType,\n\n  /**\n   * Specify the content that will be placed in the aspect ratio\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify a class name for the outermost node of the component\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the ratio to be used by the aspect ratio container. This will\n   * determine what aspect ratio your content will be displayed in.\n   */\n  ratio: PropTypes.oneOf(['16x9', '9x16', '2x1', '1x2', '4x3', '3x4', '1x1'])\n};\nexport default AspectRatio;"]},"metadata":{},"sourceType":"module"}