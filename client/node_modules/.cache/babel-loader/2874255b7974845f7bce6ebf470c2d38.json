{"ast":null,"code":"function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar prefix = settings.prefix;\n\nvar HeaderSideNavItems = function HeaderSideNavItems(_ref) {\n  var _cx;\n\n  var customClassName = _ref.className,\n      children = _ref.children,\n      hasDivider = _ref.hasDivider;\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__header-navigation\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__header-divider\"), hasDivider), _cx), customClassName);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, children);\n};\n\nHeaderSideNavItems.propTypes = {\n  /**\n   * The child nodes to be rendered\n   */\n  children: PropTypes.node,\n\n  /**\n   * Optionally provide a custom class name that is applied to the underlying\n   * button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally specify if container will have a bottom divider to differentiate\n   * between original sidenav items and header menu items. False by default.\n   */\n  hasDivider: PropTypes.bool\n};\nHeaderSideNavItems.defaultProps = {\n  hasDivider: false\n};\nexport default HeaderSideNavItems;","map":{"version":3,"sources":["/Users/nupurnegi/Desktop/UI_ongoingChanges/Developer-Playground/client/node_modules/carbon-components-react/es/components/UIShell/HeaderSideNavItems.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","settings","cx","React","PropTypes","prefix","HeaderSideNavItems","_ref","_cx","customClassName","className","children","hasDivider","concat","createElement","propTypes","node","string","bool","defaultProps"],"mappings":"AAAA,SAASA,eAAT,CAAyBC,GAAzB,EAA8BC,GAA9B,EAAmCC,KAAnC,EAA0C;AAAE,MAAID,GAAG,IAAID,GAAX,EAAgB;AAAEG,IAAAA,MAAM,CAACC,cAAP,CAAsBJ,GAAtB,EAA2BC,GAA3B,EAAgC;AAAEC,MAAAA,KAAK,EAAEA,KAAT;AAAgBG,MAAAA,UAAU,EAAE,IAA5B;AAAkCC,MAAAA,YAAY,EAAE,IAAhD;AAAsDC,MAAAA,QAAQ,EAAE;AAAhE,KAAhC;AAA0G,GAA5H,MAAkI;AAAEP,IAAAA,GAAG,CAACC,GAAD,CAAH,GAAWC,KAAX;AAAmB;;AAAC,SAAOF,GAAP;AAAa;AAEjN;AACA;AACA;AACA;AACA;AACA;;;AACA,SAASQ,QAAT,QAAyB,mBAAzB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,IAAIC,MAAM,GAAGJ,QAAQ,CAACI,MAAtB;;AAEA,IAAIC,kBAAkB,GAAG,SAASA,kBAAT,CAA4BC,IAA5B,EAAkC;AACzD,MAAIC,GAAJ;;AAEA,MAAIC,eAAe,GAAGF,IAAI,CAACG,SAA3B;AAAA,MACIC,QAAQ,GAAGJ,IAAI,CAACI,QADpB;AAAA,MAEIC,UAAU,GAAGL,IAAI,CAACK,UAFtB;AAGA,MAAIF,SAAS,GAAGR,EAAE,EAAEM,GAAG,GAAG,EAAN,EAAUhB,eAAe,CAACgB,GAAD,EAAM,GAAGK,MAAH,CAAUR,MAAV,EAAkB,+BAAlB,CAAN,EAA0D,IAA1D,CAAzB,EAA0Fb,eAAe,CAACgB,GAAD,EAAM,GAAGK,MAAH,CAAUR,MAAV,EAAkB,4BAAlB,CAAN,EAAuDO,UAAvD,CAAzG,EAA6KJ,GAA/K,GAAqLC,eAArL,CAAlB;AACA,SAAO,aAAaN,KAAK,CAACW,aAAN,CAAoB,KAApB,EAA2B;AAC7CJ,IAAAA,SAAS,EAAEA;AADkC,GAA3B,EAEjBC,QAFiB,CAApB;AAGD,CAVD;;AAYAL,kBAAkB,CAACS,SAAnB,GAA+B;AAC7B;AACF;AACA;AACEJ,EAAAA,QAAQ,EAAEP,SAAS,CAACY,IAJS;;AAM7B;AACF;AACA;AACA;AACEN,EAAAA,SAAS,EAAEN,SAAS,CAACa,MAVQ;;AAY7B;AACF;AACA;AACA;AACEL,EAAAA,UAAU,EAAER,SAAS,CAACc;AAhBO,CAA/B;AAkBAZ,kBAAkB,CAACa,YAAnB,GAAkC;AAChCP,EAAAA,UAAU,EAAE;AADoB,CAAlC;AAGA,eAAeN,kBAAf","sourcesContent":["function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nvar prefix = settings.prefix;\n\nvar HeaderSideNavItems = function HeaderSideNavItems(_ref) {\n  var _cx;\n\n  var customClassName = _ref.className,\n      children = _ref.children,\n      hasDivider = _ref.hasDivider;\n  var className = cx((_cx = {}, _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__header-navigation\"), true), _defineProperty(_cx, \"\".concat(prefix, \"--side-nav__header-divider\"), hasDivider), _cx), customClassName);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: className\n  }, children);\n};\n\nHeaderSideNavItems.propTypes = {\n  /**\n   * The child nodes to be rendered\n   */\n  children: PropTypes.node,\n\n  /**\n   * Optionally provide a custom class name that is applied to the underlying\n   * button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally specify if container will have a bottom divider to differentiate\n   * between original sidenav items and header menu items. False by default.\n   */\n  hasDivider: PropTypes.bool\n};\nHeaderSideNavItems.defaultProps = {\n  hasDivider: false\n};\nexport default HeaderSideNavItems;"]},"metadata":{},"sourceType":"module"}