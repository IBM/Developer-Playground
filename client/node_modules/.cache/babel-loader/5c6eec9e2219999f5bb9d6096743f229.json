{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nvar prefix = settings.prefix;\n\nvar SideNavItems = function SideNavItems(_ref) {\n  var customClassName = _ref.className,\n      children = _ref.children,\n      isSideNavExpanded = _ref.isSideNavExpanded;\n  var className = cx([\"\".concat(prefix, \"--side-nav__items\")], customClassName);\n  var childrenWithExpandedState = React.Children.map(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isSideNavExpanded: isSideNavExpanded\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: className\n  }, childrenWithExpandedState);\n};\n\nSideNavItems.propTypes = {\n  /**\n   * Provide a single icon as the child to `SideNavIcon` to render in the\n   * container\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Property to indicate if the side nav container is open (or not). Use to\n   * keep local state and styling in step with the SideNav expansion state.\n   */\n  isSideNavExpanded: PropTypes.bool\n};\nexport default SideNavItems;","map":{"version":3,"sources":["/Users/nupurnegi/Desktop/UI_ongoingChanges/Developer-Playground/client/node_modules/carbon-components-react/es/components/UIShell/SideNavItems.js"],"names":["settings","cx","PropTypes","React","prefix","SideNavItems","_ref","customClassName","className","children","isSideNavExpanded","concat","childrenWithExpandedState","Children","map","child","isValidElement","cloneElement","createElement","propTypes","node","isRequired","string","bool"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,mBAAzB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,IAAIC,MAAM,GAAGJ,QAAQ,CAACI,MAAtB;;AAEA,IAAIC,YAAY,GAAG,SAASA,YAAT,CAAsBC,IAAtB,EAA4B;AAC7C,MAAIC,eAAe,GAAGD,IAAI,CAACE,SAA3B;AAAA,MACIC,QAAQ,GAAGH,IAAI,CAACG,QADpB;AAAA,MAEIC,iBAAiB,GAAGJ,IAAI,CAACI,iBAF7B;AAGA,MAAIF,SAAS,GAAGP,EAAE,CAAC,CAAC,GAAGU,MAAH,CAAUP,MAAV,EAAkB,mBAAlB,CAAD,CAAD,EAA2CG,eAA3C,CAAlB;AACA,MAAIK,yBAAyB,GAAGT,KAAK,CAACU,QAAN,CAAeC,GAAf,CAAmBL,QAAnB,EAA6B,UAAUM,KAAV,EAAiB;AAC5E,SAAK,aAAaZ,KAAK,CAACa,cAAN,CAAqBD,KAArB,CAAlB,EAA+C;AAC7C,aAAO,aAAaZ,KAAK,CAACc,YAAN,CAAmBF,KAAnB,EAA0B;AAC5CL,QAAAA,iBAAiB,EAAEA;AADyB,OAA1B,CAApB;AAGD;AACF,GAN+B,CAAhC;AAOA,SAAO,aAAaP,KAAK,CAACe,aAAN,CAAoB,IAApB,EAA0B;AAC5CV,IAAAA,SAAS,EAAEA;AADiC,GAA1B,EAEjBI,yBAFiB,CAApB;AAGD,CAfD;;AAiBAP,YAAY,CAACc,SAAb,GAAyB;AACvB;AACF;AACA;AACA;AACEV,EAAAA,QAAQ,EAAEP,SAAS,CAACkB,IAAV,CAAeC,UALF;;AAOvB;AACF;AACA;AACEb,EAAAA,SAAS,EAAEN,SAAS,CAACoB,MAVE;;AAYvB;AACF;AACA;AACA;AACEZ,EAAAA,iBAAiB,EAAER,SAAS,CAACqB;AAhBN,CAAzB;AAkBA,eAAelB,YAAf","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nvar prefix = settings.prefix;\n\nvar SideNavItems = function SideNavItems(_ref) {\n  var customClassName = _ref.className,\n      children = _ref.children,\n      isSideNavExpanded = _ref.isSideNavExpanded;\n  var className = cx([\"\".concat(prefix, \"--side-nav__items\")], customClassName);\n  var childrenWithExpandedState = React.Children.map(children, function (child) {\n    if ( /*#__PURE__*/React.isValidElement(child)) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        isSideNavExpanded: isSideNavExpanded\n      });\n    }\n  });\n  return /*#__PURE__*/React.createElement(\"ul\", {\n    className: className\n  }, childrenWithExpandedState);\n};\n\nSideNavItems.propTypes = {\n  /**\n   * Provide a single icon as the child to `SideNavIcon` to render in the\n   * container\n   */\n  children: PropTypes.node.isRequired,\n\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Property to indicate if the side nav container is open (or not). Use to\n   * keep local state and styling in step with the SideNav expansion state.\n   */\n  isSideNavExpanded: PropTypes.bool\n};\nexport default SideNavItems;"]},"metadata":{},"sourceType":"module"}