{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport SideNavIcon from './SideNavIcon';\nvar prefix = settings.prefix;\n\nvar SideNavHeader = function SideNavHeader(_ref) {\n  var customClassName = _ref.className,\n      children = _ref.children,\n      IconElement = _ref.renderIcon;\n  var className = cx(\"\".concat(prefix, \"--side-nav__header\"), customClassName);\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: className\n  }, /*#__PURE__*/React.createElement(SideNavIcon, null, /*#__PURE__*/React.createElement(IconElement, null)), children);\n};\n\nSideNavHeader.propTypes = {\n  /**\n   * The child nodes to be rendered\n   */\n  children: PropTypes.node,\n\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Property to indicate if the side nav container is open (or not). Use to\n   * keep local state and styling in step with the SideNav expansion state.\n   */\n  isSideNavExpanded: PropTypes.bool,\n\n  /**\n   * Provide an icon to render in the header of the side navigation. Should be\n   * a React class.\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired\n};\nexport default SideNavHeader;","map":{"version":3,"sources":["/Users/nupurnegi/Desktop/UI_ongoingChanges/Developer-Playground/client/node_modules/carbon-components-react/es/components/UIShell/SideNavHeader.js"],"names":["settings","cx","PropTypes","React","SideNavIcon","prefix","SideNavHeader","_ref","customClassName","className","children","IconElement","renderIcon","concat","createElement","propTypes","node","string","isSideNavExpanded","bool","oneOfType","func","object","isRequired"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,QAAT,QAAyB,mBAAzB;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,IAAIC,MAAM,GAAGL,QAAQ,CAACK,MAAtB;;AAEA,IAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,IAAvB,EAA6B;AAC/C,MAAIC,eAAe,GAAGD,IAAI,CAACE,SAA3B;AAAA,MACIC,QAAQ,GAAGH,IAAI,CAACG,QADpB;AAAA,MAEIC,WAAW,GAAGJ,IAAI,CAACK,UAFvB;AAGA,MAAIH,SAAS,GAAGR,EAAE,CAAC,GAAGY,MAAH,CAAUR,MAAV,EAAkB,oBAAlB,CAAD,EAA0CG,eAA1C,CAAlB;AACA,SAAO,aAAaL,KAAK,CAACW,aAAN,CAAoB,QAApB,EAA8B;AAChDL,IAAAA,SAAS,EAAEA;AADqC,GAA9B,EAEjB,aAAaN,KAAK,CAACW,aAAN,CAAoBV,WAApB,EAAiC,IAAjC,EAAuC,aAAaD,KAAK,CAACW,aAAN,CAAoBH,WAApB,EAAiC,IAAjC,CAApD,CAFI,EAEyFD,QAFzF,CAApB;AAGD,CARD;;AAUAJ,aAAa,CAACS,SAAd,GAA0B;AACxB;AACF;AACA;AACEL,EAAAA,QAAQ,EAAER,SAAS,CAACc,IAJI;;AAMxB;AACF;AACA;AACEP,EAAAA,SAAS,EAAEP,SAAS,CAACe,MATG;;AAWxB;AACF;AACA;AACA;AACEC,EAAAA,iBAAiB,EAAEhB,SAAS,CAACiB,IAfL;;AAiBxB;AACF;AACA;AACA;AACEP,EAAAA,UAAU,EAAEV,SAAS,CAACkB,SAAV,CAAoB,CAAClB,SAAS,CAACmB,IAAX,EAAiBnB,SAAS,CAACoB,MAA3B,CAApB,EAAwDC;AArB5C,CAA1B;AAuBA,eAAejB,aAAf","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { settings } from 'carbon-components';\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport React from 'react';\nimport SideNavIcon from './SideNavIcon';\nvar prefix = settings.prefix;\n\nvar SideNavHeader = function SideNavHeader(_ref) {\n  var customClassName = _ref.className,\n      children = _ref.children,\n      IconElement = _ref.renderIcon;\n  var className = cx(\"\".concat(prefix, \"--side-nav__header\"), customClassName);\n  return /*#__PURE__*/React.createElement(\"header\", {\n    className: className\n  }, /*#__PURE__*/React.createElement(SideNavIcon, null, /*#__PURE__*/React.createElement(IconElement, null)), children);\n};\n\nSideNavHeader.propTypes = {\n  /**\n   * The child nodes to be rendered\n   */\n  children: PropTypes.node,\n\n  /**\n   * Provide an optional class to be applied to the containing node\n   */\n  className: PropTypes.string,\n\n  /**\n   * Property to indicate if the side nav container is open (or not). Use to\n   * keep local state and styling in step with the SideNav expansion state.\n   */\n  isSideNavExpanded: PropTypes.bool,\n\n  /**\n   * Provide an icon to render in the header of the side navigation. Should be\n   * a React class.\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]).isRequired\n};\nexport default SideNavHeader;"]},"metadata":{},"sourceType":"module"}