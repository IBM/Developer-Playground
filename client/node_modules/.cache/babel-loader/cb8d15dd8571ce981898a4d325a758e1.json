{"ast":null,"code":"var _iconTypes;\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _unsupportedIterableToArray(o, minLen) {\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n  var n = Object.prototype.toString.call(o).slice(8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return Array.from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n}\n\nfunction _arrayLikeToArray(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n\n  for (var i = 0, arr2 = new Array(len); i < len; i++) {\n    arr2[i] = arr[i];\n  }\n\n  return arr2;\n}\n\nfunction _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}\n\nfunction _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport cx from 'classnames';\nimport { settings } from 'carbon-components';\nimport { Close20, ErrorFilled20, CheckmarkFilled20, WarningFilled20, WarningAltFilled20, InformationFilled20, InformationSquareFilled20 } from '@carbon/icons-react';\nimport Button from '../Button';\nvar prefix = settings.prefix;\nexport function NotificationActionButton(_ref) {\n  var children = _ref.children,\n      customClassName = _ref.className,\n      onClick = _ref.onClick,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"onClick\"]);\n\n  var className = cx(customClassName, \"\".concat(prefix, \"--inline-notification__action-button\"));\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    className: className,\n    kind: \"ghost\",\n    onClick: onClick,\n    size: \"small\"\n  }, rest), children);\n}\nNotificationActionButton.propTypes = {\n  /**\n   * Specify the content of the notification action button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification action button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally specify a click handler for the notification action button.\n   */\n  onClick: PropTypes.func\n};\nexport function NotificationButton(_ref2) {\n  var ariaLabel = _ref2.ariaLabel,\n      className = _ref2.className,\n      iconDescription = _ref2.iconDescription,\n      type = _ref2.type,\n      IconTag = _ref2.renderIcon,\n      name = _ref2.name,\n      notificationType = _ref2.notificationType,\n      rest = _objectWithoutProperties(_ref2, [\"ariaLabel\", \"className\", \"iconDescription\", \"type\", \"renderIcon\", \"name\", \"notificationType\"]);\n\n  var buttonClassName = cx(className, _defineProperty({}, \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__close-button\"), notificationType));\n  var iconClassName = cx(_defineProperty({}, \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__close-icon\"), notificationType));\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/button-has-type\n    React.createElement(\"button\", _extends({}, rest, {\n      type: type,\n      \"aria-label\": iconDescription,\n      title: iconDescription,\n      className: buttonClassName\n    }), IconTag && /*#__PURE__*/React.createElement(IconTag, {\n      \"aria-label\": ariaLabel,\n      className: iconClassName,\n      name: name\n    }))\n  );\n}\nNotificationButton.propTypes = {\n  /**\n   * Specify a label to be read by screen readers on the notification button\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * Specify an optional className to be applied to the notification button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify an optional icon for the Button through a string,\n   * if something but regular \"close\" icon is desirable\n   */\n  name: PropTypes.string,\n\n  /**\n   * Specify the notification type\n   */\n  notificationType: PropTypes.oneOf(['toast', 'inline']),\n\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Optional prop to specify the type of the Button\n   */\n  type: PropTypes.string\n};\nNotificationButton.defaultProps = {\n  ariaLabel: 'close notification',\n  // TODO: deprecate this prop\n  notificationType: 'toast',\n  type: 'button',\n  iconDescription: 'close icon',\n  renderIcon: Close20\n};\nexport function NotificationTextDetails(_ref3) {\n  var title = _ref3.title,\n      subtitle = _ref3.subtitle,\n      caption = _ref3.caption,\n      notificationType = _ref3.notificationType,\n      children = _ref3.children,\n      rest = _objectWithoutProperties(_ref3, [\"title\", \"subtitle\", \"caption\", \"notificationType\", \"children\"]);\n\n  if (notificationType === 'toast') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n      className: \"\".concat(prefix, \"--toast-notification__details\")\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"\".concat(prefix, \"--toast-notification__title\")\n    }, title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--toast-notification__subtitle\")\n    }, subtitle), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--toast-notification__caption\")\n    }, caption), children);\n  }\n\n  if (notificationType === 'inline') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n      className: \"\".concat(prefix, \"--inline-notification__text-wrapper\")\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"\".concat(prefix, \"--inline-notification__title\")\n    }, title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--inline-notification__subtitle\")\n    }, subtitle), children);\n  }\n}\nNotificationTextDetails.propTypes = {\n  /**\n   * Specify the caption\n   */\n  caption: PropTypes.node,\n\n  /**\n   * Pass in the children that will be rendered in NotificationTextDetails\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the notification type\n   */\n  notificationType: PropTypes.oneOf(['toast', 'inline']),\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string\n};\nNotificationTextDetails.defaultProps = {\n  title: 'title',\n  caption: 'caption',\n  notificationType: 'toast'\n};\nvar iconTypes = (_iconTypes = {\n  error: ErrorFilled20,\n  success: CheckmarkFilled20,\n  warning: WarningFilled20\n}, _defineProperty(_iconTypes, 'warning-alt', WarningAltFilled20), _defineProperty(_iconTypes, \"info\", InformationFilled20), _defineProperty(_iconTypes, 'info-square', InformationSquareFilled20), _iconTypes);\n\nfunction NotificationIcon(_ref4) {\n  var iconDescription = _ref4.iconDescription,\n      kind = _ref4.kind,\n      notificationType = _ref4.notificationType;\n  var IconForKind = iconTypes[kind];\n\n  if (!IconForKind) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(IconForKind, {\n    className: \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__icon\")\n  }, /*#__PURE__*/React.createElement(\"title\", null, iconDescription));\n}\n\nNotificationIcon.propTypes = {\n  iconDescription: PropTypes.string.isRequired,\n  kind: PropTypes.oneOf(['error', 'success', 'warning', 'warning-alt', 'info', 'info-square']).isRequired,\n  notificationType: PropTypes.oneOf(['inline', 'toast']).isRequired\n};\nexport function ToastNotification(_ref5) {\n  var _cx3;\n\n  var role = _ref5.role,\n      notificationType = _ref5.notificationType,\n      onCloseButtonClick = _ref5.onCloseButtonClick,\n      iconDescription = _ref5.iconDescription,\n      statusIconDescription = _ref5.statusIconDescription,\n      className = _ref5.className,\n      caption = _ref5.caption,\n      subtitle = _ref5.subtitle,\n      title = _ref5.title,\n      kind = _ref5.kind,\n      lowContrast = _ref5.lowContrast,\n      hideCloseButton = _ref5.hideCloseButton,\n      children = _ref5.children,\n      timeout = _ref5.timeout,\n      rest = _objectWithoutProperties(_ref5, [\"role\", \"notificationType\", \"onCloseButtonClick\", \"iconDescription\", \"statusIconDescription\", \"className\", \"caption\", \"subtitle\", \"title\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"children\", \"timeout\"]);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var containerClassName = cx(className, (_cx3 = {}, _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification\"), true), _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification--low-contrast\"), lowContrast), _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification--\").concat(kind), kind), _cx3));\n\n  function handleCloseButtonClick(event) {\n    setIsOpen(false);\n    onCloseButtonClick(event);\n  }\n\n  useEffect(function () {\n    if (!timeout) {\n      return;\n    }\n\n    var timeoutId = window.setTimeout(function () {\n      setIsOpen(false);\n      onCloseButtonClick(event);\n    }, timeout);\n    return function () {\n      window.clearTimeout(timeoutId);\n    };\n  }, [onCloseButtonClick, timeout]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    role: role,\n    kind: kind,\n    className: containerClassName\n  }), /*#__PURE__*/React.createElement(NotificationIcon, {\n    notificationType: notificationType,\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), /*#__PURE__*/React.createElement(NotificationTextDetails, {\n    title: title,\n    subtitle: subtitle,\n    caption: caption,\n    notificationType: notificationType\n  }, children), !hideCloseButton && /*#__PURE__*/React.createElement(NotificationButton, {\n    iconDescription: iconDescription,\n    notificationType: notificationType,\n    onClick: handleCloseButtonClick\n  }));\n}\nToastNotification.propTypes = {\n  /**\n   * Specify the caption\n   */\n  caption: PropTypes.node,\n\n  /**\n   * Pass in the children that will be rendered within the ToastNotification\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'info-square', 'success', 'warning', 'warning-alt']).isRequired,\n\n  /**\n   * Specify whether you are using the low contrast variant of the ToastNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * By default, this value is \"toast\". You can also provide an alternate type\n   * if it makes sense for the underlying `<NotificationTextDetails>` and `<NotificationButton>`\n   */\n  notificationType: PropTypes.string,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * By default, this value is \"alert\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side\n   */\n  role: PropTypes.string.isRequired,\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * Specify an optional duration the notification should be closed in\n   */\n  timeout: PropTypes.number,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string.isRequired\n};\nToastNotification.defaultProps = {\n  kind: 'error',\n  title: 'provide a title',\n  caption: 'provide a caption',\n  role: 'alert',\n  notificationType: 'toast',\n  iconDescription: 'closes notification',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false,\n  timeout: 0\n};\nexport function InlineNotification(_ref6) {\n  var _cx4;\n\n  var actions = _ref6.actions,\n      role = _ref6.role,\n      notificationType = _ref6.notificationType,\n      onCloseButtonClick = _ref6.onCloseButtonClick,\n      iconDescription = _ref6.iconDescription,\n      statusIconDescription = _ref6.statusIconDescription,\n      className = _ref6.className,\n      subtitle = _ref6.subtitle,\n      title = _ref6.title,\n      kind = _ref6.kind,\n      lowContrast = _ref6.lowContrast,\n      hideCloseButton = _ref6.hideCloseButton,\n      children = _ref6.children,\n      rest = _objectWithoutProperties(_ref6, [\"actions\", \"role\", \"notificationType\", \"onCloseButtonClick\", \"iconDescription\", \"statusIconDescription\", \"className\", \"subtitle\", \"title\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"children\"]);\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOpen = _useState4[0],\n      setIsOpen = _useState4[1];\n\n  var containerClassName = cx(className, (_cx4 = {}, _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification\"), true), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--low-contrast\"), lowContrast), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--\").concat(kind), kind), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--hide-close-button\"), hideCloseButton), _cx4));\n\n  function handleCloseButtonClick(event) {\n    setIsOpen(false);\n    onCloseButtonClick(event);\n  }\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    role: role,\n    kind: kind,\n    className: containerClassName\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__details\")\n  }, /*#__PURE__*/React.createElement(NotificationIcon, {\n    notificationType: notificationType,\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), /*#__PURE__*/React.createElement(NotificationTextDetails, {\n    title: title,\n    subtitle: subtitle,\n    notificationType: notificationType\n  }, children)), actions, !hideCloseButton && /*#__PURE__*/React.createElement(NotificationButton, {\n    iconDescription: iconDescription,\n    notificationType: notificationType,\n    onClick: handleCloseButtonClick\n  }));\n}\nInlineNotification.propTypes = {\n  /**\n   * Pass in the action nodes that will be rendered within the InlineNotification\n   */\n  actions: PropTypes.node,\n\n  /**\n   * Pass in the children that will be rendered within the InlineNotification\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'info-square', 'success', 'warning', 'warning-alt']).isRequired,\n\n  /**\n   * Specify whether you are using the low contrast variant of the InlineNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * By default, this value is \"inline\". You can also provide an alternate type\n   * if it makes sense for the underlying `<NotificationTextDetails>` and `<NotificationButton>`\n   */\n  notificationType: PropTypes.string,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * By default, this value is \"alert\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side\n   */\n  role: PropTypes.string.isRequired,\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string.isRequired\n};\nInlineNotification.defaultProps = {\n  role: 'alert',\n  notificationType: 'inline',\n  iconDescription: 'closes notification',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false\n};","map":{"version":3,"sources":["/Users/nupurnegi/Desktop/UI_ongoingChanges/Developer-Playground/client/node_modules/carbon-components-react/es/components/Notification/Notification.js"],"names":["_iconTypes","_slicedToArray","arr","i","_arrayWithHoles","_iterableToArrayLimit","_unsupportedIterableToArray","_nonIterableRest","TypeError","o","minLen","_arrayLikeToArray","n","Object","prototype","toString","call","slice","constructor","name","Array","from","test","len","length","arr2","Symbol","iterator","_arr","_n","_d","_e","undefined","_i","_s","next","done","push","value","err","isArray","_defineProperty","obj","key","defineProperty","enumerable","configurable","writable","_extends","assign","target","arguments","source","hasOwnProperty","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","PropTypes","React","useState","useEffect","cx","settings","Close20","ErrorFilled20","CheckmarkFilled20","WarningFilled20","WarningAltFilled20","InformationFilled20","InformationSquareFilled20","Button","prefix","NotificationActionButton","_ref","children","customClassName","className","onClick","rest","concat","createElement","kind","size","propTypes","node","string","func","NotificationButton","_ref2","ariaLabel","iconDescription","type","IconTag","renderIcon","notificationType","buttonClassName","iconClassName","title","oneOf","oneOfType","object","defaultProps","NotificationTextDetails","_ref3","subtitle","caption","iconTypes","error","success","warning","NotificationIcon","_ref4","IconForKind","isRequired","ToastNotification","_ref5","_cx3","role","onCloseButtonClick","statusIconDescription","lowContrast","hideCloseButton","timeout","_useState","_useState2","isOpen","setIsOpen","containerClassName","handleCloseButtonClick","event","timeoutId","window","setTimeout","clearTimeout","bool","number","InlineNotification","_ref6","_cx4","actions","_useState3","_useState4"],"mappings":"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","sourcesContent":["var _iconTypes;\n\nfunction _slicedToArray(arr, i) { return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest(); }\n\nfunction _nonIterableRest() { throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\n\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\n\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\n\nfunction _iterableToArrayLimit(arr, i) { if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return; var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"] != null) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; }\n\nfunction _arrayWithHoles(arr) { if (Array.isArray(arr)) return arr; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport PropTypes from 'prop-types';\nimport React, { useState, useEffect } from 'react';\nimport cx from 'classnames';\nimport { settings } from 'carbon-components';\nimport { Close20, ErrorFilled20, CheckmarkFilled20, WarningFilled20, WarningAltFilled20, InformationFilled20, InformationSquareFilled20 } from '@carbon/icons-react';\nimport Button from '../Button';\nvar prefix = settings.prefix;\nexport function NotificationActionButton(_ref) {\n  var children = _ref.children,\n      customClassName = _ref.className,\n      onClick = _ref.onClick,\n      rest = _objectWithoutProperties(_ref, [\"children\", \"className\", \"onClick\"]);\n\n  var className = cx(customClassName, \"\".concat(prefix, \"--inline-notification__action-button\"));\n  return /*#__PURE__*/React.createElement(Button, _extends({\n    className: className,\n    kind: \"ghost\",\n    onClick: onClick,\n    size: \"small\"\n  }, rest), children);\n}\nNotificationActionButton.propTypes = {\n  /**\n   * Specify the content of the notification action button.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification action button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Optionally specify a click handler for the notification action button.\n   */\n  onClick: PropTypes.func\n};\nexport function NotificationButton(_ref2) {\n  var ariaLabel = _ref2.ariaLabel,\n      className = _ref2.className,\n      iconDescription = _ref2.iconDescription,\n      type = _ref2.type,\n      IconTag = _ref2.renderIcon,\n      name = _ref2.name,\n      notificationType = _ref2.notificationType,\n      rest = _objectWithoutProperties(_ref2, [\"ariaLabel\", \"className\", \"iconDescription\", \"type\", \"renderIcon\", \"name\", \"notificationType\"]);\n\n  var buttonClassName = cx(className, _defineProperty({}, \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__close-button\"), notificationType));\n  var iconClassName = cx(_defineProperty({}, \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__close-icon\"), notificationType));\n  return (\n    /*#__PURE__*/\n    // eslint-disable-next-line react/button-has-type\n    React.createElement(\"button\", _extends({}, rest, {\n      type: type,\n      \"aria-label\": iconDescription,\n      title: iconDescription,\n      className: buttonClassName\n    }), IconTag && /*#__PURE__*/React.createElement(IconTag, {\n      \"aria-label\": ariaLabel,\n      className: iconClassName,\n      name: name\n    }))\n  );\n}\nNotificationButton.propTypes = {\n  /**\n   * Specify a label to be read by screen readers on the notification button\n   */\n  ariaLabel: PropTypes.string,\n\n  /**\n   * Specify an optional className to be applied to the notification button\n   */\n  className: PropTypes.string,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify an optional icon for the Button through a string,\n   * if something but regular \"close\" icon is desirable\n   */\n  name: PropTypes.string,\n\n  /**\n   * Specify the notification type\n   */\n  notificationType: PropTypes.oneOf(['toast', 'inline']),\n\n  /**\n   * Optional prop to allow overriding the icon rendering.\n   * Can be a React component class\n   */\n  renderIcon: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n\n  /**\n   * Optional prop to specify the type of the Button\n   */\n  type: PropTypes.string\n};\nNotificationButton.defaultProps = {\n  ariaLabel: 'close notification',\n  // TODO: deprecate this prop\n  notificationType: 'toast',\n  type: 'button',\n  iconDescription: 'close icon',\n  renderIcon: Close20\n};\nexport function NotificationTextDetails(_ref3) {\n  var title = _ref3.title,\n      subtitle = _ref3.subtitle,\n      caption = _ref3.caption,\n      notificationType = _ref3.notificationType,\n      children = _ref3.children,\n      rest = _objectWithoutProperties(_ref3, [\"title\", \"subtitle\", \"caption\", \"notificationType\", \"children\"]);\n\n  if (notificationType === 'toast') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n      className: \"\".concat(prefix, \"--toast-notification__details\")\n    }), /*#__PURE__*/React.createElement(\"h3\", {\n      className: \"\".concat(prefix, \"--toast-notification__title\")\n    }, title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--toast-notification__subtitle\")\n    }, subtitle), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--toast-notification__caption\")\n    }, caption), children);\n  }\n\n  if (notificationType === 'inline') {\n    return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n      className: \"\".concat(prefix, \"--inline-notification__text-wrapper\")\n    }), /*#__PURE__*/React.createElement(\"p\", {\n      className: \"\".concat(prefix, \"--inline-notification__title\")\n    }, title), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"\".concat(prefix, \"--inline-notification__subtitle\")\n    }, subtitle), children);\n  }\n}\nNotificationTextDetails.propTypes = {\n  /**\n   * Specify the caption\n   */\n  caption: PropTypes.node,\n\n  /**\n   * Pass in the children that will be rendered in NotificationTextDetails\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify the notification type\n   */\n  notificationType: PropTypes.oneOf(['toast', 'inline']),\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string\n};\nNotificationTextDetails.defaultProps = {\n  title: 'title',\n  caption: 'caption',\n  notificationType: 'toast'\n};\nvar iconTypes = (_iconTypes = {\n  error: ErrorFilled20,\n  success: CheckmarkFilled20,\n  warning: WarningFilled20\n}, _defineProperty(_iconTypes, 'warning-alt', WarningAltFilled20), _defineProperty(_iconTypes, \"info\", InformationFilled20), _defineProperty(_iconTypes, 'info-square', InformationSquareFilled20), _iconTypes);\n\nfunction NotificationIcon(_ref4) {\n  var iconDescription = _ref4.iconDescription,\n      kind = _ref4.kind,\n      notificationType = _ref4.notificationType;\n  var IconForKind = iconTypes[kind];\n\n  if (!IconForKind) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(IconForKind, {\n    className: \"\".concat(prefix, \"--\").concat(notificationType, \"-notification__icon\")\n  }, /*#__PURE__*/React.createElement(\"title\", null, iconDescription));\n}\n\nNotificationIcon.propTypes = {\n  iconDescription: PropTypes.string.isRequired,\n  kind: PropTypes.oneOf(['error', 'success', 'warning', 'warning-alt', 'info', 'info-square']).isRequired,\n  notificationType: PropTypes.oneOf(['inline', 'toast']).isRequired\n};\nexport function ToastNotification(_ref5) {\n  var _cx3;\n\n  var role = _ref5.role,\n      notificationType = _ref5.notificationType,\n      onCloseButtonClick = _ref5.onCloseButtonClick,\n      iconDescription = _ref5.iconDescription,\n      statusIconDescription = _ref5.statusIconDescription,\n      className = _ref5.className,\n      caption = _ref5.caption,\n      subtitle = _ref5.subtitle,\n      title = _ref5.title,\n      kind = _ref5.kind,\n      lowContrast = _ref5.lowContrast,\n      hideCloseButton = _ref5.hideCloseButton,\n      children = _ref5.children,\n      timeout = _ref5.timeout,\n      rest = _objectWithoutProperties(_ref5, [\"role\", \"notificationType\", \"onCloseButtonClick\", \"iconDescription\", \"statusIconDescription\", \"className\", \"caption\", \"subtitle\", \"title\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"children\", \"timeout\"]);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var containerClassName = cx(className, (_cx3 = {}, _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification\"), true), _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification--low-contrast\"), lowContrast), _defineProperty(_cx3, \"\".concat(prefix, \"--toast-notification--\").concat(kind), kind), _cx3));\n\n  function handleCloseButtonClick(event) {\n    setIsOpen(false);\n    onCloseButtonClick(event);\n  }\n\n  useEffect(function () {\n    if (!timeout) {\n      return;\n    }\n\n    var timeoutId = window.setTimeout(function () {\n      setIsOpen(false);\n      onCloseButtonClick(event);\n    }, timeout);\n    return function () {\n      window.clearTimeout(timeoutId);\n    };\n  }, [onCloseButtonClick, timeout]);\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    role: role,\n    kind: kind,\n    className: containerClassName\n  }), /*#__PURE__*/React.createElement(NotificationIcon, {\n    notificationType: notificationType,\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), /*#__PURE__*/React.createElement(NotificationTextDetails, {\n    title: title,\n    subtitle: subtitle,\n    caption: caption,\n    notificationType: notificationType\n  }, children), !hideCloseButton && /*#__PURE__*/React.createElement(NotificationButton, {\n    iconDescription: iconDescription,\n    notificationType: notificationType,\n    onClick: handleCloseButtonClick\n  }));\n}\nToastNotification.propTypes = {\n  /**\n   * Specify the caption\n   */\n  caption: PropTypes.node,\n\n  /**\n   * Pass in the children that will be rendered within the ToastNotification\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'info-square', 'success', 'warning', 'warning-alt']).isRequired,\n\n  /**\n   * Specify whether you are using the low contrast variant of the ToastNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * By default, this value is \"toast\". You can also provide an alternate type\n   * if it makes sense for the underlying `<NotificationTextDetails>` and `<NotificationButton>`\n   */\n  notificationType: PropTypes.string,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * By default, this value is \"alert\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side\n   */\n  role: PropTypes.string.isRequired,\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * Specify an optional duration the notification should be closed in\n   */\n  timeout: PropTypes.number,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string.isRequired\n};\nToastNotification.defaultProps = {\n  kind: 'error',\n  title: 'provide a title',\n  caption: 'provide a caption',\n  role: 'alert',\n  notificationType: 'toast',\n  iconDescription: 'closes notification',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false,\n  timeout: 0\n};\nexport function InlineNotification(_ref6) {\n  var _cx4;\n\n  var actions = _ref6.actions,\n      role = _ref6.role,\n      notificationType = _ref6.notificationType,\n      onCloseButtonClick = _ref6.onCloseButtonClick,\n      iconDescription = _ref6.iconDescription,\n      statusIconDescription = _ref6.statusIconDescription,\n      className = _ref6.className,\n      subtitle = _ref6.subtitle,\n      title = _ref6.title,\n      kind = _ref6.kind,\n      lowContrast = _ref6.lowContrast,\n      hideCloseButton = _ref6.hideCloseButton,\n      children = _ref6.children,\n      rest = _objectWithoutProperties(_ref6, [\"actions\", \"role\", \"notificationType\", \"onCloseButtonClick\", \"iconDescription\", \"statusIconDescription\", \"className\", \"subtitle\", \"title\", \"kind\", \"lowContrast\", \"hideCloseButton\", \"children\"]);\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isOpen = _useState4[0],\n      setIsOpen = _useState4[1];\n\n  var containerClassName = cx(className, (_cx4 = {}, _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification\"), true), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--low-contrast\"), lowContrast), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--\").concat(kind), kind), _defineProperty(_cx4, \"\".concat(prefix, \"--inline-notification--hide-close-button\"), hideCloseButton), _cx4));\n\n  function handleCloseButtonClick(event) {\n    setIsOpen(false);\n    onCloseButtonClick(event);\n  }\n\n  if (!isOpen) {\n    return null;\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", _extends({}, rest, {\n    role: role,\n    kind: kind,\n    className: containerClassName\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"\".concat(prefix, \"--inline-notification__details\")\n  }, /*#__PURE__*/React.createElement(NotificationIcon, {\n    notificationType: notificationType,\n    kind: kind,\n    iconDescription: statusIconDescription || \"\".concat(kind, \" icon\")\n  }), /*#__PURE__*/React.createElement(NotificationTextDetails, {\n    title: title,\n    subtitle: subtitle,\n    notificationType: notificationType\n  }, children)), actions, !hideCloseButton && /*#__PURE__*/React.createElement(NotificationButton, {\n    iconDescription: iconDescription,\n    notificationType: notificationType,\n    onClick: handleCloseButtonClick\n  }));\n}\nInlineNotification.propTypes = {\n  /**\n   * Pass in the action nodes that will be rendered within the InlineNotification\n   */\n  actions: PropTypes.node,\n\n  /**\n   * Pass in the children that will be rendered within the InlineNotification\n   */\n  children: PropTypes.node,\n\n  /**\n   * Specify an optional className to be applied to the notification box\n   */\n  className: PropTypes.string,\n\n  /**\n   * Specify the close button should be disabled, or not\n   */\n  hideCloseButton: PropTypes.bool,\n\n  /**\n   * Provide a description for \"close\" icon that can be read by screen readers\n   */\n  iconDescription: PropTypes.string,\n\n  /**\n   * Specify what state the notification represents\n   */\n  kind: PropTypes.oneOf(['error', 'info', 'info-square', 'success', 'warning', 'warning-alt']).isRequired,\n\n  /**\n   * Specify whether you are using the low contrast variant of the InlineNotification.\n   */\n  lowContrast: PropTypes.bool,\n\n  /**\n   * By default, this value is \"inline\". You can also provide an alternate type\n   * if it makes sense for the underlying `<NotificationTextDetails>` and `<NotificationButton>`\n   */\n  notificationType: PropTypes.string,\n\n  /**\n   * Provide a function that is called when menu is closed\n   */\n  onCloseButtonClick: PropTypes.func,\n\n  /**\n   * By default, this value is \"alert\". You can also provide an alternate\n   * role if it makes sense from the accessibility-side\n   */\n  role: PropTypes.string.isRequired,\n\n  /**\n   * Provide a description for \"status\" icon that can be read by screen readers\n   */\n  statusIconDescription: PropTypes.string,\n\n  /**\n   * Specify the sub-title\n   */\n  subtitle: PropTypes.node,\n\n  /**\n   * Specify the title\n   */\n  title: PropTypes.string.isRequired\n};\nInlineNotification.defaultProps = {\n  role: 'alert',\n  notificationType: 'inline',\n  iconDescription: 'closes notification',\n  onCloseButtonClick: function onCloseButtonClick() {},\n  hideCloseButton: false\n};"]},"metadata":{},"sourceType":"module"}