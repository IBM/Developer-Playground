{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { match, keys } from '../../../internal/keyboard';\n/**\n * @param {object} config Plugin configuration.\n * @returns {Plugin} A Flatpickr plugin to fix Flatpickr's behavior of certain events.\n */\n\nexport default (function (config) {\n  return function (fp) {\n    /**\n     * Handles `keydown` event.\n     */\n    var handleKeydown = function handleKeydown(event) {\n      var inputFrom = config.inputFrom,\n          inputTo = config.inputTo;\n      var target = event.target;\n\n      if (inputFrom === target || inputTo === target) {\n        if (match(event, keys.Enter)) {\n          // Makes sure the hitting enter key picks up pending values of both `<input>`\n          // Workaround for: https://github.com/flatpickr/flatpickr/issues/1942\n          fp.setDate([inputFrom.value, inputTo && inputTo.value], true, fp.config.dateFormat);\n          event.stopPropagation();\n        } else if (match(event, keys.ArrowLeft) || match(event, keys.ArrowRight)) {\n          // Prevents Flatpickr code from canceling the event if left/right arrow keys are hit on `<input>`,\n          // so user can move the keyboard cursor for editing dates\n          // Workaround for: https://github.com/flatpickr/flatpickr/issues/1943\n          event.stopPropagation();\n        } else if (match(event, keys.ArrowDown)) {\n          event.preventDefault();\n          fp.open();\n        }\n      }\n    };\n    /**\n     * Releases event listeners used in this Flatpickr plugin.\n     */\n\n\n    var release = function release() {\n      var inputFrom = config.inputFrom,\n          inputTo = config.inputTo;\n\n      if (inputTo) {\n        inputTo.removeEventListener('keydown', handleKeydown, true);\n      }\n\n      inputFrom.removeEventListener('keydown', handleKeydown, true);\n    };\n    /**\n     * Sets up event listeners used for this Flatpickr plugin.\n     */\n\n\n    var init = function init() {\n      release();\n      var inputFrom = config.inputFrom,\n          inputTo = config.inputTo;\n      inputFrom.addEventListener('keydown', handleKeydown, true);\n\n      if (inputTo) {\n        inputTo.addEventListener('keydown', handleKeydown, true);\n      }\n    };\n    /**\n     * Registers this Flatpickr plugin.\n     */\n\n\n    var register = function register() {\n      fp.loadedPlugins.push('carbonFlatpickrFixEventsPlugin');\n    };\n\n    return {\n      onReady: [register, init],\n      onDestroy: [release]\n    };\n  };\n});","map":{"version":3,"sources":["/Users/nupurnegi/Desktop/UI_ongoingChanges/Developer-Playground/client/node_modules/carbon-components-react/es/components/DatePicker/plugins/fixEventsPlugin.js"],"names":["match","keys","config","fp","handleKeydown","event","inputFrom","inputTo","target","Enter","setDate","value","dateFormat","stopPropagation","ArrowLeft","ArrowRight","ArrowDown","preventDefault","open","release","removeEventListener","init","addEventListener","register","loadedPlugins","push","onReady","onDestroy"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,KAAT,EAAgBC,IAAhB,QAA4B,4BAA5B;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,UAAUC,MAAV,EAAkB;AAChC,SAAO,UAAUC,EAAV,EAAc;AACnB;AACJ;AACA;AACI,QAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBC,KAAvB,EAA8B;AAChD,UAAIC,SAAS,GAAGJ,MAAM,CAACI,SAAvB;AAAA,UACIC,OAAO,GAAGL,MAAM,CAACK,OADrB;AAEA,UAAIC,MAAM,GAAGH,KAAK,CAACG,MAAnB;;AAEA,UAAIF,SAAS,KAAKE,MAAd,IAAwBD,OAAO,KAAKC,MAAxC,EAAgD;AAC9C,YAAIR,KAAK,CAACK,KAAD,EAAQJ,IAAI,CAACQ,KAAb,CAAT,EAA8B;AAC5B;AACA;AACAN,UAAAA,EAAE,CAACO,OAAH,CAAW,CAACJ,SAAS,CAACK,KAAX,EAAkBJ,OAAO,IAAIA,OAAO,CAACI,KAArC,CAAX,EAAwD,IAAxD,EAA8DR,EAAE,CAACD,MAAH,CAAUU,UAAxE;AACAP,UAAAA,KAAK,CAACQ,eAAN;AACD,SALD,MAKO,IAAIb,KAAK,CAACK,KAAD,EAAQJ,IAAI,CAACa,SAAb,CAAL,IAAgCd,KAAK,CAACK,KAAD,EAAQJ,IAAI,CAACc,UAAb,CAAzC,EAAmE;AACxE;AACA;AACA;AACAV,UAAAA,KAAK,CAACQ,eAAN;AACD,SALM,MAKA,IAAIb,KAAK,CAACK,KAAD,EAAQJ,IAAI,CAACe,SAAb,CAAT,EAAkC;AACvCX,UAAAA,KAAK,CAACY,cAAN;AACAd,UAAAA,EAAE,CAACe,IAAH;AACD;AACF;AACF,KArBD;AAsBA;AACJ;AACA;;;AAGI,QAAIC,OAAO,GAAG,SAASA,OAAT,GAAmB;AAC/B,UAAIb,SAAS,GAAGJ,MAAM,CAACI,SAAvB;AAAA,UACIC,OAAO,GAAGL,MAAM,CAACK,OADrB;;AAGA,UAAIA,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACa,mBAAR,CAA4B,SAA5B,EAAuChB,aAAvC,EAAsD,IAAtD;AACD;;AAEDE,MAAAA,SAAS,CAACc,mBAAV,CAA8B,SAA9B,EAAyChB,aAAzC,EAAwD,IAAxD;AACD,KATD;AAUA;AACJ;AACA;;;AAGI,QAAIiB,IAAI,GAAG,SAASA,IAAT,GAAgB;AACzBF,MAAAA,OAAO;AACP,UAAIb,SAAS,GAAGJ,MAAM,CAACI,SAAvB;AAAA,UACIC,OAAO,GAAGL,MAAM,CAACK,OADrB;AAEAD,MAAAA,SAAS,CAACgB,gBAAV,CAA2B,SAA3B,EAAsClB,aAAtC,EAAqD,IAArD;;AAEA,UAAIG,OAAJ,EAAa;AACXA,QAAAA,OAAO,CAACe,gBAAR,CAAyB,SAAzB,EAAoClB,aAApC,EAAmD,IAAnD;AACD;AACF,KATD;AAUA;AACJ;AACA;;;AAGI,QAAImB,QAAQ,GAAG,SAASA,QAAT,GAAoB;AACjCpB,MAAAA,EAAE,CAACqB,aAAH,CAAiBC,IAAjB,CAAsB,gCAAtB;AACD,KAFD;;AAIA,WAAO;AACLC,MAAAA,OAAO,EAAE,CAACH,QAAD,EAAWF,IAAX,CADJ;AAELM,MAAAA,SAAS,EAAE,CAACR,OAAD;AAFN,KAAP;AAID,GArED;AAsED,CAvED","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport { match, keys } from '../../../internal/keyboard';\n/**\n * @param {object} config Plugin configuration.\n * @returns {Plugin} A Flatpickr plugin to fix Flatpickr's behavior of certain events.\n */\n\nexport default (function (config) {\n  return function (fp) {\n    /**\n     * Handles `keydown` event.\n     */\n    var handleKeydown = function handleKeydown(event) {\n      var inputFrom = config.inputFrom,\n          inputTo = config.inputTo;\n      var target = event.target;\n\n      if (inputFrom === target || inputTo === target) {\n        if (match(event, keys.Enter)) {\n          // Makes sure the hitting enter key picks up pending values of both `<input>`\n          // Workaround for: https://github.com/flatpickr/flatpickr/issues/1942\n          fp.setDate([inputFrom.value, inputTo && inputTo.value], true, fp.config.dateFormat);\n          event.stopPropagation();\n        } else if (match(event, keys.ArrowLeft) || match(event, keys.ArrowRight)) {\n          // Prevents Flatpickr code from canceling the event if left/right arrow keys are hit on `<input>`,\n          // so user can move the keyboard cursor for editing dates\n          // Workaround for: https://github.com/flatpickr/flatpickr/issues/1943\n          event.stopPropagation();\n        } else if (match(event, keys.ArrowDown)) {\n          event.preventDefault();\n          fp.open();\n        }\n      }\n    };\n    /**\n     * Releases event listeners used in this Flatpickr plugin.\n     */\n\n\n    var release = function release() {\n      var inputFrom = config.inputFrom,\n          inputTo = config.inputTo;\n\n      if (inputTo) {\n        inputTo.removeEventListener('keydown', handleKeydown, true);\n      }\n\n      inputFrom.removeEventListener('keydown', handleKeydown, true);\n    };\n    /**\n     * Sets up event listeners used for this Flatpickr plugin.\n     */\n\n\n    var init = function init() {\n      release();\n      var inputFrom = config.inputFrom,\n          inputTo = config.inputTo;\n      inputFrom.addEventListener('keydown', handleKeydown, true);\n\n      if (inputTo) {\n        inputTo.addEventListener('keydown', handleKeydown, true);\n      }\n    };\n    /**\n     * Registers this Flatpickr plugin.\n     */\n\n\n    var register = function register() {\n      fp.loadedPlugins.push('carbonFlatpickrFixEventsPlugin');\n    };\n\n    return {\n      onReady: [register, init],\n      onDestroy: [release]\n    };\n  };\n});"]},"metadata":{},"sourceType":"module"}