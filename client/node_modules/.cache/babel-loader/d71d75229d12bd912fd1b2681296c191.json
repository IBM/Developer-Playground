{"ast":null,"code":"import rangePlugin from 'flatpickr/dist/plugins/rangePlugin';\n/**\n * @param {object} config Plugin configuration.\n * @returns {Plugin} An extension of Flatpickr `rangePlugin` that does the following:\n *   * Better ensures the calendar dropdown is always aligned to the `<input>` for the starting date.\n *     Workaround for: https://github.com/flatpickr/flatpickr/issues/1944\n *   * A logic to ensure `fp.setDate()` call won't end up with \"startDate to endDate\" set to the first `<input>`\n */\n\nexport default (function (config) {\n  var factory = rangePlugin(Object.assign({\n    position: 'left'\n  }, config));\n  return function (fp) {\n    var origSetDate = fp.setDate;\n\n    var init = function init() {\n      fp.setDate = function setDate(dates, triggerChange, format) {\n        origSetDate.call(this, dates, triggerChange, format); // If `triggerChange` is `true`, `onValueUpdate` Flatpickr event is fired\n        // where Flatpickr's range plugin takes care of fixing the first `<input>`\n\n        if (!triggerChange) {\n          var inputFrom = fp._input;\n          var inputTo = config.input;\n          [inputFrom, inputTo].forEach(function (input, i) {\n            if (input) {\n              input.value = !dates[i] ? '' : fp.formatDate(new Date(dates[i]), fp.config.dateFormat);\n            }\n          });\n        }\n      };\n    };\n\n    var origRangePlugin = factory(fp);\n    var origOnReady = origRangePlugin.onReady;\n    return Object.assign(origRangePlugin, {\n      onReady: [init, origOnReady],\n      onPreCalendarPosition: function onPreCalendarPosition() {}\n    });\n  };\n});","map":{"version":3,"sources":["/Users/nupurnegi/Desktop/UI_ongoingChanges/Developer-Playground/client/node_modules/carbon-components-react/es/components/DatePicker/plugins/rangePlugin.js"],"names":["rangePlugin","config","factory","Object","assign","position","fp","origSetDate","setDate","init","dates","triggerChange","format","call","inputFrom","_input","inputTo","input","forEach","i","value","formatDate","Date","dateFormat","origRangePlugin","origOnReady","onReady","onPreCalendarPosition"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,oCAAxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,gBAAgB,UAAUC,MAAV,EAAkB;AAChC,MAAIC,OAAO,GAAGF,WAAW,CAACG,MAAM,CAACC,MAAP,CAAc;AACtCC,IAAAA,QAAQ,EAAE;AAD4B,GAAd,EAEvBJ,MAFuB,CAAD,CAAzB;AAGA,SAAO,UAAUK,EAAV,EAAc;AACnB,QAAIC,WAAW,GAAGD,EAAE,CAACE,OAArB;;AAEA,QAAIC,IAAI,GAAG,SAASA,IAAT,GAAgB;AACzBH,MAAAA,EAAE,CAACE,OAAH,GAAa,SAASA,OAAT,CAAiBE,KAAjB,EAAwBC,aAAxB,EAAuCC,MAAvC,EAA+C;AAC1DL,QAAAA,WAAW,CAACM,IAAZ,CAAiB,IAAjB,EAAuBH,KAAvB,EAA8BC,aAA9B,EAA6CC,MAA7C,EAD0D,CACJ;AACtD;;AAEA,YAAI,CAACD,aAAL,EAAoB;AAClB,cAAIG,SAAS,GAAGR,EAAE,CAACS,MAAnB;AACA,cAAIC,OAAO,GAAGf,MAAM,CAACgB,KAArB;AACA,WAACH,SAAD,EAAYE,OAAZ,EAAqBE,OAArB,CAA6B,UAAUD,KAAV,EAAiBE,CAAjB,EAAoB;AAC/C,gBAAIF,KAAJ,EAAW;AACTA,cAAAA,KAAK,CAACG,KAAN,GAAc,CAACV,KAAK,CAACS,CAAD,CAAN,GAAY,EAAZ,GAAiBb,EAAE,CAACe,UAAH,CAAc,IAAIC,IAAJ,CAASZ,KAAK,CAACS,CAAD,CAAd,CAAd,EAAkCb,EAAE,CAACL,MAAH,CAAUsB,UAA5C,CAA/B;AACD;AACF,WAJD;AAKD;AACF,OAbD;AAcD,KAfD;;AAiBA,QAAIC,eAAe,GAAGtB,OAAO,CAACI,EAAD,CAA7B;AACA,QAAImB,WAAW,GAAGD,eAAe,CAACE,OAAlC;AACA,WAAOvB,MAAM,CAACC,MAAP,CAAcoB,eAAd,EAA+B;AACpCE,MAAAA,OAAO,EAAE,CAACjB,IAAD,EAAOgB,WAAP,CAD2B;AAEpCE,MAAAA,qBAAqB,EAAE,SAASA,qBAAT,GAAiC,CAAE;AAFtB,KAA/B,CAAP;AAID,GA1BD;AA2BD,CA/BD","sourcesContent":["import rangePlugin from 'flatpickr/dist/plugins/rangePlugin';\n/**\n * @param {object} config Plugin configuration.\n * @returns {Plugin} An extension of Flatpickr `rangePlugin` that does the following:\n *   * Better ensures the calendar dropdown is always aligned to the `<input>` for the starting date.\n *     Workaround for: https://github.com/flatpickr/flatpickr/issues/1944\n *   * A logic to ensure `fp.setDate()` call won't end up with \"startDate to endDate\" set to the first `<input>`\n */\n\nexport default (function (config) {\n  var factory = rangePlugin(Object.assign({\n    position: 'left'\n  }, config));\n  return function (fp) {\n    var origSetDate = fp.setDate;\n\n    var init = function init() {\n      fp.setDate = function setDate(dates, triggerChange, format) {\n        origSetDate.call(this, dates, triggerChange, format); // If `triggerChange` is `true`, `onValueUpdate` Flatpickr event is fired\n        // where Flatpickr's range plugin takes care of fixing the first `<input>`\n\n        if (!triggerChange) {\n          var inputFrom = fp._input;\n          var inputTo = config.input;\n          [inputFrom, inputTo].forEach(function (input, i) {\n            if (input) {\n              input.value = !dates[i] ? '' : fp.formatDate(new Date(dates[i]), fp.config.dateFormat);\n            }\n          });\n        }\n      };\n    };\n\n    var origRangePlugin = factory(fp);\n    var origOnReady = origRangePlugin.onReady;\n    return Object.assign(origRangePlugin, {\n      onReady: [init, origOnReady],\n      onPreCalendarPosition: function onPreCalendarPosition() {}\n    });\n  };\n});"]},"metadata":{},"sourceType":"module"}