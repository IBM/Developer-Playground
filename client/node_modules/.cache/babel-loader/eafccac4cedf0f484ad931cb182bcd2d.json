{"ast":null,"code":"function _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _objectWithoutProperties(source, excluded) {\n  if (source == null) return {};\n\n  var target = _objectWithoutPropertiesLoose(source, excluded);\n\n  var key, i;\n\n  if (Object.getOwnPropertySymbols) {\n    var sourceSymbolKeys = Object.getOwnPropertySymbols(source);\n\n    for (i = 0; i < sourceSymbolKeys.length; i++) {\n      key = sourceSymbolKeys[i];\n      if (excluded.indexOf(key) >= 0) continue;\n      if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue;\n      target[key] = source[key];\n    }\n  }\n\n  return target;\n}\n\nfunction _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy';\nimport React from 'react';\nimport { ChevronRight16 } from '@carbon/icons-react';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar TableExpandHeader = function TableExpandHeader(_ref) {\n  var ariaLabel = _ref.ariaLabel,\n      headerClassName = _ref.className,\n      enableExpando = _ref.enableExpando,\n      isExpanded = _ref.isExpanded,\n      onExpand = _ref.onExpand,\n      expandIconDescription = _ref.expandIconDescription,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"ariaLabel\", \"className\", \"enableExpando\", \"isExpanded\", \"onExpand\", \"expandIconDescription\", \"children\"]);\n\n  var className = cx(\"\".concat(prefix, \"--table-expand\"), headerClassName);\n  var previousValue = isExpanded ? 'collapsed' : undefined;\n  return /*#__PURE__*/React.createElement(\"th\", _extends({\n    scope: \"col\",\n    className: className,\n    \"data-previous-value\": previousValue\n  }, rest), !enableExpando ? null : /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"\".concat(prefix, \"--table-expand__button\"),\n    onClick: onExpand,\n    title: expandIconDescription,\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--table-expand__svg\"),\n    \"aria-label\": expandIconDescription\n  })), children);\n};\n\nTableExpandHeader.propTypes = {\n  /**\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  ariaLabel: requiredIfGivenPropIsTruthy('enableExpando', PropTypes.string),\n  children: PropTypes.node,\n  className: PropTypes.string,\n\n  /**\n   * Specify whether an expand all button should be displayed\n   */\n  enableExpando: PropTypes.bool,\n\n  /**\n   * The description of the chevron right icon, to be put in its SVG `<title>` element.\n   */\n  expandIconDescription: PropTypes.string,\n\n  /**\n   * Specify whether this row is expanded or not. This helps coordinate data\n   * attributes so that `TableExpandRow` and `TableExapndedRow` work together\n   */\n  isExpanded: requiredIfGivenPropIsTruthy('enableExpando', PropTypes.bool),\n\n  /**\n   * Hook for when a listener initiates a request to expand the given row\n   */\n  onExpand: requiredIfGivenPropIsTruthy('enableExpando', PropTypes.func)\n};\nexport default TableExpandHeader;","map":{"version":3,"sources":["/Users/nupurnegi/Desktop/UI_ongoingChanges/Developer-Playground/client/node_modules/carbon-components-react/es/components/DataTable/TableExpandHeader.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","indexOf","propertyIsEnumerable","sourceKeys","keys","cx","PropTypes","requiredIfGivenPropIsTruthy","React","ChevronRight16","settings","prefix","TableExpandHeader","_ref","ariaLabel","headerClassName","className","enableExpando","isExpanded","onExpand","expandIconDescription","children","rest","concat","previousValue","undefined","createElement","scope","type","onClick","title","propTypes","string","node","bool","func"],"mappings":"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","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\nimport cx from 'classnames';\nimport PropTypes from 'prop-types';\nimport requiredIfGivenPropIsTruthy from '../../prop-types/requiredIfGivenPropIsTruthy';\nimport React from 'react';\nimport { ChevronRight16 } from '@carbon/icons-react';\nimport { settings } from 'carbon-components';\nvar prefix = settings.prefix;\n\nvar TableExpandHeader = function TableExpandHeader(_ref) {\n  var ariaLabel = _ref.ariaLabel,\n      headerClassName = _ref.className,\n      enableExpando = _ref.enableExpando,\n      isExpanded = _ref.isExpanded,\n      onExpand = _ref.onExpand,\n      expandIconDescription = _ref.expandIconDescription,\n      children = _ref.children,\n      rest = _objectWithoutProperties(_ref, [\"ariaLabel\", \"className\", \"enableExpando\", \"isExpanded\", \"onExpand\", \"expandIconDescription\", \"children\"]);\n\n  var className = cx(\"\".concat(prefix, \"--table-expand\"), headerClassName);\n  var previousValue = isExpanded ? 'collapsed' : undefined;\n  return /*#__PURE__*/React.createElement(\"th\", _extends({\n    scope: \"col\",\n    className: className,\n    \"data-previous-value\": previousValue\n  }, rest), !enableExpando ? null : /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    className: \"\".concat(prefix, \"--table-expand__button\"),\n    onClick: onExpand,\n    title: expandIconDescription,\n    \"aria-label\": ariaLabel\n  }, /*#__PURE__*/React.createElement(ChevronRight16, {\n    className: \"\".concat(prefix, \"--table-expand__svg\"),\n    \"aria-label\": expandIconDescription\n  })), children);\n};\n\nTableExpandHeader.propTypes = {\n  /**\n   * Specify the string read by a voice reader when the expand trigger is\n   * focused\n   */\n  ariaLabel: requiredIfGivenPropIsTruthy('enableExpando', PropTypes.string),\n  children: PropTypes.node,\n  className: PropTypes.string,\n\n  /**\n   * Specify whether an expand all button should be displayed\n   */\n  enableExpando: PropTypes.bool,\n\n  /**\n   * The description of the chevron right icon, to be put in its SVG `<title>` element.\n   */\n  expandIconDescription: PropTypes.string,\n\n  /**\n   * Specify whether this row is expanded or not. This helps coordinate data\n   * attributes so that `TableExpandRow` and `TableExapndedRow` work together\n   */\n  isExpanded: requiredIfGivenPropIsTruthy('enableExpando', PropTypes.bool),\n\n  /**\n   * Hook for when a listener initiates a request to expand the given row\n   */\n  onExpand: requiredIfGivenPropIsTruthy('enableExpando', PropTypes.func)\n};\nexport default TableExpandHeader;"]},"metadata":{},"sourceType":"module"}