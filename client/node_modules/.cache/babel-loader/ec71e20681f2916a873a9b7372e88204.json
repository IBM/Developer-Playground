{"ast":null,"code":"/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * @param {Function} name The name of the prop that must exist to validate\n * the current prop.\n * @param {Function} propType The original prop type checker.\n * @returns {Function} The new prop type checker for the current prop that\n * becomes required if the prop corresponding to the provided prop name exists.\n */\nexport default function requiredIfGivenPropIsTruthy(name, propType) {\n  return function check(props, propName, componentName) {\n    if (process.env.NODE_ENV !== \"production\" && props[name] == true && props[propName] == null) {\n      return new Error(\"You must provide a value for `\".concat(propName, \"` in `\").concat(componentName, \"` if `\").concat(name, \"` exists.\"));\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest));\n  };\n}","map":{"version":3,"sources":["/Users/nupurnegi/Desktop/UI_ongoingChanges/Developer-Playground/client/node_modules/carbon-components-react/es/prop-types/requiredIfGivenPropIsTruthy.js"],"names":["requiredIfGivenPropIsTruthy","name","propType","check","props","propName","componentName","process","env","NODE_ENV","Error","concat","_len","arguments","length","rest","Array","_key","apply"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASA,2BAAT,CAAqCC,IAArC,EAA2CC,QAA3C,EAAqD;AAClE,SAAO,SAASC,KAAT,CAAeC,KAAf,EAAsBC,QAAtB,EAAgCC,aAAhC,EAA+C;AACpD,QAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCL,KAAK,CAACH,IAAD,CAAL,IAAe,IAAxD,IAAgEG,KAAK,CAACC,QAAD,CAAL,IAAmB,IAAvF,EAA6F;AAC3F,aAAO,IAAIK,KAAJ,CAAU,iCAAiCC,MAAjC,CAAwCN,QAAxC,EAAkD,QAAlD,EAA4DM,MAA5D,CAAmEL,aAAnE,EAAkF,QAAlF,EAA4FK,MAA5F,CAAmGV,IAAnG,EAAyG,WAAzG,CAAV,CAAP;AACD;;AAED,SAAK,IAAIW,IAAI,GAAGC,SAAS,CAACC,MAArB,EAA6BC,IAAI,GAAG,IAAIC,KAAJ,CAAUJ,IAAI,GAAG,CAAP,GAAWA,IAAI,GAAG,CAAlB,GAAsB,CAAhC,CAApC,EAAwEK,IAAI,GAAG,CAApF,EAAuFA,IAAI,GAAGL,IAA9F,EAAoGK,IAAI,EAAxG,EAA4G;AAC1GF,MAAAA,IAAI,CAACE,IAAI,GAAG,CAAR,CAAJ,GAAiBJ,SAAS,CAACI,IAAD,CAA1B;AACD;;AAED,WAAOf,QAAQ,CAACgB,KAAT,CAAe,KAAK,CAApB,EAAuB,CAACd,KAAD,EAAQC,QAAR,EAAkBC,aAAlB,EAAiCK,MAAjC,CAAwCI,IAAxC,CAAvB,CAAP;AACD,GAVD;AAWD","sourcesContent":["/**\n * Copyright IBM Corp. 2016, 2018\n *\n * This source code is licensed under the Apache-2.0 license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * @param {Function} name The name of the prop that must exist to validate\n * the current prop.\n * @param {Function} propType The original prop type checker.\n * @returns {Function} The new prop type checker for the current prop that\n * becomes required if the prop corresponding to the provided prop name exists.\n */\nexport default function requiredIfGivenPropIsTruthy(name, propType) {\n  return function check(props, propName, componentName) {\n    if (process.env.NODE_ENV !== \"production\" && props[name] == true && props[propName] == null) {\n      return new Error(\"You must provide a value for `\".concat(propName, \"` in `\").concat(componentName, \"` if `\").concat(name, \"` exists.\"));\n    }\n\n    for (var _len = arguments.length, rest = new Array(_len > 3 ? _len - 3 : 0), _key = 3; _key < _len; _key++) {\n      rest[_key - 3] = arguments[_key];\n    }\n\n    return propType.apply(void 0, [props, propName, componentName].concat(rest));\n  };\n}"]},"metadata":{},"sourceType":"module"}