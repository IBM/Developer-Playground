{"version":3,"file":"create-codesandbox.js","sourceRoot":"","sources":["create-codesandbox.ts"],"names":[],"mappings":"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","sourcesContent":["import { getParameters } from 'codesandbox/lib/api/define';\n\nconst packageJSON = require('@carbon/charts/package.json');\nconst libraryVersion = packageJSON.version;\nconst carbonComponentsVersion =\n\tpackageJSON.devDependencies['carbon-components'];\n\nconst ibmPlexFontCSS = `@import \"https://fonts.googleapis.com/css?family=IBM+Plex+Sans+Condensed|IBM+Plex+Sans:400,600&display=swap\";\n`;\n\nexport const createChartSandbox = (chartTemplate: any) => {\n\tconst files = {};\n\n\tObject.keys(chartTemplate).forEach(\n\t\t(filePath) => (files[filePath] = { content: chartTemplate[filePath] })\n\t);\n\n\treturn `https://codesandbox.io/api/v1/sandboxes/define?parameters=${getParameters(\n\t\t{ files }\n\t)}`;\n};\n\nexport const createVanillaChartApp = (demo: any) => {\n\tconst chartData = JSON.stringify(demo.data, null, '\\t');\n\tconst chartOptions = JSON.stringify(demo.options, null, '\\t');\n\tconst chartComponent = demo.chartType.vanilla;\n\n\tconst indexHtml = `<html>\n\t<head>\n\t\t<title>Parcel Sandbox</title>\n\t\t<meta charset=\"UTF-8\" />\n\t\t<link href=\"https://fonts.googleapis.com/css?family=IBM+Plex+Sans+Condensed|IBM+Plex+Sans:400,600&display=swap\" rel=\"stylesheet\">\n\t</head>\n\t<body>\n\t\t<div id=\"app\" style=\"width: 100%; height: 100%;\"></div>\n\n\t\t<script src=\"src/index.js\"></script>\n\t</body>\n</html>`;\n\tconst indexJs = `import \"@carbon/charts/styles.css\";\nimport { ${chartComponent} } from \"@carbon/charts\";\n\nconst data = ${chartData};\n\nconst options = ${chartOptions};\n\n// Grab chart holder HTML element and initialize the chart\nconst chartHolder = document.getElementById(\"app\");\nnew ${chartComponent}(chartHolder, {\n\tdata,\n\toptions\n});\n`;\n\tconst packageJson = {\n\t\tscripts: {\n\t\t\tstart: 'parcel index.html --open',\n\t\t\tbuild: 'parcel build index.html',\n\t\t},\n\t\tdependencies: {\n\t\t\t'@carbon/charts': libraryVersion,\n\t\t\t'carbon-components': carbonComponentsVersion,\n\t\t\td3: '5.9.2',\n\t\t},\n\t\tdevDependencies: {\n\t\t\t'parcel-bundler': '^1.6.1',\n\t\t},\n\t};\n\n\treturn {\n\t\t'index.html': indexHtml,\n\t\t'src/index.js': indexJs,\n\t\t'package.json': packageJson,\n\t};\n};\n\nexport const createReactChartApp = (demo: any) => {\n\tconst chartData = JSON.stringify(demo.data, null, '\\t');\n\tconst chartOptions = JSON.stringify(demo.options, null, '\\t');\n\tconst chartComponent = demo.chartType.vanilla;\n\n\tconst indexHtml = `<div id=\"root\"></div>\n  `;\n\n\tconst indexJs = `import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { ${chartComponent} } from \"@carbon/charts-react\";\nimport \"@carbon/charts/styles.css\";\n// Or\n// import \"@carbon/charts/styles/styles.scss\";\n\n// IBM Plex should either be imported in your project by using Carbon\n// or consumed manually through an import\nimport \"./ibm-plex-font.css\";\n\nclass App extends React.Component {\n\tstate = {\n\t\tdata: ${chartData},\n\t\toptions: ${chartOptions}\n\t};\n\n\trender = () => (\n\t\t<${chartComponent}\n\t\t\tdata={this.state.data}\n\t\t\toptions={this.state.options}>\n\t\t</${chartComponent}>\n\t);\n}\nReactDOM.render(<App />, document.getElementById(\"root\"));\n  `;\n\tconst packageJson = {\n\t\tdependencies: {\n\t\t\t'@carbon/charts': libraryVersion,\n\t\t\t'@carbon/charts-react': libraryVersion,\n\t\t\td3: '5.12.0',\n\t\t\treact: '16.12.0',\n\t\t\t'react-dom': '16.12.0',\n\t\t\t'react-scripts': '3.0.1',\n\t\t\t'carbon-components': carbonComponentsVersion,\n\t\t},\n\t};\n\n\treturn {\n\t\t'src/index.html': indexHtml,\n\t\t'src/index.js': indexJs,\n\t\t'src/ibm-plex-font.css': ibmPlexFontCSS,\n\t\t'package.json': packageJson,\n\t};\n};\n\nexport const createAngularChartApp = (demo: any) => {\n\tconst chartData = JSON.stringify(demo.data, null, '\\t\\t');\n\tconst chartOptions = JSON.stringify(demo.options, null, '\\t\\t');\n\tconst chartComponent = demo.chartType.angular;\n\n\tconst appComponentHtml = `<${chartComponent} [data]=\"data\" [options]=\"options\"></${chartComponent}>`;\n\tconst appComponentTs = `import { Component } from \"@angular/core\";\n\nimport \"@carbon/charts/styles.css\";\n\n// IBM Plex should either be imported in your project by using Carbon\n// or consumed manually through an import\nimport \"./ibm-plex-font.css\";\n\n@Component({\n\tselector: \"app-root\",\n\ttemplateUrl: \"./app.component.html\"\n})\nexport class AppComponent {\n\tdata = ${chartData};\n\toptions = ${chartOptions};\n}`;\n\n\tconst appModule = `import { NgModule } from \"@angular/core\";\nimport { BrowserModule } from \"@angular/platform-browser\";\nimport { ChartsModule } from \"@carbon/charts-angular\";\nimport { AppComponent } from \"./app.component\";\n@NgModule({\n\timports: [BrowserModule, ChartsModule],\n\tdeclarations: [AppComponent],\n\tbootstrap: [AppComponent]\n})\nexport class AppModule {}`;\n\n\tconst indexHtml = `<!DOCTYPE html>\n<html lang=\"en\">\n\t<head>\n\t\t<meta charset=\"utf-8\" />\n\t\t<title>Angular</title>\n\t</head>\n\t<body>\n\t\t<app-root></app-root>\n\t</body>\n</html>`;\n\n\tconst mainTs = `import { platformBrowserDynamic } from \"@angular/platform-browser-dynamic\";\nimport { AppModule } from \"./app/app.module\";\nplatformBrowserDynamic()\n\t.bootstrapModule(AppModule)\n\t.catch(err => console.log(err));\n`;\n\n\tconst angularCliJson = `{\n\t\"apps\": [\n\t\t{\n\t\t\t\"root\": \"src\",\n\t\t\t\"outDir\": \"dist\",\n\t\t\t\"assets\": [\"assets\", \"favicon.ico\"],\n\t\t\t\"index\": \"index.html\",\n\t\t\t\"main\": \"main.ts\",\n\t\t\t\"polyfills\": \"polyfills.ts\",\n\t\t\t\"prefix\": \"app\",\n\t\t\t\"styles\": [\"styles.css\"],\n\t\t\t\"scripts\": [],\n\t\t\t\"environmentSource\": \"environments/environment.ts\",\n\t\t\t\"environments\": {\n\t\t\t\t\"dev\": \"environments/environment.ts\",\n\t\t\t\t\"prod\": \"environments/environment.prod.ts\"\n\t\t\t}\n\t\t}\n\t]\n}`;\n\n\tconst packageJson = JSON.stringify(\n\t\t{\n\t\t\tdependencies: {\n\t\t\t\t'@angular/animations': '8.2.14',\n\t\t\t\t'@angular/common': '8.2.14',\n\t\t\t\t'@angular/compiler': '8.2.14',\n\t\t\t\t'@angular/core': '8.2.14',\n\t\t\t\t'@angular/forms': '8.2.14',\n\t\t\t\t'@angular/platform-browser': '8.2.14',\n\t\t\t\t'@angular/platform-browser-dynamic': '8.2.14',\n\t\t\t\t'@angular/router': '8.2.14',\n\t\t\t\t'@carbon/charts': libraryVersion,\n\t\t\t\t'@carbon/charts-angular': libraryVersion,\n\t\t\t\t'core-js': '3.6.0',\n\t\t\t\td3: '5.15.0',\n\t\t\t\trxjs: '6.5.3',\n\t\t\t\t'zone.js': '0.10.2',\n\t\t\t},\n\t\t},\n\t\tnull,\n\t\t'\\t'\n\t);\n\n\treturn {\n\t\t'src/index.html': indexHtml,\n\t\t'src/main.ts': mainTs,\n\t\t'src/app/app.component.html': appComponentHtml,\n\t\t'src/app/app.component.ts': appComponentTs,\n\t\t'src/app/ibm-plex-font.css': ibmPlexFontCSS,\n\t\t'src/app/app.module.ts': appModule,\n\t\t'.angular-cli.json': angularCliJson,\n\t\t'package.json': packageJson,\n\t};\n};\n\nexport const createVueChartApp = (demo: any) => {\n\tconst chartData = JSON.stringify(demo.data, null, '\\t\\t');\n\tconst chartOptions = JSON.stringify(demo.options, null, '\\t\\t');\n\tconst chartComponent = demo.chartType.vue;\n\n\tconst chartVue = `<script>\nimport Vue from \"vue\";\nimport \"@carbon/charts/styles.css\";\nimport chartsVue from \"@carbon/charts-vue\";\n\n// IBM Plex should either be imported in your project by using Carbon\n// or consumed manually through an import\nimport \"../ibm-plex-font.css\";\n\nVue.use(chartsVue);\n\nexport default {\n\tname: \"Chart\",\n\tcomponents: {},\n\tdata() {\n\t\treturn {\n\t\t\tdata: ${chartData},\n\t\t\toptions: ${chartOptions}\n\t\t};\n\t},\n\ttemplate: \"<${chartComponent} :data='data' :options='options'></${chartComponent}>\"\n};\n</script>\n  `;\n\n\tconst appVue = `<template>\n\t<div id=\"app\">\n\t\t<Chart/>\n\t</div>\n</template>\n<script>\nimport Chart from \"./components/chart\";\nexport default {\n\tname: \"App\",\n\tcomponents: {\n\t\tChart\n\t}\n};\n</script>\n  `;\n\n\tconst mainJs = `import Vue from \"vue\";\nimport App from \"./App.vue\";\nVue.config.productionTip = false;\nnew Vue({\n\trender: h => h(App)\n}).$mount(\"#app\");\n`;\n\n\tconst packageJson = JSON.stringify(\n\t\t{\n\t\t\tdependencies: {\n\t\t\t\t'@carbon/charts': libraryVersion,\n\t\t\t\t'@carbon/charts-vue': libraryVersion,\n\t\t\t\t'@vue/cli-plugin-babel': '4.1.1',\n\t\t\t\t'carbon-components': carbonComponentsVersion,\n\t\t\t\td3: '5.15.0',\n\t\t\t\tvue: '^2.6.11',\n\t\t\t},\n\t\t},\n\t\tnull,\n\t\t'\\t\\t'\n\t);\n\n\treturn {\n\t\t'src/components/chart.vue': chartVue,\n\t\t'src/ibm-plex-font.css': ibmPlexFontCSS,\n\t\t'src/App.vue': appVue,\n\t\t'src/main.js': mainJs,\n\t\t'package.json': packageJson,\n\t};\n};\n\nexport const createSvelteChartApp = (demo: any) => {\n\tconst chartData = JSON.stringify(demo.data, null, '\\t');\n\tconst chartOptions = JSON.stringify(demo.options, null, '\\t');\n\n\tlet chartComponent = demo.chartType.vanilla;\n\n\tswitch (chartComponent) {\n\t\tcase 'SimpleBarChart':\n\t\t\tchartComponent = 'BarChartSimple';\n\t\t\tbreak;\n\t\tcase 'GroupedBarChart':\n\t\t\tchartComponent = 'BarChartGrouped';\n\t\t\tbreak;\n\t\tcase 'StackedBarChart':\n\t\t\tchartComponent = 'BarChartStacked';\n\t\t\tbreak;\n\t}\n\n\tconst indexJs = `import App from \"./App.svelte\";\n\nconst app = new App({ target: document.body });\n\nexport default app;\n`;\n\n\tconst App = `<script>\n  import { ${chartComponent} } from \"@carbon/charts-svelte\";\n</script>\n\n<svelte:head>\n  <link rel=\"stylesheet\" href=\"https://unpkg.com/@carbon/charts/styles.min.css\" />\n</svelte:head>\n\n<${chartComponent}\n\tdata={${chartData}}\n\toptions={${chartOptions}}\n\t/>\n`;\n\n\tconst packageJson = {\n\t\tscripts: {\n\t\t\tbuild: 'rollup -c',\n\t\t\tautobuild: 'rollup -c -w',\n\t\t\tdev: 'run-p start:dev autobuild',\n\t\t\tstart: 'sirv public',\n\t\t\t'start:dev': 'sirv public --dev',\n\t\t},\n\t\tdevDependencies: {\n\t\t\t'npm-run-all': '^4.1.5',\n\t\t\trollup: '^1.10.1',\n\t\t\t'rollup-plugin-commonjs': '^9.3.4',\n\t\t\t'rollup-plugin-node-resolve': '^4.2.3',\n\t\t\t'rollup-plugin-svelte': '^5.0.3',\n\t\t\t'rollup-plugin-terser': '^4.0.4',\n\t\t\t'sirv-cli': '^0.3.1',\n\t\t},\n\t\tdependencies: {\n\t\t\t'@carbon/charts': libraryVersion,\n\t\t\t'@carbon/charts-svelte': libraryVersion,\n\t\t\t'carbon-components': carbonComponentsVersion,\n\t\t\td3: '5.12.0',\n\t\t\tsvelte: '3.20.x',\n\t\t},\n\t};\n\n\tconst rollup = `import svelte from \"rollup-plugin-svelte\";\nimport resolve from \"rollup-plugin-node-resolve\";\nimport commonjs from \"rollup-plugin-commonjs\";\nimport { terser } from \"rollup-plugin-terser\";\nimport postcss from \"rollup-plugin-postcss\";\n\nconst production = !process.env.ROLLUP_WATCH;\n\nexport default {\n  input: \"index.js\",\n  output: {\n    sourcemap: true,\n    format: \"iife\",\n    name: \"app\",\n    file: \"public/bundle.js\"\n  },\n  plugins: [\n    postcss(),\n    svelte({\n      dev: !production,\n      css: css => {\n        css.write(\"public/bundle.css\");\n      }\n    }),\n    resolve(),\n    commonjs(),\n    production && terser()\n  ]\n};\n`;\n\n\treturn {\n\t\t'App.svelte': App,\n\t\t'index.js': indexJs,\n\t\t'package.json': packageJson,\n\t\t'rollup.config.js': rollup,\n\t};\n};\n"]}